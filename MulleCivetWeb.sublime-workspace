{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"UTF",
				"initWithUTF8String:\tinstancetype initWithUTF8String:(char *)"
			],
			[
				"initWit",
				"initWithCString:\tinstancetype initWithCString:(char *)"
			],
			[
				"mu",
				"mulle_objc_infraclass_alloc_instance"
			],
			[
				"init_",
				"init_thread\tvoid *(*)(const struct mg_context *, int) init_thread"
			],
			[
				"NSD",
				"NSData"
			],
			[
				"MULL",
				"MulleHTTPTransferEncodingChunked"
			],
			[
				"is",
				"is_ssl\tint is_ssl"
			],
			[
				"ur",
				"uri"
			],
			[
				"NS",
				"NSDateFormatter"
			],
			[
				"ch",
				"characterSet\tabc"
			],
			[
				"NSU",
				"NSURL+MulleQueryDictionary.h"
			],
			[
				"compo",
				"components\tabc"
			],
			[
				"key",
				"keyvalueComponents\tabc"
			],
			[
				"Mu",
				"MulleObjCValueFoundation"
			],
			[
				"NSC",
				"NSCharacterSet"
			],
			[
				"mull",
				"MulleObjCObjectContainerDescriptionInfo"
			],
			[
				"Mulle",
				"MulleObjCObjectContainerDescriptionInfo"
			],
			[
				"string",
				"stringWithUTF8String:\tinstancetype stringWithUTF8String:(char *)"
			],
			[
				"MulleObjCGetA",
				"MulleObjCObjectGetAllocator\tstruct mulle_allocator * MulleObjCObjectGetAllocator(id obj)"
			],
			[
				"proper",
				"propertyListUTF8DataToStream"
			],
			[
				"inden",
				"indentFunction"
			],
			[
				"NU",
				"NSUInteger\tNSUInteger"
			],
			[
				"mem",
				"memberMethod\tabc"
			],
			[
				"replace",
				"replaceBytesInRange\t(NSMutableData.m)"
			],
			[
				"pls",
				"plist_format_info\tabc"
			],
			[
				"pl",
				"plist_format_info\tabc"
			],
			[
				"n_",
				"_n_printor"
			],
			[
				"new",
				"newWithBOOL\tabc"
			],
			[
				"_v",
				"_headerValueDescriptionMethod\tabc"
			],
			[
				"perfor",
				"performSelector\t(NSURL.m)"
			],
			[
				"user",
				"userInfo\tabc"
			],
			[
				"erro",
				"errorWithName\tabc"
			],
			[
				"jsm",
				"jsmntok_t\tabc"
			],
			[
				"strin",
				"stringWithFormat\t(NSMutableString.m)"
			],
			[
				"parse",
				"parseBytes\t(MulleObjCHTTPHeaderParser.m)"
			],
			[
				"pars",
				"parseData\t(MulleObjCJSMNParser.h)"
			],
			[
				"MUl",
				"MulleObjCJSMNParser\tabc"
			],
			[
				"MulleOb",
				"MulleObjCJSMNParser\t(github-json.m)"
			],
			[
				"mulle_bu",
				"mulle_buffer_get_bytes"
			],
			[
				"UTF8",
				"UTF8String\t(NSMutableString.m)"
			],
			[
				"de",
				"description"
			],
			[
				"setHe",
				"setRequestHeaders\t(MulleObjCCurl.m)"
			],
			[
				"range",
				"rangeOfString\t(NSMutableString.m)"
			],
			[
				"mulle_buffer_ad",
				"mulle_buffer_add_byte\t(NSMutableString.m)"
			],
			[
				"mulle_buffer_get",
				"mulle_buffer_get_bytes"
			],
			[
				"mulle_buffer_init",
				"mulle_buffer_init_with_static_bytes\t(NSMutableString.m)"
			],
			[
				"mulle_",
				"mulle_utf8_t\tabc"
			],
			[
				"Mule",
				"MulleObjCCurl.h"
			],
			[
				"mulle",
				"MulleObjCCurl.h"
			],
			[
				"_o",
				"_recordsKeyOrder\tabc"
			],
			[
				"set",
				"setRecordsKeyOrder\t(MulleObjCHTTPHeaderParser.m)"
			],
			[
				"_",
				"_headers\tabc"
			],
			[
				"remove",
				"removeAllObjects\tabc"
			],
			[
				"import",
				"import-private.h"
			],
			[
				"isE",
				"isEqualToData\t(NSFileManager.m)"
			],
			[
				"Curl",
				"CURLcode\tabc"
			],
			[
				"u",
				"update_safe_clobber"
			],
			[
				"NSError",
				"NSLocalizedFailureReasonErrorKey\tNSString * NSLocalizedFailureReasonErrorKey"
			],
			[
				"mulleS",
				"mulleSetCurrentErrorWithDomain:code:userInfo:\tvoid mulleSetCurrentErrorWithDomain:(NSString *) code:(NSInteger) userInfo:(NSDictionary *)"
			],
			[
				"MU",
				"MulleObjCCurl"
			],
			[
				"par",
				"parseContentsOfURLString:byPostingData:\tid parseContentsOfURLString:(id) byPostingData:(id)"
			],
			[
				"_Pa",
				"_parser\tid<MulleObjCCurlParser> _parser"
			],
			[
				"in",
				"interface"
			],
			[
				"def",
				"setDefaultGroup"
			],
			[
				"des",
				"descriptionWithCalendarFormat:locale:\tNSString * descriptionWithCalendarFormat:(NSString *) locale:(id)"
			],
			[
				"stri",
				"stringForObjectValue: (InBase)\tNSString * stringForObjectValue:(id)"
			],
			[
				"data",
				"dataWithBytes:length:\tinstancetype dataWithBytes:(void *) length:(NSUInteger)"
			],
			[
				"firs",
				"firstWeekday\tabc"
			],
			[
				"monthFirst",
				"monthFirstWeekday\tabc"
			],
			[
				"_mi",
				"_minimumDaysInFirstWeek\t(NSCalendar.m)"
			],
			[
				"dat",
				"dateFromComponents\t(NSCalendar.h)"
			],
			[
				"day",
				"daysInYear\tabc"
			],
			[
				"numbe",
				"numberOfDaysInCommonEraOfDay:1"
			],
			[
				"mulle_e",
				"mulle_not_found_e"
			],
			[
				"mulle-con",
				"mulle-container-operation.h\t(_mulle-map.c)"
			],
			[
				"no",
				"notakey"
			],
			[
				"_s",
				"_storage"
			],
			[
				"thre",
				"threadDictionary"
			],
			[
				"_w",
				"_write_index\tabc"
			],
			[
				"min",
				"min_amount"
			],
			[
				"mulle_n",
				"mulle_nonnull_first_second"
			],
			[
				"_mulle_queue_re",
				"_mulle_queue_remove_all"
			],
			[
				"_em",
				"_emit_cmake_include_lookup"
			],
			[
				"PO",
				"PROJECT_NAME=\"${OPTION_NAME"
			],
			[
				"PRO",
				"PROJECT_LANGUAGE"
			],
			[
				"DI",
				"DIALECT_EXTENSION"
			],
			[
				"PRIO",
				"PROJECT_DIALECT"
			],
			[
				"C_RESE",
				"C_RESET_BOLD"
			],
			[
				"UP",
				"OPTION_UPGRADE"
			],
			[
				"MULLE_EXC",
				"MULLE_EXECUTABLE_NAME"
			],
			[
				"OP",
				"OPTION_FILE"
			],
			[
				"sed",
				"sed_escaped_key"
			],
			[
				"MULLE_",
				"MULLE_TRACE"
			],
			[
				"MULLE",
				"MULLE_VIRTUAL_ROOT\t(mulle-env-environment.sh)"
			],
			[
				"file",
				"filenameenv"
			],
			[
				"SOU",
				"SOURCETREE_FIX_FILE"
			],
			[
				"MULLE_SD",
				"MULLE_SDE_INSTALLED_EXTENSIONS"
			],
			[
				"OPTION",
				"OPTION_RECURSE"
			],
			[
				"mulle-env",
				"mulle-env-bash-completion"
			],
			[
				"MULLE_V",
				"MULLE_VIRTUAL_ROOT\t(mulle-env)"
			],
			[
				"DEF",
				"DEFAULT_IFS\t(mulle-env)"
			],
			[
				"OPT",
				"OPTION_TYPE"
			],
			[
				"fetch_plug",
				"fetch_plugin_load_all\t(mulle-fetch-plugin.sh)"
			],
			[
				"log_",
				"log_error"
			],
			[
				"MULLE_MO",
				"MULLE_MONITOR_LIBEXEC_DIR\t(mulle-monitor)"
			],
			[
				"MULLE_M",
				"MULLE_MONITOR_ETC_DIR"
			],
			[
				"DF",
				"DEFAULT_IFS"
			],
			[
				"writ",
				"write_dependency_file"
			],
			[
				"old",
				"oldflavor"
			],
			[
				"__get",
				"__get_user_style_flavor"
			],
			[
				"MULLE_ECE",
				"MULLE_EXECUTABLE_NAME"
			],
			[
				"CMAKE_SO",
				"CMAKE_SOURCETREE_UPDATE_FLAGS\t(cmake-sourcetree-update-task.sh)"
			],
			[
				"slo",
				"sloppy_distribute"
			],
			[
				"MO",
				"MULLE_FLAG_MOTD\t(mulle-craft)"
			],
			[
				"MULLE_FLAG",
				"MULLE_FLAG_MOTD\t(mulle-craft)"
			],
			[
				"CMake",
				"CMakeSourcesAndHeaders.txt"
			],
			[
				"MULLE_SOURC",
				"MULLE_SOURCETREE_SHARED_DIR"
			],
			[
				"a",
				"address"
			],
			[
				"node",
				"nodemarks_contain_norequire"
			],
			[
				"ne",
				"next_projectdir"
			],
			[
				"__c",
				"__concat_projectdir_address"
			],
			[
				"db_get",
				"db_get_filename_for_uuid"
			],
			[
				"update_",
				"update_safe_remove_node"
			],
			[
				"sa",
				"update_safe_remove_node"
			],
			[
				"_do",
				"__docd_preamble"
			],
			[
				"soure",
				"sourcetree"
			],
			[
				"OPTION_C",
				"OPTION_CALLBACK_ROOT"
			],
			[
				"db_clear",
				"db_clear_ready"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/MulleCivetWeb.h",
			"settings":
			{
				"buffer_size": 874,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MulleCivetWebServer.m",
			"settings":
			{
				"buffer_size": 9762,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MulleCivetWebServer.h",
			"settings":
			{
				"buffer_size": 3146,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "//\n//  MulleCivetWebResponse.h\n//  MulleCivetWeb\n//\n//  Created by Nat! on 02.02.20.\n//\n//  Copyright (c) 2020 Nat! - Mulle kybernetiK\n//  All rights reserved.\n//\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//\n//  Redistributions of source code must retain the above copyright notice, this\n//  list of conditions and the following disclaimer.\n//\n//  Redistributions in binary form must reproduce the above copyright notice,\n//  this list of conditions and the following disclaimer in the documentation\n//  and/or other materials provided with the distribution.\n//\n//  Neither the name of Mulle kybernetiK nor the names of its contributors\n//  may be used to endorse or promote products derived from this software\n//  without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n//  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n//  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n//  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n//  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n//  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n//  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n//  POSSIBILITY OF SUCH DAMAGE.\n//\n#import \"import.h\"\n\n\n@class MulleCivetWebRequest;\n\n\n//\n// abstract class: use a subclass that implements contentData\n// The WebResponse has the connection of the WebServer, it sends\n// its contents and header back. You cant't copy or retain a WebResponse, since\n// the _connection is gone after the response is through\n//\n@interface MulleCivetWebResponse : NSObject\n{\n   NSString              *_httpVersion;\n   NSMutableArray        *_orderedHeaderKeys;\n   NSMutableDictionary   *_headers;\n   void                  *_connection;\n}\n\n@property( assign) NSUInteger  status;\n@property( retain) NSString    *statusText;\n@property( retain) NSData      *contentData;\n@property( retain) NSDate      *date;  // useful for testing (usually nil)\n\n// use this to create a response, request can't be nil\n+ (instancetype) webResponseForWebRequest:(MulleCivetWebRequest *) request;\n\n\n// sending the response back\n- (BOOL) sendHeaderData;\n// sending the content back\n- (BOOL) sendContentData;\n\n// sendChunkedContentData will clear contentData, you can fill up again\n// and call this again (be sure to add \"chunked\" to the TransferEncodings\n// before sending the header\n//- (BOOL) sendChunkedHeaderData;\n- (BOOL) sendChunkedContentData;\n\n- (NSData *) headerDataUsingEncoding:(NSStringEncoding) encoding;\n\n- (void) addToTransferEncodings:(NSString *) s;\n- (BOOL) containsTransferEncoding:(NSString *) s;\n\n- (void) clearContentData;\n\n@end\n\n// something that returns text, like HTML or TXT or so\n@interface MulleCivetWebTextResponse : MulleCivetWebResponse\n{\n   NSMutableString   *_content;\n}\n\n@property( assign) NSStringEncoding   encoding;\n\n- (void) appendString:(NSString *) s;\n- (void) appendLine:(NSString *) s;  // adds CR/LF\n\n@end\n",
			"file": "src/MulleCivetWebResponse.h",
			"file_size": 3389,
			"file_write_time": 132278731469257465,
			"settings":
			{
				"buffer_size": 3391,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1249 files for \"mg_send_chunk\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  130     isChunked  = [response containsTransferEncoding:MulleHTTPTransferEncodingChunked];\n  131     if( isChunked)\n  132:       mg_send_chunk( _ctx, bytes, length);\n  133     else\n  134        mg_write( _ctx,  bytes, length);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/civetweb:\n    <binary>\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/APIReference.md:\n  115  * [`mg_printf( conn, fmt, ... );`](api/mg_printf.md)\n  116  * [`mg_read( conn, buf, len );`](api/mg_read.md)\n  117: * [`mg_send_chunk( conn, buf, len );`](api/mg_send_chunk.md)\n  118  * [`mg_send_file( conn, path );`](api/mg_send_file_body.md)\n  119  * [`mg_set_user_connection_data( conn, data );`](api/mg_set_user_connection_data.md)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/api/mg_send_chunk.md:\n    1  # Civetweb API Reference\n    2  \n    3: ### `mg_send_chunk( conn, buf, len );`\n    4  \n    5  ### Parameters\n    .\n   19  ### Description\n   20  \n   21: The function `mg_send_chunk()` can be used to send a blob of arbitrary data over a connection. \n   22  Only use this function after sending a complete HTTP request or response header with \"Transfer-Encoding: chunked\" set. Otherwise: use `mg_write()`.\n   23  The function returns a number **>0** if data was sent, the value **0** when the connection has been closed, and **-1** in case of an error.\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/api/mg_send_http_ok.md:\n   22  A proper content type (`mime_type`) has to be supplied (e.g., \"text/plain\", \"text/html\", \"application/json\", ...)\n   23  The. `status_code` must be one of the predefined HTTP standard error codes (e.g., \"404\" for \"Not Found\").\n   24: The `content_len` specifies the size of the response body in bytes. If the size is not yet known, a value of -1 could be supplied to select chunked transfer encoding. After `mg_send_http_ok()`, the server callback must send body, either using [`mg_write`](mg_write.md) (typical for known `content_len`), or using [`mg_send_chunk`](mg_send_chunk.md) (chunked encoding for unknown content length).\n   25  \n   26  \n   ..\n   30  * [`mg_send_http_redirect();`](mg_send_http_redirect.md)\n   31  * [`mg_write();`](mg_write.md)\n   32: * [`mg_send_chunk();`](mg_send_chunk.md)\n   33  \n   34  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/embedded_c/embedded_c.c:\n  575  \twhile (r > 0) {\n  576  \t\tr_total += r;\n  577: \t\ts = mg_send_chunk(conn, buf, r);\n  578  \t\tif (r != s) {\n  579  \t\t\t/* Send error */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/include/civetweb.h:\n  928   * Only use this function after sending a complete HTTP request or response\n  929   * header with \"Transfer-Encoding: chunked\" set. */\n  930: CIVETWEB_API int mg_send_chunk(struct mg_connection *conn,\n  931                                 const char *chunk,\n  932                                 unsigned int chunk_len);\n  ...\n  964  \n  965  /* Send \"HTTP 200 OK\" response header.\n  966:  * After calling this function, use mg_write or mg_send_chunk to send the\n  967   * response body.\n  968   * Parameters:\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/civetweb.c:\n 6936  /* Send a chunk, if \"Transfer-Encoding: chunked\" is used */\n 6937  int\n 6938: mg_send_chunk(struct mg_connection *conn,\n 6939                const char *chunk,\n 6940                unsigned int chunk_len)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/mod_zlib.inl:\n   93  \t\t\tbytes_avail = MG_BUF_LEN - zstream.avail_out;\n   94  \t\t\tif (bytes_avail) {\n   95: \t\t\t\tif (mg_send_chunk(conn, (char *)out_buf, bytes_avail) < 0) {\n   96  \t\t\t\t\tzret = -98;\n   97  \t\t\t\t\tbreak;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/unittest/public_server.c:\n  929  \n  930  \tfor (i = 1; i <= 10; i++) {\n  931: \t\tmg_send_chunk(conn, chunk_data, (unsigned)i);\n  932  \t}\n  933  \n  934: \tmg_send_chunk(conn, 0, 0);\n  935  \tmark_point();\n  936  \n\n17 matches across 10 files\n\n\nSearching 1249 files for \"writeWebResponse\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   72  - (NSUInteger) handleWebRequest:(MulleCivetWebRequest *) request;\n   73  \n   74: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   75                 onlyHeader:(BOOL) onlyHeader;\n   76  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  100                                duringWebRequest:request];\n  101  \n  102:    [self writeWebResponse:response\n  103                 onlyHeader:NO];\n  104  \n  ...\n  107  \n  108  \n  109: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n  110                 onlyHeader:(BOOL) onlyHeader\n  111  {\n  ...\n  159  \n  160     NSCParameterAssert( response);\n  161:    [self writeWebResponse:response\n  162                 onlyHeader:[request method] == MulleHTTPHead];\n  163  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (void) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (void) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (void) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n7 matches across 5 files\n\n\nSearching 1249 files for \"writeWebResponse\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   76  // except if onlyHeader is YES\n   77  //\n   78: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response;\n   79  \n   80  @end\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  100                                duringWebRequest:request];\n  101  \n  102:    [self writeWebResponse:response\n  103                 onlyHeader:NO];\n  104  \n  ...\n  107  \n  108  \n  109: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n  110  {\n  111     NSData       *headerData;\n  ...\n  173  \n  174     NSCParameterAssert( response);\n  175:    [self writeWebResponse:response\n  176                 onlyHeader:[request method] == MulleHTTPHead];\n  177  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   23     [response addTransferEncoding:MulleHTTPTransferEncodingChunked];\n   24  \n   25:    [server writeWebResponse:response\n   26                   onlyHeader:YES];\n   27  \n   28     [response appendLine:@\"Reply\"];\n   29:    [server writeWebResponse:response\n   30                   onlyHeader:YES];\n   31     [response appendLine:@\"---------------------\"];\n\n8 matches across 5 files\n\n\nSearching 1249 files for \"onlyHe\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   74  //\n   75  // the contentData of the response will be cleared afterwards\n   76: // except if onlyHeader is YES\n   77  //\n   78  - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  127           return( NO);\n  128     }\n  129:    if( [response onlyHeader])\n  130        return( YES);\n  131  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   12  \n   13  - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14:                onlyHeader:(BOOL) onlyHeader\n   15  {\n   16     NSData   *headerData;\n   ..\n   19     headerData = [response headerDataUsingEncoding:NSUTF8StringEncoding];\n   20     printf( \"%.*s\", (int) [headerData length], [headerData bytes]);\n   21:    if( onlyHeader)\n   22        return;\n   23  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   12  \n   13  - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14:                onlyHeader:(BOOL) onlyHeader\n   15  {\n   16     NSData   *headerData;\n   ..\n   19     headerData = [response headerDataUsingEncoding:NSUTF8StringEncoding];\n   20     printf( \"%.*s\", (int) [headerData length], [headerData bytes]);\n   21:    if( onlyHeader)\n   22        return;\n   23  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   24  \n   25     [server writeWebResponse:response\n   26:                  onlyHeader:YES];\n   27  \n   28     [response appendLine:@\"Reply\"];\n   29     [server writeWebResponse:response\n   30:                  onlyHeader:YES];\n   31     [response appendLine:@\"---------------------\"];\n   32     [response appendString:@\"URL: \"];\n\n10 matches across 5 files\n\n\nSearching 1249 files for \"setOnlyHeader\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n   73     response = [[[self alloc] initWithHTTPVersion:[request HTTPVersion]] autorelease];\n   74     if( [request method] == MulleHTTPHead)\n   75:       [response setOnlyHeader:YES];\n   76     return( response);\n   77  }\n\n1 match in 1 file\n\n\nSearching 1249 files for \"clearContentData\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n   82  - (BOOL) containsTransferEncoding:(NSString *) s;\n   83  \n   84: - (void) clearContentData;\n   85  \n   86  @end\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n  114  \n  115  \n  116: - (void) clearContentData\n  117  {\n  118     [_contentData autorelease];\n  ...\n  264  \n  265  \n  266: - (void) clearContentData\n  267  {\n  268     [_content setString:@\"\"];\n  269:    [super clearContentData];\n  270  }\n  271  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  146  \n  147     // reset contentData for chunked (and for consistency also for non-chunked)\n  148:    [response clearContentData];\n  149  \n  150     return( rval == -1 ? NO : YES);\n\n5 matches across 3 files\n\n\nSearching 1249 files for \"containsTransferEncoding\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n   80  \n   81  - (void) addToTransferEncoding:(NSString *) s;\n   82: - (BOOL) containsTransferEncoding:(NSString *) s;\n   83  \n   84  - (void) clearContentData;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n  203  \n  204  \n  205: - (BOOL) containsTransferEncoding:(NSString *) s\n  206  {\n  207     NSString   *value;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  139  \n  140     bytes       = [contentData bytes];\n  141:    isChunked   = [response containsTransferEncoding:MulleHTTPTransferEncodingChunked];\n  142     if( isChunked)\n  143        rval = mg_send_chunk( _ctx, bytes, length);\n\n3 matches across 3 files\n\n\nSearching 1249 files for \"MulleCivetWebResponse\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/README.md:\n   32  \n   33  The request handler will receive `MulleCivetWebRequests` and return\n   34: `MulleCivetWebResponses`:\n   35  \n   36  ``` objc\n   37  @implementation MyRequestHandler\n   38  \n   39: - (MulleCivetWebResponse *) webResponseForWebRequest:(MulleCivetWebRequest *) request\n   40  {\n   41     MulleCivetWebTextResponse  *response;\n   ..\n   57  `MulleCivetWebServer`       | The WebServer class. Add your request handler to it.\n   58  `MulleCivetWebRequest`      | Requests as received by the MulleCivetWebServer\n   59: `MulleCivetWebResponse`     | Responses returned by a request handler. They contain header information and the reponse content.\n   60: `MulleCivetWebTextResponse` | Subclass of MulleCivetWebResponse to produce plain text, JSON, HTML...\n   61  \n   62  \n\n/Volumes/Source/srcO/MulleCivetWeb/cmake/_Headers.cmake:\n   18  set( PUBLIC_HEADERS\n   19  src/MulleCivetWebRequest.h\n   20: src/MulleCivetWebResponse.h\n   21  src/MulleCivetWebServer.h\n   22  src/MulleCivetWeb.h\n\n/Volumes/Source/srcO/MulleCivetWeb/cmake/_Sources.cmake:\n    8  set( SOURCES\n    9  src/MulleCivetWebRequest.m\n   10: src/MulleCivetWebResponse.m\n   11  src/MulleCivetWebServer.m\n   12  src/MulleCivetWeb.m\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWeb.h:\n   41  \n   42  #import \"MulleCivetWebRequest.h\"\n   43: #import \"MulleCivetWebResponse.h\"\n   44  #import \"MulleCivetWebServer.h\"\n   45  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n    1  //\n    2: //  MulleCivetWebResponse.h\n    3  //  MulleCivetWeb\n    4  //\n    .\n   40  \n   41  \n   42: @protocol MulleCivetWebResponse\n   43  \n   44  - (NSData *) headerDataUsingEncoding:(NSStringEncoding) encoding;\n   ..\n   48  \n   49  @end\n   50: @class MulleCivetWebResponse;\n   51  \n   52  \n   ..\n   54  // abstract class: use a subclass that implements contentData\n   55  //\n   56: @interface MulleCivetWebResponse : NSObject <MulleCivetWebResponse>\n   57  {\n   58     NSString              *_httpVersion;\n   ..\n   87  \n   88  // something that returns text, like HTML or TXT or so\n   89: @interface MulleCivetWebTextResponse : MulleCivetWebResponse\n   90  {\n   91     NSMutableString   *_content;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n    1  //\n    2: //  MulleCivetWebResponse.h\n    3  //  MulleCivetWeb\n    4  //\n    .\n   34  //  POSSIBILITY OF SUCH DAMAGE.\n   35  //\n   36: #import \"MulleCivetWebResponse.h\"\n   37  \n   38  #import \"MulleCivetWebRequest.h\"\n   ..\n   44  \n   45  \n   46: @implementation MulleCivetWebResponse\n   47  \n   48  - (instancetype) initWithHTTPVersion:(NSString *) s\n   ..\n   69  + (instancetype) webResponseForWebRequest:(MulleCivetWebRequest *) request\n   70  {\n   71:    MulleCivetWebResponse   *response;\n   72  \n   73     response = [[[self alloc] initWithHTTPVersion:[request HTTPVersion]] autorelease];\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   37  \n   38  \n   39: @protocol MulleCivetWebResponse;\n   40  @class MulleCivetWebRequest;\n   41: @class MulleCivetWebResponse;\n   42  @class MulleCivetWebServer;\n   43  \n   ..\n   47  // maybe too much web here ? :)\n   48  \n   49:  - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   50                webResponseForWebRequest:(MulleCivetWebRequest *) request;\n   51  \n   52   @optional\n   53:  - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   54                 webResponseForException:(NSException *) exception\n   55                        duringWebRequest:(MulleCivetWebRequest *) request;\n   ..\n   76  // except if onlyHeader is YES\n   77  //\n   78: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response;\n   79  \n   80  @end\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n   38  #import \"MulleCivetWebRequest.h\"\n   39  #import \"MulleCivetWebRequest+Private.h\"\n   40: #import \"MulleCivetWebResponse.h\"\n   41  #import \"MulleHTTP.h\"\n   42  \n   ..\n   51  \n   52  \n   53: - (MulleCivetWebResponse *) webResponseForException:(NSException *) exception\n   54                                     duringWebRequest:(MulleCivetWebRequest *) request\n   55  {\n   ..\n   74  \n   75  \n   76: - (MulleCivetWebResponse *) webResponse404ForWebRequest:(MulleCivetWebRequest *) request\n   77  {\n   78     MulleCivetWebTextResponse   *textResponse;\n   ..\n   88                duringWebRequest:(MulleCivetWebRequest *) request\n   89  {\n   90:    MulleCivetWebResponse   *response;\n   91  \n   92     response = nil;\n   ..\n  106  \n  107  \n  108: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n  109  {\n  110     NSData       *headerData;\n  ...\n  154  - (NSUInteger) handleWebRequest:(MulleCivetWebRequest *) request\n  155  {\n  156:    id <MulleCivetWebResponse>  response;\n  157  \n  158     //\n\n/Volumes/Source/srcO/MulleCivetWeb/src/objc-loader.inc:\n    2        { @selector( MulleCivetWebRequest), @selector( Private) },      // 40de10e7;MulleCivetWebRequest;01f2cacd;Private\n    3        { @selector( MulleCivetWebRequest), MULLE_OBJC_NO_CATEGORYID },      // 40de10e7;MulleCivetWebRequest;;\n    4:       { @selector( MulleCivetWebResponse), MULLE_OBJC_NO_CATEGORYID },      // f07fcd21;MulleCivetWebResponse;;\n    5        { @selector( MulleCivetWebServer), MULLE_OBJC_NO_CATEGORYID },      // 7d0338e7;MulleCivetWebServer;;\n    6        { @selector( MulleCivetWebTextResponse), MULLE_OBJC_NO_CATEGORYID },      // 717eadd0;MulleCivetWebTextResponse;;\n\n/Volumes/Source/srcO/MulleCivetWeb/test/10_generated/MulleCivetWebResponse/test.m:\n   19  static void   test_noleak( void)\n   20  {\n   21:    MulleCivetWebResponse  *obj;\n   22  \n   23     @autoreleasepool\n   ..\n   25        @try\n   26        {\n   27:          obj = [[[MulleCivetWebResponse alloc] initWithHTTPVersion:nil] autorelease];\n   28           if( ! obj)\n   29           {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14  {\n   15     NSData   *headerData;\n   ..\n   28  \n   29  \n   30: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   31               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   32  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n   ..\n   29  \n   30  \n   31: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   32               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   33  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   11  @implementation MyWebRequestHandler\n   12  \n   13: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   14               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   15  {\n\n37 matches across 13 files\n\n\nSearching 1249 files for \"MulleCivetWebResponse\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/README.md:\n   32  \n   33  The request handler will receive `MulleCivetWebRequests` and return\n   34: `MulleCivetWebResponses`:\n   35  \n   36  ``` objc\n   37  @implementation MyRequestHandler\n   38  \n   39: - (MulleCivetWebResponse *) webResponseForWebRequest:(MulleCivetWebRequest *) request\n   40  {\n   41     MulleCivetWebTextResponse  *response;\n   ..\n   57  `MulleCivetWebServer`       | The WebServer class. Add your request handler to it.\n   58  `MulleCivetWebRequest`      | Requests as received by the MulleCivetWebServer\n   59: `MulleCivetWebResponse`     | Responses returned by a request handler. They contain header information and the reponse content.\n   60: `MulleCivetWebTextResponse` | Subclass of MulleCivetWebResponse to produce plain text, JSON, HTML...\n   61  \n   62  \n\n/Volumes/Source/srcO/MulleCivetWeb/cmake/_Headers.cmake:\n   18  set( PUBLIC_HEADERS\n   19  src/MulleCivetWebRequest.h\n   20: src/MulleCivetWebResponse.h\n   21  src/MulleCivetWebServer.h\n   22  src/MulleCivetWeb.h\n\n/Volumes/Source/srcO/MulleCivetWeb/cmake/_Sources.cmake:\n    8  set( SOURCES\n    9  src/MulleCivetWebRequest.m\n   10: src/MulleCivetWebResponse.m\n   11  src/MulleCivetWebServer.m\n   12  src/MulleCivetWeb.m\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWeb.h:\n   41  \n   42  #import \"MulleCivetWebRequest.h\"\n   43: #import \"MulleCivetWebResponse.h\"\n   44  #import \"MulleCivetWebServer.h\"\n   45  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n    1  //\n    2: //  MulleCivetWebResponse.h\n    3  //  MulleCivetWeb\n    4  //\n    .\n   40  \n   41  \n   42: @protocol MulleCivetWebResponse\n   43  \n   44  - (NSData *) headerDataUsingEncoding:(NSStringEncoding) encoding;\n   ..\n   48  \n   49  @end\n   50: @class MulleCivetWebResponse;\n   51  \n   52  \n   ..\n   54  // abstract class: use a subclass that implements contentData\n   55  //\n   56: @interface MulleCivetWebResponse : NSObject <MulleCivetWebResponse>\n   57  {\n   58     NSString              *_httpVersion;\n   ..\n   87  \n   88  // something that returns text, like HTML or TXT or so\n   89: @interface MulleCivetWebTextResponse : MulleCivetWebResponse\n   90  {\n   91     NSMutableString   *_content;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n    1  //\n    2: //  MulleCivetWebResponse.h\n    3  //  MulleCivetWeb\n    4  //\n    .\n   34  //  POSSIBILITY OF SUCH DAMAGE.\n   35  //\n   36: #import \"MulleCivetWebResponse.h\"\n   37  \n   38  #import \"MulleCivetWebRequest.h\"\n   ..\n   44  \n   45  \n   46: @implementation MulleCivetWebResponse\n   47  \n   48  - (instancetype) initWithHTTPVersion:(NSString *) s\n   ..\n   69  + (instancetype) webResponseForWebRequest:(MulleCivetWebRequest *) request\n   70  {\n   71:    MulleCivetWebResponse   *response;\n   72  \n   73     response = [[[self alloc] initWithHTTPVersion:[request HTTPVersion]] autorelease];\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   37  \n   38  \n   39: @class MulleCivetWebResponse;\n   40  @class MulleCivetWebRequest;\n   41: @class MulleCivetWebResponse;\n   42  @class MulleCivetWebServer;\n   43  \n   ..\n   47  // maybe too much web here ? :)\n   48  \n   49:  - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   50                webResponseForWebRequest:(MulleCivetWebRequest *) request;\n   51  \n   52   @optional\n   53:  - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   54                 webResponseForException:(NSException *) exception\n   55                        duringWebRequest:(MulleCivetWebRequest *) request;\n   ..\n   76  // except if onlyHeader is YES\n   77  //\n   78: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response;\n   79  \n   80  @end\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n   38  #import \"MulleCivetWebRequest.h\"\n   39  #import \"MulleCivetWebRequest+Private.h\"\n   40: #import \"MulleCivetWebResponse.h\"\n   41  #import \"MulleHTTP.h\"\n   42  \n   ..\n   51  \n   52  \n   53: - (MulleCivetWebResponse *) webResponseForException:(NSException *) exception\n   54                                     duringWebRequest:(MulleCivetWebRequest *) request\n   55  {\n   ..\n   74  \n   75  \n   76: - (MulleCivetWebResponse *) webResponse404ForWebRequest:(MulleCivetWebRequest *) request\n   77  {\n   78     MulleCivetWebTextResponse   *textResponse;\n   ..\n   88                duringWebRequest:(MulleCivetWebRequest *) request\n   89  {\n   90:    MulleCivetWebResponse   *response;\n   91  \n   92     response = nil;\n   ..\n  106  \n  107  \n  108: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n  109  {\n  110     NSData       *headerData;\n  ...\n  154  - (NSUInteger) handleWebRequest:(MulleCivetWebRequest *) request\n  155  {\n  156:    id <MulleCivetWebResponse>  response;\n  157  \n  158     //\n\n/Volumes/Source/srcO/MulleCivetWeb/src/objc-loader.inc:\n    2        { @selector( MulleCivetWebRequest), @selector( Private) },      // 40de10e7;MulleCivetWebRequest;01f2cacd;Private\n    3        { @selector( MulleCivetWebRequest), MULLE_OBJC_NO_CATEGORYID },      // 40de10e7;MulleCivetWebRequest;;\n    4:       { @selector( MulleCivetWebResponse), MULLE_OBJC_NO_CATEGORYID },      // f07fcd21;MulleCivetWebResponse;;\n    5        { @selector( MulleCivetWebServer), MULLE_OBJC_NO_CATEGORYID },      // 7d0338e7;MulleCivetWebServer;;\n    6        { @selector( MulleCivetWebTextResponse), MULLE_OBJC_NO_CATEGORYID },      // 717eadd0;MulleCivetWebTextResponse;;\n\n/Volumes/Source/srcO/MulleCivetWeb/test/10_generated/MulleCivetWebResponse/test.m:\n   19  static void   test_noleak( void)\n   20  {\n   21:    MulleCivetWebResponse  *obj;\n   22  \n   23     @autoreleasepool\n   ..\n   25        @try\n   26        {\n   27:          obj = [[[MulleCivetWebResponse alloc] initWithHTTPVersion:nil] autorelease];\n   28           if( ! obj)\n   29           {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14  {\n   15     NSData   *headerData;\n   ..\n   28  \n   29  \n   30: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   31               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   32  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n   ..\n   29  \n   30  \n   31: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   32               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   33  {\n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   11  @implementation MyWebRequestHandler\n   12  \n   13: - (MulleCivetWebResponse *) webServer:(MulleCivetWebServer *) server\n   14               webResponseForWebRequest:(MulleCivetWebRequest *) request\n   15  {\n\n37 matches across 13 files\n\n\nSearching 1249 files for \"MulleCivetWebResponse>\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   76  // except if onlyHeader is YES\n   77  //\n   78: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response;\n   79  \n   80  @end\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  106  \n  107  \n  108: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n  109  {\n  110     NSData       *headerData;\n  ...\n  154  - (NSUInteger) handleWebRequest:(MulleCivetWebRequest *) request\n  155  {\n  156:    id <MulleCivetWebResponse>  response;\n  157  \n  158     //\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14  {\n   15     NSData   *headerData;\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n5 matches across 4 files\n\n\nSearching 1249 files for \"MulleCivetWebResponse>\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  154  - (NSUInteger) handleWebRequest:(MulleCivetWebRequest *) request\n  155  {\n  156:    id <MulleCivetWebResponse>  response;\n  157  \n  158     //\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14  {\n   15     NSData   *headerData;\n\n/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m:\n   11  @implementation TestWebServer\n   12  \n   13: - (BOOL) writeWebResponse:(id <MulleCivetWebResponse>) response\n   14                 onlyHeader:(BOOL) onlyHeader\n   15  {\n\n3 matches across 3 files\n\n\nSearching 1249 files for \"TransferEncoding\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n   68  - (NSData *) headerDataUsingEncoding:(NSStringEncoding) encoding;\n   69  \n   70: - (void) addToTransferEncoding:(NSString *) s;\n   71: - (BOOL) containsTransferEncoding:(NSString *) s;\n   72  \n   73  - (void) clearContentData;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n  186  // Transfer-Encoding: identity\n  187  \n  188: - (void) addToTransferEncoding:(NSString *) s\n  189  {\n  190     NSString         *value;\n  ...\n  192     NSMutableArray   *array;\n  193  \n  194:    value = [_headers objectForKey:MulleHTTPTransferEncodingKey];\n  195     if( ! value)\n  196        value = s;\n  ...\n  199                                              separator:@\",\"]; // check for dupe\n  200     [_headers setObject:value\n  201:                 forKey:MulleHTTPTransferEncodingKey];\n  202  }\n  203  \n  204  \n  205: - (BOOL) containsTransferEncoding:(NSString *) s\n  206  {\n  207     NSString   *value;\n  208  \n  209:    value = [_headers objectForKey:MulleHTTPTransferEncodingKey];\n  210     return( [value mulleRangeOfListComponent:s\n  211                                    separator:@\",\"].length != 0);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  139  \n  140     bytes       = [contentData bytes];\n  141:    isChunked   = [response containsTransferEncoding:MulleHTTPTransferEncodingChunked];\n  142     if( isChunked)\n  143        rval = mg_send_chunk( _ctx, bytes, length);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleHTTP.h:\n   78  #define MulleHTTPTEKey                  @\"TE\"\n   79  #define MulleHTTPTrailerKey             @\"Trailer\"\n   80: #define MulleHTTPTransferEncodingKey    @\"Transfer-Encoding\"\n   81  #define MulleHTTPUpgradeKey             @\"Upgrade\"\n   82  #define MulleHTTPUserAgentKey           @\"User-Agent\"\n   ..\n   87  \n   88  \n   89: #define MulleHTTPTransferEncodingChunked      @\"chunked\"\n   90: #define MulleHTTPTransferEncodingCompressed   @\"compress\"\n   91: #define MulleHTTPTransferEncodingDeflate      @\"deflate\"\n   92: #define MulleHTTPTransferEncodingGzip         @\"gzip\"\n   93: #define MulleHTTPTransferEncodingIdentity     @\"identity\"\n   94  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m:\n   25     contentData = [request contentData];\n   26     [response setDate:[NSDate dateWithTimeIntervalSinceReferenceDate:0]];\n   27:    [response addTransferEncoding:MulleHTTPTransferEncodingChunked];\n   28  \n   29     [server writeWebResponse:response];  // sends header\n   ..\n   72     headers = @{\n   73                    MulleHTTPContentTypeKey: @\"text/plain; charset=utf-8\",\n   74:                   MulleHTTPTransferEncodingKey: MulleHTTPTransferEncodingChunked\n   75                };\n   76  \n\n19 matches across 5 files\n\n\nSearching 1254 files for \"_server_name\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h:\n   64  {\n   65     void   *_ctx;\n   66:    char   _server_name[ 80];\n   67     char   _isReady;\n   68  }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  307     memset( &callbacks, 0, sizeof(callbacks));\n  308  \n  309:    snprintf( _server_name, sizeof( _server_name), \"MulleCivetWeb (civetweb v. %.32s)\",\n  310              mg_version());\n  311  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/civetweb:\n    <binary>\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/civetweb.c:\n 1872  #define SSL_ERROR_WANT_ACCEPT (8)\n 1873  \n 1874: #define TLSEXT_TYPE_server_name (0)\n 1875  #define TLSEXT_NAMETYPE_host_name (0)\n 1876  #define SSL_TLSEXT_ERR_OK (0)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/main.c:\n  173  \n  174  \n  175: static char g_server_base_name[40]; /* Set by init_server_name() */\n  176  \n  177: static const char *g_server_name; /* Default from init_server_name,\n  178                                     * updated later from the server config */\n  179: static const char *g_icon_name;   /* Default from init_server_name,\n  180                                     * updated later from the server config */\n  181: static const char *g_website;     /* Default from init_server_name,\n  182                                     * updated later from the server config */\n  183: static int g_num_add_domains;     /* Default from init_server_name,\n  184                                     * updated later from the server config */\n  185: static const char **g_add_domain; /* Default from init_server_name,\n  186                                     * updated later from the server config */\n  187  static int g_hide_tray = 0;       /* Default = do not hide (0),\n  ...\n  262  \n  263  static void\n  264: show_server_name(void)\n  265  {\n  266  #if defined(WIN32)\n  ...\n  282  \t}\n  283  \n  284: \tshow_server_name();\n  285  \n  286  \tfprintf(stderr, \"\\nUsage:\\n\");\n  ...\n  588  \t\t * Do not add it to options, and return OK */\n  589  \t\tif (!strcmp(name, main_config_options[OPTION_TITLE].name)) {\n  590: \t\t\tg_server_name = sdup(value);\n  591  \t\t\treturn 1;\n  592  \t\t}\n  ...\n  920  \n  921  static void\n  922: init_server_name(void)\n  923  {\n  924  \tDEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])\n  ...\n  929  \t         \"CivetWeb V%s\",\n  930  \t         mg_version());\n  931: \tg_server_name = g_server_base_name;\n  932  \tg_icon_name = NULL;\n  933  \tg_website = \"http://civetweb.github.io/civetweb/\";\n  ...\n 1279  \t\t        \"\\n%s (%s)\\n%s\\n\",\n 1280  \t\t        g_server_base_name,\n 1281: \t\t        g_server_name,\n 1282  \t\t        g_system_info);\n 1283  \n ....\n 1328  \t\texit(run_lua(argv[2]));\n 1329  #else\n 1330: \t\tshow_server_name();\n 1331  \t\tfprintf(stderr, \"\\nError: Lua support not enabled\\n\");\n 1332  \t\texit(EXIT_FAILURE);\n ....\n 1346  \t\texit(run_duktape(argv[2]));\n 1347  #else\n 1348: \t\tshow_server_name();\n 1349  \t\tfprintf(stderr, \"\\nError: Ecmascript support not enabled\\n\");\n 1350  \t\texit(EXIT_FAILURE);\n ....\n 1414  \tif (g_ctx == NULL) {\n 1415  \t\tdie(\"Failed to start %s:\\n%s\",\n 1416: \t\t    g_server_name,\n 1417  \t\t    ((g_user_data.first_message == NULL) ? \"unknown reason\"\n 1418  \t\t                                         : g_user_data.first_message));\n ....\n 1520  \tss.dwControlsAccepted = SERVICE_ACCEPT_STOP | SERVICE_ACCEPT_SHUTDOWN;\n 1521  \n 1522: \thStatus = RegisterServiceCtrlHandler(g_server_name, ControlHandler);\n 1523  \tSetServiceStatus(hStatus, &ss);\n 1524  \n ....\n 1794  \t\tSendMessage(hDlg, WM_SETICON, (WPARAM)ICON_SMALL, (LPARAM)hIcon);\n 1795  \t\tSendMessage(hDlg, WM_SETICON, (WPARAM)ICON_BIG, (LPARAM)hIcon);\n 1796: \t\ttitle = (char *)malloc(strlen(g_server_name) + 16);\n 1797  \t\tif (title) {\n 1798: \t\t\tstrcpy(title, g_server_name);\n 1799  \t\t\tstrcat(title, \" settings\");\n 1800  \t\t\tSetWindowText(hDlg, title);\n ....\n 2827  manage_service(int action)\n 2828  {\n 2829: \tconst char *service_name = g_server_name;\n 2830  \tSC_HANDLE hSCM = NULL, hService = NULL;\n 2831  \tSERVICE_DESCRIPTION descr;\n ....\n 2833  \tint success = 1;\n 2834  \n 2835: \tdescr.lpDescription = (LPSTR)g_server_name;\n 2836  \n 2837  \tif ((hSCM = OpenSCManager(NULL,\n ....\n 2908  \n 2909  \t\t\tmemset(service_table, 0, sizeof(service_table));\n 2910: \t\t\tservice_table[0].lpServiceName = (LPSTR)g_server_name;\n 2911  \t\t\tservice_table[0].lpServiceProc =\n 2912  \t\t\t    (LPSERVICE_MAIN_FUNCTION)ServiceMain;\n ....\n 2966  \t\t\t           MF_STRING | MF_GRAYED,\n 2967  \t\t\t           ID_SEPARATOR,\n 2968: \t\t\t           g_server_name);\n 2969  \t\t\tAppendMenu(hMenu, MF_SEPARATOR, ID_SEPARATOR, \"\");\n 2970  \t\t\tservice_installed = manage_service(0);\n ....\n 3049  \n 3050  \tif (hConWnd != NULL) {\n 3051: \t\tSetConsoleTitle(g_server_name);\n 3052  \t}\n 3053  \n ....\n 3072  \t(void)show;\n 3073  \n 3074: \tinit_server_name();\n 3075  \tinit_system_info();\n 3076  \tmemset(&cls, 0, sizeof(cls));\n ....\n 3081  \tRegisterClass(&cls);\n 3082  \thWnd = CreateWindow(cls.lpszClassName,\n 3083: \t                    g_server_name,\n 3084  \t                    WS_OVERLAPPEDWINDOW,\n 3085  \t                    0,\n ....\n 3113  \t\tTrayIcon.hIcon = hIcon;\n 3114  \t\tTrayIcon.hWnd = hWnd;\n 3115: \t\tsnprintf(TrayIcon.szTip, sizeof(TrayIcon.szTip), \"%s\", g_server_name);\n 3116  \t\tTrayIcon.uCallbackMessage = WM_USER;\n 3117  \t\tShell_NotifyIcon(NIM_ADD, &TrayIcon);\n ....\n 3182  main(int argc, char *argv[])\n 3183  {\n 3184: \tinit_server_name();\n 3185  \tinit_system_info();\n 3186  \tstart_civetweb(argc, argv);\n ....\n 3206  \t                /*initWithTitle:[NSString stringWithFormat:@\"%s\",\n 3207  \t                   server_name]*/\n 3208: \t                initWithTitle:[NSString stringWithUTF8String:g_server_name]\n 3209  \t                       action:@selector(noexist)\n 3210  \t                keyEquivalent:@\"\"] autorelease]];\n ....\n 3251  main(int argc, char *argv[])\n 3252  {\n 3253: \tinit_server_name();\n 3254  \tinit_system_info();\n 3255  \tstart_civetweb(argc, argv);\n 3256  \tfprintf(stdout,\n 3257  \t        \"%s started on port(s) %s with web root [%s]\\n\",\n 3258: \t        g_server_name,\n 3259  \t        mg_get_option(g_ctx, \"listening_ports\"),\n 3260  \t        mg_get_option(g_ctx, \"document_root\"));\n\n37 matches across 5 files\n\n\nSearching 1254 files for \"mg_get_server_ports\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m:\n  375        return( nil);\n  376  \n  377:    n = mg_get_server_ports( _ctx, 0, NULL);\n  378     if( n < 0)\n  379        return( nil);\n  ...\n  383  \n  384     ports = MulleObjCCallocAutoreleased( n, sizeof( struct mg_server_port));\n  385:    n     = mg_get_server_ports( _ctx, n, ports);\n  386     if( n < 0)\n  387        return( nil);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/civetweb:\n    <binary>\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/APIReference.md:\n   59  * [`mg_get_builtin_mime_type( file_name );`](api/mg_get_builtin_mime_type.md)\n   60  * [`mg_get_option( ctx, name );`](api/mg_get_option.md)\n   61: * [`mg_get_server_ports( ctx, size, ports );`](api/mg_get_server_ports.md)\n   62  * [`mg_get_user_data( ctx );`](api/mg_get_user_data.md)\n   63  * [`mg_set_auth_handler( ctx, uri, handler, cbdata );`](api/mg_set_auth_handler.md)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/api/mg_get_ports.md:\n   20  ### Description\n   21  \n   22: This function is deprecated. Use [`mg_get_server_ports()`](mg_get_server_ports.md) instead.\n   23  \n   24  The function `mg_get_ports()` returns a list of ports the Civetweb server is listening on. The port numbers are stored in a buffer of integers which is supplied by the calling party. The function also stores information if SSL is used on the ports. This information is stored in a second buffer which should be capable of storing the same amount of items as the ports buffer.\n   ..\n   29  \n   30  * [`struct mg_server_port;`](mg_server_port.md)\n   31: * [`mg_get_server_ports();`](mg_get_server_ports.md)\n   32  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/api/mg_get_server_ports.md:\n    1  # Civetweb API Reference\n    2  \n    3: ### `mg_get_server_ports( ctx, size, ports );`\n    4  \n    5  ### Parameters\n    .\n   19  ### Description\n   20  \n   21: The `mg_get_server_ports()` returns a list with server ports on which the Civetweb server is listening. The ports are returned for a given context and stored with additional information like the SSL and redirection state in a list of structures. The list of structures must be allocated by the calling routine. The size of the structure is also passed to `mg_get_server_ports()`.\n   22  \n   23  The function returns the number of items in the list, or a negative value if an error occurred.\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/docs/api/mg_server_port.md:\n   18  ### Description\n   19  \n   20: A call to the function [`mg_get_server_ports()`](mg_get_server_ports.md) returns a list of structures with information about each running Civetweb service. These structures are of type `struct mg_server_port` and contain the base information of each service.\n   21  \n   22  ### See Also\n   23  \n   24: * [`mg_get_server_ports();`](mg_get_server_ports.md)\n   25  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/embedded_c/embedded_c.c:\n 1108  \t/* List all listening ports */\n 1109  \tmemset(ports, 0, sizeof(ports));\n 1110: \tport_cnt = mg_get_server_ports(ctx, 32, ports);\n 1111  \tprintf(\"\\n%i listening ports:\\n\\n\", port_cnt);\n 1112  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/include/civetweb.h:\n  754     This function returns the number of struct mg_server_port elements\n  755     filled in, or <0 in case of an error. */\n  756: CIVETWEB_API int mg_get_server_ports(const struct mg_context *ctx,\n  757                                       int size,\n  758                                       struct mg_server_port *ports);\n  ...\n  760  \n  761  #if defined(MG_LEGACY_INTERFACE) /* 2017-04-02 */\n  762: /* Deprecated: Use mg_get_server_ports instead. */\n  763  CIVETWEB_API size_t mg_get_ports(const struct mg_context *ctx,\n  764                                   size_t size,\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/CivetServer.cpp:\n  638  {\n  639  \tstd::vector<struct mg_server_port> server_ports(50);\n  640: \tint size = mg_get_server_ports(context,\n  641  \t                               (int)server_ports.size(),\n  642  \t                               &server_ports[0]);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/civetweb.c:\n 3604  \n 3605  #if defined(MG_LEGACY_INTERFACE)\n 3606: /* Deprecated: Use mg_get_server_ports instead. */\n 3607  size_t\n 3608  mg_get_ports(const struct mg_context *ctx, size_t size, int *ports, int *ssl)\n ....\n 3628  \n 3629  int\n 3630: mg_get_server_ports(const struct mg_context *ctx,\n 3631                      int size,\n 3632                      struct mg_server_port *ports)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/main.c:\n  341  \n  342  \tstruct mg_server_port ports[MAX_PORT_COUNT];\n  343: \tint portNum = mg_get_server_ports(ctx, MAX_PORT_COUNT, ports);\n  344  \tint i;\n  345  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/unittest/public_server.c:\n  402  #endif\n  403  \n  404: \tret = mg_get_server_ports(ctx, 0, portinfo);\n  405  \tck_assert_int_lt(ret, 0);\n  406  \tck_assert_int_eq(portinfo[0].protocol, 0);\n  ...\n  413  \tck_assert_int_eq(portinfo[1].is_redirect, 0);\n  414  \n  415: \tret = mg_get_server_ports(ctx, 4, portinfo);\n  416  \tck_assert_int_eq(ret, 1);\n  417  \tif (ipv6) {\n  ...\n  639  #endif\n  640  \n  641: \tret = mg_get_server_ports(ctx, 0, portinfo);\n  642  \tck_assert_int_lt(ret, 0);\n  643  \tck_assert_int_eq(portinfo[0].protocol, 0);\n  ...\n  650  \tck_assert_int_eq(portinfo[1].is_redirect, 0);\n  651  \n  652: \tret = mg_get_server_ports(ctx, 4, portinfo);\n  653  \tck_assert_int_eq(ret, 2);\n  654  \tck_assert_int_eq(portinfo[0].protocol, 1);\n  ...\n  765  \tck_assert(ctx != NULL);\n  766  \n  767: \tports_cnt = mg_get_server_ports(ctx, 16, ports);\n  768  \tck_assert_int_eq(ports_cnt, 2);\n  769  \tck_assert_int_eq(ports[0].protocol, 1);\n\n28 matches across 12 files\n\n\nSearching 1255 files for \"[[MulleCivetWebTextResponse new] autorelease]\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/test/10_generated/MulleCivetWebTextResponse/test.m:\n   25        @try\n   26        {\n   27:          obj = [[MulleCivetWebTextResponse new] autorelease];\n   28           if( ! obj)\n   29           {\n\n1 match in 1 file\n\n\nSearching 1255 files for \".length\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n  331     value = [_headers objectForKey:MulleHTTPTransferEncodingKey];\n  332     return( [value mulleRangeOfListComponent:s\n  333:                                   separator:@\",\"].length != 0);\n  334  }\n  335  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/NSString+ListComponents.m:\n   29                            options:NSLiteralSearch\n   30                              range:search];\n   31:       if( ! range.length)\n   32           return( NSMakeRange( NSNotFound, 0));\n   33  \n   ..\n   40                                    options:NSLiteralSearch\n   41                                      range:NSMakeRange( preceeding,\n   42:                                                        separatorLength)].length != 0;\n   43        }\n   44  \n   ..\n   46        {\n   47           // look for separator following\n   48:          following = range.location + range.length;\n   49           if( following + separatorLength <= length)\n   50           {\n   ..\n   52                                  options:NSLiteralSearch\n   53                                    range:NSMakeRange( following,\n   54:                                                      separatorLength)].length != 0;\n   55           }\n   56        }\n   ..\n   75     range = [self mulleRangeOfListComponent:component\n   76                                   separator:separator];\n   77:    if( range.length)\n   78        return( self);\n   79  \n   ..\n  102     range = [self mulleRangeOfListComponent:component\n  103                                   separator:separator];\n  104:    if( ! range.length)\n  105        return( self);\n  106  \n  ...\n  108  \n  109     // 1 component\n  110:    if( range.length == length)\n  111        return( @\"\");\n  112  \n  ...\n  114     if( range.location == 0)\n  115        return( [self stringByReplacingCharactersInRange:NSMakeRange( range.location,\n  116:                                                                     range.length + separatorLength)\n  117                                              withString:nil]);\n  118  \n  119     return( [self stringByReplacingCharactersInRange:NSMakeRange( range.location - separatorLength,\n  120:                                                                  range.length + separatorLength)\n  121                                           withString:nil]);\n  122  }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/_obsolete/docroot/jquery.js:\n   14   * Date: Sat Feb 13 22:33:48 2010 -0500\n   15   */\n   16: (function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll(\"left\")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:\"script\"}):c.globalEval(b.text||b.textContent||b.innerHTML||\"\");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b===\"object\"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?\n   17: e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,\"events\");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type===\"click\")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,\"\")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=\n   18: j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType===\"mouseenter\"||i.preType===\"mouseleave\")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return\"live.\"+(a&&a!==\"*\"?a+\".\":\"\")+b.replace(/\\./g,\"`\").replace(/ /g,\n   19: \"&\")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]===\"string\"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=\n   20  true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return\"scrollTo\"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\\w\\W]+>)[^>]*$|^#([\\w-]+)$/,Ua=/^.[^:#\\[\\.,]*$/,Va=/\\S/,\n   21: Wa=/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g,Xa=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a===\"body\"&&!b){this.context=s;this[0]=s.body;this.selector=\"body\";this.length=1;return this}if(typeof a===\"string\")if((d=Ta.exec(a))&&\n   22: (d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,\n   23: a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:\"\",jquery:\"1.4.2\",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===\n   24  \"find\")f.selector=this.selector+(this.selector?\" \":\"\")+d;else if(b)f.selector=this.selector+\".\"+b+\"(\"+d+\")\";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),\"slice\",R.call(arguments).join(\",\"))},map:function(a){return this.pushStack(c.map(this,\n   25: function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a===\"boolean\"){f=a;a=arguments[1]||{};b=2}if(typeof a!==\"object\"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||\n   26  c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler(\"ready\")}},bindReady:function(){if(!xa){xa=true;if(s.readyState===\"complete\")return c.ready();if(s.addEventListener){s.addEventListener(\"DOMContentLoaded\",\n   27  L,false);A.addEventListener(\"load\",c.ready,false)}else if(s.attachEvent){s.attachEvent(\"onreadystatechange\",L);A.attachEvent(\"onload\",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)===\"[object Function]\"},isArray:function(a){return $.call(a)===\"[object Array]\"},isPlainObject:function(a){if(!a||$.call(a)!==\"[object Object]\"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,\"constructor\")&&!aa.call(a.constructor.prototype,\n   28  \"isPrototypeOf\"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!==\"string\"||!a)return null;a=c.trim(a);if(/^[\\],:{}\\s]*$/.test(a.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function(\"return \"+\n   29: a))();else c.error(\"Invalid JSON: \"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName(\"head\")[0]||s.documentElement,d=s.createElement(\"script\");d.type=\"text/javascript\";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],\n   30: d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||\"\").replace(Wa,\"\")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a===\"string\"||c.isFunction(a)||typeof a!==\"function\"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===\n   31: a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length===\"number\")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b===\"string\"){d=a;a=d[b];b=w}else if(b&&\n   32  !c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\\w.]+))?/.exec(a)||[];return{browser:a[1]||\"\",version:a[2]||\"0\"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=\n   33  true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener(\"DOMContentLoaded\",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState===\"complete\"){s.detachEvent(\"onreadystatechange\",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement(\"script\"),d=s.createElement(\"div\"),f=\"script\"+J();d.style.display=\"none\";d.innerHTML=\"   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>\";\n   34: var e=d.getElementsByTagName(\"*\"),j=d.getElementsByTagName(\"a\")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/red/.test(j.getAttribute(\"style\")),hrefNormalized:j.getAttribute(\"href\")===\"/a\",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName(\"input\")[0].value===\"on\",optSelected:s.createElement(\"select\").appendChild(s.createElement(\"option\")).selected,\n   35  parentNode:d.removeChild(d.appendChild(s.createElement(\"div\"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type=\"text/javascript\";try{b.appendChild(s.createTextNode(\"window.\"+f+\"=1;\"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent(\"onclick\",function k(){c.support.noCloneEvent=\n   36  false;d.detachEvent(\"onclick\",k)});d.cloneNode(true).fireEvent(\"onclick\")}d=s.createElement(\"div\");d.innerHTML=\"<input type='radio' name='radiotest' checked='checked'/>\";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement(\"div\");k.style.width=k.style.paddingLeft=\"1px\";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display=\"none\"});a=function(k){var n=\n   37  s.createElement(\"div\");k=\"on\"+k;var r=k in n;if(!r){n.setAttribute(k,\"return;\");r=typeof n[k]===\"function\"}return r};c.support.submitBubbles=a(\"submit\");c.support.changeBubbles=a(\"change\");a=b=d=e=j=null}})();c.props={\"for\":\"htmlFor\",\"class\":\"className\",readonly:\"readOnly\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",rowspan:\"rowSpan\",colspan:\"colSpan\",tabindex:\"tabIndex\",usemap:\"useMap\",frameborder:\"frameBorder\"};var G=\"jQuery\"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,\n   38  applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b===\"string\"&&d===w)return null;f||(f=++Ya);if(typeof b===\"object\"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b===\"string\"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];\n   39: else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a===\"undefined\"&&this.length)return c.data(this[0]);else if(typeof a===\"object\")return this.each(function(){c.data(this,a)});var d=a.split(\".\");d[1]=d[1]?\".\"+d[1]:\"\";if(b===w){var f=this.triggerHandler(\"getData\"+d[1]+\"!\",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger(\"setData\"+d[1]+\"!\",[d[0],b]).each(function(){c.data(this,\n   40  a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||\"fx\")+\"queue\";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||\"fx\";var d=c.queue(a,b),f=d.shift();if(f===\"inprogress\")f=d.shift();if(f){b===\"fx\"&&d.unshift(\"inprogress\");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!==\"string\"){b=a;a=\"fx\"}if(b===\n   41  w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a===\"fx\"&&d[0]!==\"inprogress\"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||\"fx\";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])}});var Aa=/[\\n\\t]/g,ca=/\\s+/,Za=/\\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,\n   42: cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,\"\");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr(\"class\")))});if(a&&typeof a===\"string\")for(var b=(a||\"\").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=\" \"+e.className+\" \",\n   43: i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(\" \"+b[o]+\" \")<0)i+=\" \"+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr(\"class\")))});if(a&&typeof a===\"string\"||a===w)for(var b=(a||\"\").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(\" \"+e.className+\" \").replace(Aa,\" \"),i=0,o=b.length;i<o;i++)j=j.replace(\" \"+b[i]+\" \",\n   44  \" \");e.className=c.trim(j)}else e.className=\"\"}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b===\"boolean\";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr(\"class\"),b),b)});return this.each(function(){if(d===\"string\")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?\"addClass\":\"removeClass\"](e)}else if(d===\"undefined\"||d===\"boolean\"){this.className&&c.data(this,\"__className__\",this.className);this.className=\n   45: this.className||a===false?\"\":c.data(this,\"__className__\")||\"\"}})},hasClass:function(a){a=\" \"+a+\" \";for(var b=0,d=this.length;b<d;b++)if((\" \"+this[b].className+\" \").replace(Aa,\" \").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,\"option\"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,\"select\")){var d=b.selectedIndex,f=[],e=b.options;b=b.type===\"select-one\";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=\n   46  e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute(\"value\")===null?\"on\":b.value;return(b.value||\"\").replace(Za,\"\")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r===\"number\")r+=\"\";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,\"select\")){var u=c.makeArray(r);c(\"option\",this).each(function(){this.selected=\n   47: c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b===\"type\"&&ab.test(a.nodeName)&&a.parentNode&&c.error(\"type property can't be changed\");\n   48  a[b]=d}if(c.nodeName(a,\"form\")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b===\"tabIndex\")return(b=a.getAttributeNode(\"tabIndex\"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b===\"style\"){if(e)a.style.cssText=\"\"+d;return a.style.cssText}e&&a.setAttribute(b,\"\"+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\\.(.*)$/,db=function(a){return a.replace(/[^\\w\\s\\.\\|`]/g,\n   49  function(b){return\"\\\\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!==\"undefined\"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(\" \");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(\".\")>-1){r=k.split(\".\");\n   50  k=r.shift();j.namespace=r.slice(0).sort().join(\".\")}else{r=[];j.namespace=\"\"}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent(\"on\"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),\n   51: C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b===\"string\"&&b.charAt(0)===\".\"){b=b||\"\";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(\" \");e=b[j++];){n=e;i=e.indexOf(\".\")<0;o=[];if(!i){o=e.split(\".\");e=o.shift();k=new RegExp(\"(^|\\\\.)\"+c.map(o.slice(0).sort(),db).join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=\n   52: null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a===\"object\"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf(\"!\")>=0){a.type=\n   53  e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,\"handle\"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d[\"on\"+e]&&d[\"on\"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&\n   54  f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,\"a\")&&e===\"click\",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f[\"on\"+e])f[\"on\"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f[\"on\"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(\".\")<0&&!a.exclusive;\n   55: if(!b){d=a.type.split(\".\");a.type=d.shift();f=new RegExp(\"(^|\\\\.)\"+d.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}e=c.data(this,\"events\");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:\"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"),\n   56: fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||\n   57  d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,\"\");c.each(c.data(this,\n   58  \"events\").live||[],function(){if(d===this.origType.replace(O,\"\"))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent(\"on\"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=\n   59  a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,\n   60  isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=\n   61: {setup:function(){if(this.nodeName.toLowerCase()!==\"form\"){c.event.add(this,\"click.specialSubmit\",function(a){var b=a.target,d=b.type;if((d===\"submit\"||d===\"image\")&&c(b).closest(\"form\").length)return na(\"submit\",this,arguments)});c.event.add(this,\"keypress.specialSubmit\",function(a){var b=a.target,d=b.type;if((d===\"text\"||d===\"password\")&&c(b).closest(\"form\").length&&a.keyCode===13)return na(\"submit\",this,arguments)})}else return false},teardown:function(){c.event.remove(this,\".specialSubmit\")}};\n   62  if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b===\"radio\"||b===\"checkbox\")d=a.checked;else if(b===\"select-multiple\")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join(\"-\"):\"\";else if(a.nodeName.toLowerCase()===\"select\")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,\"_change_data\");e=Fa(d);if(a.type!==\"focusout\"||d.type!==\"radio\")c.data(d,\"_change_data\",\n   63  e);if(!(f===w||e===f))if(f!=null||e){a.type=\"change\";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d===\"radio\"||d===\"checkbox\"||b.nodeName.toLowerCase()===\"select\")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!==\"textarea\"||a.keyCode===32&&(d===\"checkbox\"||d===\"radio\")||d===\"select-multiple\")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,\n   64  \"_change_data\",Fa(a))}},setup:function(){if(this.type===\"file\")return false;for(var a in ea)c.event.add(this,a+\".specialChange\",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,\".specialChange\");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,\n   65: d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each([\"bind\",\"one\"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d===\"object\"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b===\"one\"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d===\"unload\"&&b!==\"one\")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a===\"object\"&&\n   66: !a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind(\"live\"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},\n   67: toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,\"lastToggle\"+a.guid)||0)%d;c.data(this,\"lastToggle\"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:\"focusin\",blur:\"focusout\",mouseenter:\"mouseover\",mouseleave:\"mouseout\"};c.each([\"live\",\"die\"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,\n   68  u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||\"\").split(\" \");(i=d[o++])!=null;){j=O.exec(i);k=\"\";if(j){k=j[0];i=i.replace(O,\"\")}if(i===\"hover\")d.push(\"mouseenter\"+k,\"mouseleave\"+k);else{n=i;if(i===\"focus\"||i===\"blur\"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b===\"live\"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error\".split(\" \"),\n   69: function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent(\"onunload\",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h=\"\",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];\n   70: if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!==\"string\"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\n   71: e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!==\"string\")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(\"\"),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();\n   72: t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]===\"~\"||p[0]===\"+\")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D=\"\";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||\n   73: g);if(j.call(y)===\"[object Array]\")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];\n   74: for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!==\"\\\\\"){q[1]=(q[1]||\"\").replace(/\\\\/g,\"\");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],\"\");break}}}}m||(m=h.getElementsByTagName(\"*\"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-\n   75  1)!==\"\\\\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],\"\");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw\"Syntax error, unrecognized expression: \"+g;};var n=k.selectors={order:[\"ID\",\"NAME\",\"TAG\"],match:{ID:/#((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,\n   76  CLASS:/\\.((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,NAME:/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)['\"]*\\]/,ATTR:/\\[\\s*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/,TAG:/^((?:[\\w\\u00c0-\\uFFFF\\*-]|\\\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+-]*)\\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^-]|$)/,PSEUDO:/:((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/},leftMatch:{},attrMap:{\"class\":\"className\",\"for\":\"htmlFor\"},attrHandle:{href:function(g){return g.getAttribute(\"href\")}},\n   77: relative:{\"+\":function(g,h){var l=typeof h===\"string\",m=l&&!/\\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},\">\":function(g,h){var l=typeof h===\"string\";if(l&&!/\\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=\n   78  l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},\"\":function(g,h,l){var m=e++,q=d;if(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase();q=b}q(\"parentNode\",h,m,g,p,l)},\"~\":function(g,h,l){var m=e++,q=d;if(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase();q=b}q(\"previousSibling\",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!==\"undefined\"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!==\"undefined\"){var l=[];\n   79: h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute(\"name\")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=\" \"+g[1].replace(/\\\\/g,\"\")+\" \";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(\" \"+v.className+\" \").replace(/[\\t\\n]/g,\" \").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\\\/g,\"\")},TAG:function(g){return g[1].toLowerCase()},\n   80: CHILD:function(g){if(g[1]===\"nth\"){var h=/(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec(g[2]===\"even\"&&\"2n\"||g[2]===\"odd\"&&\"2n+1\"||!/\\D/.test(g[2])&&\"0n+\"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\\\/g,\"\");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]===\"~=\")g[4]=\" \"+g[4]+\" \";return g},PSEUDO:function(g,h,l,m,q){if(g[1]===\"not\")if((f.exec(g[3])||\"\").length>1||/^\\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,\n   81: g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!==\"hidden\"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\\d/i.test(g.nodeName)},\n   82  text:function(g){return\"text\"===g.type},radio:function(g){return\"radio\"===g.type},checkbox:function(g){return\"checkbox\"===g.type},file:function(g){return\"file\"===g.type},password:function(g){return\"password\"===g.type},submit:function(g){return\"submit\"===g.type},image:function(g){return\"image\"===g.type},reset:function(g){return\"reset\"===g.type},button:function(g){return\"button\"===g.type||g.nodeName.toLowerCase()===\"button\"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},\n   83: setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q===\"contains\")return(g.textContent||g.innerText||a([g])||\"\").indexOf(h[3])>=0;else if(q===\"not\"){h=\n   84: h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error(\"Syntax error, unrecognized expression: \"+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case \"only\":case \"first\":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l===\"first\")return true;m=g;case \"last\":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case \"nth\":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=\n   85  m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute(\"id\")===h},TAG:function(g,h){return h===\"*\"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(\" \"+(g.className||g.getAttribute(\"class\"))+\" \").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+\"\";var m=h[2];h=h[4];return g==null?m===\"!=\":m===\n   86: \"=\"?l===h:m===\"*=\"?l.indexOf(h)>=0:m===\"~=\"?(\" \"+l+\" \").indexOf(h)>=0:!h?l&&g!==false:m===\"!=\"?l!==h:m===\"^=\"?l.indexOf(h)===0:m===\"$=\"?l.substr(l.length-h.length)===h:m===\"|=\"?l===h||l.substr(0,h.length+1)===h+\"-\":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\\[]*\\])(?![^\\(]*\\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\\r|\\n)*?)/.source+n.match[u].source.replace(/\\\\(\\d+)/g,function(g,\n   87: h){return\"\\\\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)===\"[object Array]\")Array.prototype.push.apply(h,g);else if(typeof g.length===\"number\")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||\n   88  !h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if(\"sourceIndex\"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=\n   89  h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement(\"div\"),h=\"script\"+(new Date).getTime();g.innerHTML=\"<a name='\"+h+\"'/>\";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!==\"undefined\"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!==\"undefined\"&&\n   90: q.getAttributeNode(\"id\").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!==\"undefined\"&&m.getAttributeNode(\"id\");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement(\"div\");g.appendChild(s.createComment(\"\"));if(g.getElementsByTagName(\"*\").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]===\"*\"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML=\"<a href='#'></a>\";\n   91: if(g.firstChild&&typeof g.firstChild.getAttribute!==\"undefined\"&&g.firstChild.getAttribute(\"href\")!==\"#\")n.attrHandle.href=function(h){return h.getAttribute(\"href\",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement(\"div\");h.innerHTML=\"<p class='TEST'></p>\";if(!(h.querySelectorAll&&h.querySelectorAll(\".TEST\").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();\n   92: (function(){var g=s.createElement(\"div\");g.innerHTML=\"<div class='test e'></div><div class='test'></div>\";if(!(!g.getElementsByClassName||g.getElementsByClassName(\"e\").length===0)){g.lastChild.className=\"e\";if(g.getElementsByClassName(\"e\").length!==1){n.order.splice(1,0,\"CLASS\");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!==\"undefined\"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:\n   93: function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!==\"HTML\":false},ga=function(g,h){var l=[],m=\"\",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,\"\")}g=n.relative[g]?g+\"*\":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[\":\"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,\n   94: gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b===\"string\"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack(\"\",\"find\",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;\n   95: c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),\"not\",a)},filter:function(a){return this.pushStack(Ia(this,a,true),\"filter\",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=\n   96: {},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===\n   97  \"string\")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a===\"string\"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,\"parentNode\")},parentsUntil:function(a,b,d){return c.dir(a,\"parentNode\",\n   98  d)},next:function(a){return c.nth(a,2,\"nextSibling\")},prev:function(a){return c.nth(a,2,\"previousSibling\")},nextAll:function(a){return c.dir(a,\"nextSibling\")},prevAll:function(a){return c.dir(a,\"previousSibling\")},nextUntil:function(a,b,d){return c.dir(a,\"nextSibling\",d)},prevUntil:function(a,b,d){return c.dir(a,\"previousSibling\",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,\"iframe\")?\n   99: a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f===\"string\")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(\",\"))}});c.extend({filter:function(a,b,d){if(d)a=\":not(\"+a+\")\";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===\n  100  1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\\d+=\"(?:\\d+|null)\"/g,V=/^\\s+/,Ka=/(<([\\w:]+)[^>]*?)\\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\\w:]+)/,ib=/<tbody/i,jb=/<|&#?\\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?\n  101  a:b+\"></\"+d+\">\"},F={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,\"div<div>\",\"</div>\"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=\n  102  c(this);d.text(a.call(this,b,d.text()))});if(typeof a!==\"object\"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},\n  103: wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,\"body\")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},\n  104: prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,\"before\",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,\n  105: this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,\"after\",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName(\"*\"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName(\"*\"));b.firstChild;)b.removeChild(b.firstChild);\n  106  return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement(\"div\");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,\"\").replace(/=([^=\"'>\\s]+\\/)>/g,'=\"$1\">').replace(V,\"\")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find(\"*\"),b.find(\"*\"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,\n  107: \"\"):null;else if(typeof a===\"string\"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName(\"*\"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&\n  108  this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!==\"string\")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),\"replaceWith\",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,\"table\")?u.getElementsByTagName(\"tbody\")[0]||\n  109: u.appendChild(u.ownerDocument.createElement(\"tbody\")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i===\"string\"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===\n  110: 1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,\"tr\");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);\n  111: return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement===\"undefined\")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i===\"number\")i+=\"\";if(i){if(typeof i===\"string\"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i===\"string\"){i=i.replace(Ka,Ma);var o=(La.exec(i)||[\"\",\n  112: \"\"])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement(\"div\");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o===\"table\"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]===\"<table>\"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],\"tbody\")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=\n  113  c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],\"script\")&&(!e[j].type||e[j].type.toLowerCase()===\"text/javascript\"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName(\"script\"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?\n  114  c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\\([^)]*\\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\\d+(?:px)?$/i,nb=/^-?\\d/,ob={position:\"absolute\",visibility:\"hidden\",display:\"block\"},pb=[\"Left\",\"Right\"],qb=[\"Top\",\"Bottom\"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?\"cssFloat\":\"styleFloat\",ja=\n  ...\n  118  a.getPropertyValue(b);if(b===\"opacity\"&&f===\"\")f=\"1\"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d===\"fontSize\"?\"1em\":f||0;f=e.pixelLeft+\"px\";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=\n  119  a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()===\"tr\";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,\"display\")===\"none\"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\\s)*?\\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\\?(&|$)/,ka=/\\?/,wb=/(\\?|&)_=.*?(&|$)/,xb=/^(\\w+:)?\\/\\/([^\\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==\n  120: \"string\")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(\" \");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f=\"GET\";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b===\"object\"){b=c.param(b,c.ajaxSettings.traditional);f=\"POST\"}var j=this;c.ajax({url:a,type:f,dataType:\"html\",data:b,complete:function(i,o){if(o===\"success\"||o===\"notmodified\")j.html(e?c(\"<div />\").append(i.responseText.replace(tb,\"\")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},\n  121  serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),\n  122  function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:\"GET\",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,\"script\")},getJSON:function(a,b,d){return c.get(a,b,d,\"json\")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:\"POST\",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,\n  ...\n  130  g(\"abort\")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g(\"timeout\")},e.timeout);try{x.send(n===\"POST\"||n===\"PUT\"||n===\"DELETE\"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger(\"ajaxError\",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol===\"file:\"||a.status>=200&&a.status<300||a.status===304||a.status===\n  131  1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader(\"Last-Modified\"),f=a.getResponseHeader(\"Etag\");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader(\"content-type\")||\"\",e=b===\"xml\"||!b&&f.indexOf(\"xml\")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName===\"parsererror\"&&c.error(\"parsererror\");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a===\"string\")if(b===\n  132: \"json\"||!b&&f.indexOf(\"json\")>=0)a=c.parseJSON(a);else if(b===\"script\"||!b&&f.indexOf(\"javascript\")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\\[\\]$/.test(i)?f(i,n):d(i+\"[\"+(typeof n===\"object\"||c.isArray(n)?k:\"\")+\"]\",n)});else!b&&o!=null&&typeof o===\"object\"?c.each(o,function(k,n){d(i+\"[\"+k+\"]\",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+\"=\"+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;\n  133: if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join(\"&\").replace(yb,\"+\")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\\d+-.]+)(.*)$/,W,va=[[\"height\",\"marginTop\",\"marginBottom\",\"paddingTop\",\"paddingBottom\"],[\"width\",\"marginLeft\",\"marginRight\",\"paddingLeft\",\"paddingRight\"],[\"opacity\"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K(\"show\",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],\"olddisplay\");\n  134: this[a].style.display=d||\"\";if(c.css(this[a],\"display\")===\"none\"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c(\"<\"+d+\" />\").appendTo(\"body\");f=e.css(\"display\");if(f===\"none\")f=\"block\";e.remove();la[d]=f}c.data(this[a],\"olddisplay\",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],\"olddisplay\")||\"\";return this}},hide:function(a,b){if(a||a===0)return this.animate(K(\"hide\",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],\"olddisplay\");!d&&d!==\"none\"&&c.data(this[a],\n  135: \"olddisplay\",c.css(this[a],\"display\"))}a=0;for(b=this.length;a<b;a++)this[a].style.display=\"none\";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a===\"boolean\";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(\":hidden\");c(this)[f?\"show\":\"hide\"]()}):this.animate(K(\"toggle\",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(\":hidden\").css(\"opacity\",0).show().end().animate({opacity:b},a,d)},\n  136  animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?\"each\":\"queue\"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(\":hidden\"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]===\"hide\"&&o||a[i]===\"show\"&&!o)return j.complete.call(this);if((i===\"height\"||i===\"width\")&&this.style){j.display=c.css(this,\"display\");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=\n  137  j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow=\"hidden\";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u===\"toggle\"?o?\"show\":\"hide\":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||\"px\";if(E!==\"px\"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]===\"-=\"?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,\"\")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);\n  138: this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K(\"show\",1),slideUp:K(\"hide\",1),slideToggle:K(\"toggle\",1),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a===\"object\"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===\n  139  \"number\"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||\n  140  c.fx.step._default)(this);if((this.prop===\"height\"||this.prop===\"width\")&&this.elem.style)this.elem.style.display=\"block\"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||\"px\";this.now=this.start;\n  141  this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop===\"width\"||this.prop===\"height\"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=\n  142  this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,\"olddisplay\");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,\"display\")===\"none\")this.elem.style.display=\"block\"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,\n  143: e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?\"swing\":\"linear\");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||\n  144: c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,\"opacity\",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop===\"width\"||a.prop===\"height\"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset=\"getBoundingClientRect\"in s.documentElement?\n  145  function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=\n  146  this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position===\"fixed\")break;j=e?e.getComputedStyle(b,null):b.currentStyle;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/_obsolete/docroot/main.js:\n   44  \n   45    // Keep only chat.maxVisibleMessages, delete older ones.\n   46:   while ($('#mml').children().length > chat.maxVisibleMessages) {\n   47      $('#mml div:first-child').remove();\n   48    }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/embedded_c/embedded_c.c:\n  416  \t\tstrncpy(context->file[context->index - 1].name, filename, 128);\n  417  \t\tcontext->file[context->index - 1].name[127] = 0;\n  418: \t\tcontext->file[context->index - 1].length = 0;\n  419  \t\tmd5_init(&(context->file[context->index - 1].chksum));\n  420  \t\treturn MG_FORM_FIELD_STORAGE_GET;\n  ...\n  433  \t(void)key;\n  434  \n  435: \tcontext->file[context->index - 1].length += valuelen;\n  436  \tmd5_append(&(context->file[context->index - 1].chksum),\n  437  \t           (const md5_byte_t *)value,\n  ...\n  475  \t\t          \"\\r\\n%s %llu \",\n  476  \t\t          chksums.file[i].name,\n  477: \t\t          chksums.file[i].length);\n  478  \t\tfor (j = 0; j < 16; j++) {\n  479  \t\t\tmg_printf(conn, \"%02x\", (unsigned int)digest[j]);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/examples/rest/cJSON/cJSON.c:\n 1014  \n 1015      buffer.content = (const unsigned char*)value;\n 1016:     buffer.length = strlen((const char*)value) + sizeof(\"\");\n 1017      buffer.offset = 0;\n 1018      buffer.hooks = global_hooks;\n ....\n 1034      {\n 1035          buffer_skip_whitespace(&buffer);\n 1036:         if ((buffer.offset >= buffer.length) || buffer_at_offset(&buffer)[0] != '\\0')\n 1037          {\n 1038              goto fail;\n ....\n 1058          local_error.position = 0;\n 1059  \n 1060:         if (buffer.offset < buffer.length)\n 1061          {\n 1062              local_error.position = buffer.offset;\n 1063          }\n 1064:         else if (buffer.length > 0)\n 1065          {\n 1066:             local_error.position = buffer.length - 1;\n 1067          }\n 1068  \n ....\n 1176      }\n 1177  \n 1178:     p.length = (size_t)prebuffer;\n 1179      p.offset = 0;\n 1180      p.noalloc = false;\n ....\n 1201  \n 1202      p.buffer = (unsigned char*)buf;\n 1203:     p.length = (size_t)len;\n 1204      p.offset = 0;\n 1205      p.noalloc = true;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/include/CivetServer.h:\n  452  \t         size_t occurrence = 0)\n  453  \t{\n  454: \t\treturn getParam(data.c_str(), data.length(), name, dst, occurrence);\n  455  \t}\n  456  \n  ...\n  503  \t          bool is_form_url_encoded = true)\n  504  \t{\n  505: \t\turlDecode(src.c_str(), src.length(), dst, is_form_url_encoded);\n  506  \t}\n  507  \n  ...\n  546  \turlEncode(const std::string &src, std::string &dst, bool append = false)\n  547  \t{\n  548: \t\turlEncode(src.c_str(), src.length(), dst, append);\n  549  \t}\n  550  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/sqlite3.c:\n 33072    pb.startEndFlag = 0;\n 33073    pb.offset = offset;\n 33074:   pb.length = length; \n 33075    pb.fd = pFile->h;\n 33076    \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/debugger/duk_debug.js:\n  117  // Bytecode opcode/extraop metadata\n  118  var dukOpcodes = yaml.load('duk_opcodes.yaml');\n  119: if (dukOpcodes.opcodes.length != 64) {\n  120      throw new Error('opcode metadata length incorrect');\n  121  }\n  122: if (dukOpcodes.extra.length != 256) {\n  123      throw new Error('extraop metadata length incorrect');\n  124  }\n  ...\n  146      // reason, so use a much slower variant.\n  147  \n  148:     for (i = 0, n = buf.length; i < n; i++) {\n  149          cp[i] = buf[i];\n  150      }\n  ...\n  153  */\n  154  \n  155:     for (i = 0, n = buf.length; i < n; i++) {\n  156          cp[i] = String.fromCharCode(buf[i]);\n  157      }\n  ...\n  166      var i, n;\n  167  \n  168:     for (i = 0, n = str.length; i < n; i++) {\n  169          buf[off + i] = str.charCodeAt(i) & 0xff;  // truncate higher bits\n  170      }\n  ...\n  237      }\n  238  \n  239:     if (cliplen && ret.length > cliplen) {\n  240          ret = ret.substring(0, cliplen) + '...';  // trailing '\"' intentionally missing\n  241      }\n  ...\n  269      }\n  270  \n  271:     if (cliplen && ret.length > cliplen) {\n  272          ret = ret.substring(0, cliplen) + '...';\n  273      }\n  ...\n  357  \n  358      lines = tmp.split(/\\r?\\n/);\n  359:     for (i = 0, n = lines.length; i < n; i++) {\n  360          line = lines[i];\n  361          if (/\\t/.test(line)) {\n  362              repl = '';\n  363:             for (j = 0, m = line.length; j < m; j++) {\n  364                  if (line.charAt(j) === '\\t') {\n  365                      repl += ' ';\n  366:                     while ((repl.length % 8) != 0) {\n  367                          repl += ' ';\n  368                      }\n  ...\n  467      this.files = files;\n  468  \n  469:     console.log('Found ' + files.length + ' source files in ' + this.directories.length + ' search directories');\n  470  };\n  471  \n  ...\n  487          var i, fn, data;\n  488  \n  489:         for (i = 0; i < _this.directories.length; i++) {\n  490              fn = path.join(_this.directories[i], fileName);\n  491              if (fs.existsSync(fn) && fs.lstatSync(fn).isFile()) {\n  ...\n  550  \n  551      function consume(n) {\n  552:         var tmp = new Buffer(buf.length - n);\n  553          buf.copy(tmp, 0, n);\n  554          buf = tmp;\n  ...\n  560  \n  561          if (_this.closed || !_this.inputStream) {\n  562:             console.log('Ignoring incoming data from closed input stream, len ' + data.length);\n  563              return;\n  564          }\n  565  \n  566:         _this.bytes += data.length;\n  567          if (rawDumpFileName) {\n  568              fs.appendFileSync(rawDumpFileName, data);\n  ...\n  577          // caller gives a non-null protocolVersion so we don't read one here.\n  578          if (protocolVersion == null) {\n  579:             if (buf.length > 1024) {\n  580                  _this.emit('transport-error', 'Parse error (version identification too long), dropping connection');\n  581                  _this.close();\n  ...\n  583              }\n  584  \n  585:             for (i = 0, n = buf.length; i < n; i++) {\n  586                  if (buf[i] == 0x0a) {\n  587                      tmpbuf = new Buffer(i);\n  ...\n  611          // See doc/debugger.rst for format description.\n  612  \n  613:         while (buf.length > 0) {\n  614              x = buf[0];\n  615              v = undefined;\n  ...\n  618              if (x >= 0xc0) {\n  619                  // 0xc0...0xff: integers 0-16383\n  620:                 if (buf.length >= 2) {\n  621                      v = ((x - 0xc0) << 8) + buf[1];\n  622                      consume(2);\n  ...\n  629                  // 0x60...0x7f: strings with length 0-31\n  630                  len = x - 0x60;\n  631:                 if (buf.length >= 1 + len) {\n  632                      v = new Buffer(len);\n  633                      buf.copy(v, 0, 1, 1 + len);\n  ...\n  643                  case 0x04: v = DVAL_NFY; consume(1); break;\n  644                  case 0x10:  // 4-byte signed integer\n  645:                     if (buf.length >= 5) {\n  646                          v = buf.readInt32BE(1);\n  647                          consume(5);\n  ...\n  649                      break;\n  650                  case 0x11:  // 4-byte string\n  651:                     if (buf.length >= 5) {\n  652                          len = buf.readUInt32BE(1);\n  653:                         if (buf.length >= 5 + len) {\n  654                              v = new Buffer(len);\n  655                              buf.copy(v, 0, 5, 5 + len);\n  ...\n  660                      break;\n  661                  case 0x12:  // 2-byte string\n  662:                     if (buf.length >= 3) {\n  663                          len = buf.readUInt16BE(1);\n  664:                         if (buf.length >= 3 + len) {\n  665                              v = new Buffer(len);\n  666                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  671                      break;\n  672                  case 0x13:  // 4-byte buffer\n  673:                     if (buf.length >= 5) {\n  674                          len = buf.readUInt32BE(1);\n  675:                         if (buf.length >= 5 + len) {\n  676                              v = new Buffer(len);\n  677                              buf.copy(v, 0, 5, 5 + len);\n  ...\n  684                      break;\n  685                  case 0x14:  // 2-byte buffer\n  686:                     if (buf.length >= 3) {\n  687                          len = buf.readUInt16BE(1);\n  688:                         if (buf.length >= 3 + len) {\n  689                              v = new Buffer(len);\n  690                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  719                      break;\n  720                  case 0x1a:  // number (IEEE double), big endian\n  721:                     if (buf.length >= 9) {\n  722                          v = new Buffer(8);\n  723                          buf.copy(v, 0, 1, 9);\n  ...\n  733                      break;\n  734                  case 0x1b:  // object\n  735:                     if (buf.length >= 3) {\n  736                          len = buf[2];\n  737:                         if (buf.length >= 3 + len) {\n  738                              v = new Buffer(len);\n  739                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  744                      break;\n  745                  case 0x1c:  // pointer\n  746:                     if (buf.length >= 2) {\n  747                          len = buf[1];\n  748:                         if (buf.length >= 2 + len) {\n  749                              v = new Buffer(len);\n  750                              buf.copy(v, 0, 2, 2 + len);\n  ...\n  755                      break;\n  756                  case 0x1d:  // lightfunc\n  757:                     if (buf.length >= 4) {\n  758                          len = buf[3];\n  759:                         if (buf.length >= 4 + len) {\n  760                              v = new Buffer(len);\n  761                              buf.copy(v, 0, 4, 4 + len);\n  ...\n  766                      break;\n  767                  case 0x1e:  // heapptr\n  768:                     if (buf.length >= 2) {\n  769                          len = buf[1];\n  770:                         if (buf.length >= 2 + len) {\n  771                              v = new Buffer(len);\n  772                              buf.copy(v, 0, 2, 2 + len);\n  ...\n  869          } else if (v.type === 'number') {\n  870              dec = new Buffer(v.data, 'hex');\n  871:             len = dec.length;\n  872              if (len !== 8) {\n  873                  throw new TypeError('value cannot be converted to dvalue: ' + JSON.stringify(v));\n  ...\n  879          } else if (v.type === 'buffer') {\n  880              dec = new Buffer(v.data, 'hex');\n  881:             len = dec.length;\n  882              if (len <= 0xffff) {\n  883                  buf = new Buffer(3 + len);\n  ...\n  899          } else if (v.type === 'object') {\n  900              dec = new Buffer(v.pointer, 'hex');\n  901:             len = dec.length;\n  902              buf = new Buffer(3 + len);\n  903              buf[0] = 0x1b;\n  ...\n  908          } else if (v.type === 'pointer') {\n  909              dec = new Buffer(v.pointer, 'hex');\n  910:             len = dec.length;\n  911              buf = new Buffer(2 + len);\n  912              buf[0] = 0x1c;\n  ...\n  916          } else if (v.type === 'lightfunc') {\n  917              dec = new Buffer(v.pointer, 'hex');\n  918:             len = dec.length;\n  919              buf = new Buffer(4 + len);\n  920              buf[0] = 0x1d;\n  ...\n  926          } else if (v.type === 'heapptr') {\n  927              dec = new Buffer(v.pointer, 'hex');\n  928:             len = dec.length;\n  929              buf = new Buffer(2 + len);\n  930              buf[0] = 0x1e;\n  ...\n  965          }\n  966      } else if (typeof v === 'string') {\n  967:         if (v.length < 0 || v.length > 0xffffffff) {\n  968              // Not possible in practice.\n  969:             throw new TypeError('cannot convert to dvalue, invalid string length: ' + v.length);\n  970          }\n  971:         if (v.length <= 0x1f) {\n  972:             buf = new Buffer(1 + v.length);\n  973:             buf[0] = 0x60 + v.length;\n  974              writeDebugStringToBuffer(v, buf, 1);\n  975              return buf;\n  976:         } else if (v.length <= 0xffff) {\n  977:             buf = new Buffer(3 + v.length);\n  978              buf[0] = 0x12;\n  979:             buf[1] = (v.length >> 8) & 0xff;\n  980:             buf[2] = (v.length >> 0) & 0xff;\n  981              writeDebugStringToBuffer(v, buf, 3);\n  982              return buf;\n  983          } else {\n  984:             buf = new Buffer(5 + v.length);\n  985              buf[0] = 0x11;\n  986:             buf[1] = (v.length >> 24) & 0xff;\n  987:             buf[2] = (v.length >> 16) & 0xff;\n  988:             buf[3] = (v.length >> 8) & 0xff;\n  989:             buf[4] = (v.length >> 0) & 0xff;\n  990              writeDebugStringToBuffer(v, buf, 5);\n  991              return buf;\n  ...\n 1057      // compact argument list).\n 1058  \n 1059:     for (i = 0, n = buf.length; i < n; i += 4) {\n 1060          pc = i / 4;\n 1061  \n ....\n 1075          comments = [];\n 1076          if (op.args) {\n 1077:             for (j = 0, m = op.args.length; j < m; j++) {\n 1078                  switch (op.args[j]) {\n 1079                  case 'A_R':   args.push('r' + ((ins >>> 6) & 0xff)); break;\n ....\n 1114          }\n 1115          if (op.flags) {\n 1116:             for (j = 0, m = op.flags.length; j < m; j++) {\n 1117                  if (ins & op.flags[j].mask) {\n 1118                      comments.push(op.flags[j].name);\n ....\n 1121          }\n 1122  \n 1123:         if (args.length > 0) {\n 1124              str = sprintf('%05d %08x   %-10s %s', pc, ins, op.name, args.join(', '));\n 1125          } else {\n 1126              str = sprintf('%05d %08x   %-10s', pc, ins, op.name);\n 1127          }\n 1128:         if (comments.length > 0) {\n 1129              str = sprintf('%-44s ; %s', str, comments.join(', '));\n 1130          }\n ....\n 1149      }\n 1150      this.messageLines.push(msg);\n 1151:     while (this.messageLines.length > this.messageScrollBack) {\n 1152          this.messageLines.shift();\n 1153      }\n ....\n 1167          }\n 1168  \n 1169:         for (i = 0; i < msg.length; i++) {\n 1170              try {\n 1171                  dval = formatDebugValue(msg[i]);\n ....\n 1244          var breakpts = [];\n 1245  \n 1246:         for (i = 1, n = msg.length - 1; i < n; i += 2) {\n 1247              breakpts.push({ fileName: msg[i], lineNumber: msg[i + 1] });\n 1248          }\n ....\n 1260          var locals = [];\n 1261  \n 1262:         for (i = 1; i <= msg.length - 2; i += 2) {\n 1263              // XXX: do pretty printing in debug client for now\n 1264              locals.push({ key: msg[i], value: prettyUiDebugValue(msg[i + 1], LOCALS_CLIPLEN) });\n ....\n 1277          var stack = [];\n 1278  \n 1279:         for (i = 1; i + 3 <= msg.length - 1; i += 4) {\n 1280              stack.push({\n 1281                  fileName: msg[i],\n ....\n 1340          res.heapObjects = objs;\n 1341  \n 1342:         for (i = 1, n = msg.length - 1; i < n; /*nop*/) {\n 1343              o = {};\n 1344              o.ptr = msg[i++];\n ....\n 1432          // doesn't need to.\n 1433  \n 1434:         buf = new Buffer(val.length);\n 1435          writeDebugStringToBuffer(val, buf, 0);\n 1436          bcode = _this.decodeBytecodeFromBuffer(buf, consts, funcs);\n ....\n 1441          });\n 1442          preformatted.push('');\n 1443:         idxPreformattedInstructions = preformatted.length;\n 1444          bcode.forEach(function (v) {\n 1445              preformatted.push(v.str);\n ....\n 1468  \n 1469          // Up-to-date list of breakpoints on target\n 1470:         for (i = 1, n = msg.length - 1; i < n; i += 2) {\n 1471              breakpts.push({ fileName: msg[i], lineNumber: msg[i + 1] });\n 1472          }\n ....\n 1475          // remain valid.  We do this for all operations so that duplicates\n 1476          // are eliminated if present.\n 1477:         for (i = breakpts.length - 1; i >= 0; i--) {\n 1478              var bp = breakpts[i];\n 1479              if (mode === 'deleteall' || (bp.fileName === fileName && bp.lineNumber === lineNumber)) {\n ....\n 1644          console.log('Unsolicited reply message, dropping connection: ' + prettyDebugMessage(msg));\n 1645      } else if (msg[0] === DVAL_REP) {\n 1646:         if (this.reqQueue.length <= 0) {\n 1647              console.log('Unsolicited reply message, dropping connection: ' + prettyDebugMessage(msg));\n 1648              this.targetStream.destroy();\n ....\n 1660          }\n 1661      } else if (msg[0] === DVAL_ERR) {\n 1662:         if (this.reqQueue.length <= 0) {\n 1663              console.log('Unsolicited error message, dropping connection: ' + prettyDebugMessage(msg));\n 1664              this.targetStream.destroy();\n ....\n 1711              this.uiMessage({ type: 'throw', fatal: msg[2], message: (msg[2] ? 'UNCAUGHT: ' : 'THROW: ') + prettyUiStringUnquoted(msg[3], UI_MESSAGE_CLIPLEN), fileName: msg[4], lineNumber: msg[5] });\n 1712          } else if (msg[1] === CMD_DETACHING) {\n 1713:             this.uiMessage({ type: 'detaching', reason: msg[2], message: 'DETACH: ' + (msg.length >= 5 ? prettyUiStringUnquoted(msg[3]) : 'detaching') });\n 1714          } else {\n 1715              // Ignore unknown notify messages\n ....\n 2361                  request: _this.commandNumberToString(msg[1]),\n 2362                  command: msg[1],\n 2363:                 args: msg.slice(2, msg.length - 1)\n 2364              };\n 2365              _this.writeJson(t);\n ....\n 2367              t = {\n 2368                  reply: true,\n 2369:                 args: msg.slice(1, msg.length - 1)\n 2370              };\n 2371              _this.writeJson(t);\n ....\n 2373              t = {\n 2374                  error: true,\n 2375:                 args: msg.slice(1, msg.length - 1)\n 2376              };\n 2377              _this.writeJson(t);\n ....\n 2383                  notify: _this.commandNumberToString(msg[1]),\n 2384                  command: msg[1],\n 2385:                 args: msg.slice(2, msg.length - 1)\n 2386              };\n 2387              _this.writeJson(t);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/debugger/duk_debug_proxy.js:\n   53      // (not the full underlying buffer).\n   54  \n   55:     var u8 = new Uint8Array(typedarray.length);\n   56      u8.set(typedarray);  // make a copy, ensuring there's no slice offset\n   57      return Duktape.Buffer(u8);  // get underlying plain buffer\n   ..\n   76              var newData;\n   77  \n   78:             log.debug('Read callback:', buf.length, err);\n   79              if (err) {\n   80                  uv.fs_close(handle);\n   81                  return cb(null, err);\n   82              }\n   83:             if (buf.length == 0) {\n   84                  uv.fs_close(handle);\n   85                  res = new Uint8Array(dataOff);\n   86                  res.set(data.subarray(0, dataOff));\n   87                  res = Duktape.Buffer(res);  // plain buffer\n   88:                 log.debug('Read', res.length, 'bytes from', filename);\n   89                  return cb(res, null);\n   90              }\n   91:             while (data.length - dataOff < buf.length) {\n   92:                 log.debug('Resize file read buffer:', data.length, '->', data.length * 2);\n   93:                 newData = new Uint8Array(data.length * 2);\n   94                  newData.set(data);\n   95                  data = newData;\n   96              }\n   97              data.set(new Uint8Array(buf), dataOff);\n   98:             dataOff += buf.length;\n   99:             fileOff += buf.length;\n  100              uv.fs_read(handle, 4096, fileOff, readCb);\n  101          }\n  ...\n  171      this.commandNumberLookup = {};\n  172      if (metadata && metadata.target_commands) {\n  173:         for (i = 0, n = metadata.target_commands.length; i < n; i++) {\n  174              this.commandNumberLookup[metadata.target_commands[i]] = i;\n  175          }\n  ...\n  207      var tmpBuf;\n  208  \n  209:     log.trace('Received data from JSON socket, err:', err, 'data length:', data ? data.length : 'null');\n  210  \n  211      if (err) {\n  ...\n  216      if (data) {\n  217          // Feed the data one byte at a time when torture testing.\n  218:         if (TORTURE && data.length > 1) {\n  219:             for (var i = 0; i < data.length; i++) {\n  220                  tmpBuf = Duktape.Buffer(1);\n  221                  tmpBuf[0] = data[i];\n  ...\n  226  \n  227          // Receive data into 'incoming', resizing as necessary.\n  228:         while (data.length > this.incoming.length - this.incomingOffset) {\n  229:             newIncoming = new Uint8Array(this.incoming.length * 1.3 + 16);\n  230              newIncoming.set(this.incoming);\n  231              this.incoming = newIncoming;\n  232:             log.debug('Resize incoming JSON buffer to ' + this.incoming.length);\n  233          }\n  234          this.incoming.set(new Uint8Array(data), this.incomingOffset);\n  235:         this.incomingOffset += data.length;\n  236  \n  237          // Trial parse JSON message(s).\n  ...\n  271      var cmd;\n  272  \n  273:     if (dvalues.length <= 0) {\n  274          throw new Error('invalid dvalues list: length <= 0');\n  275      }\n  ...\n  300      }\n  301  \n  302:     for (; idx < dvalues.length - 1; idx++) {\n  303          if (!msg.args) {\n  304              msg.args = [];\n  ...\n  386  \n  387      // Encode arguments into dvalues.\n  388:     for (i = 0, n = (msg.args ? msg.args.length : 0); i < n; i++) {\n  389          dvalues.push(this.encodeJsonDvalue(msg.args[i]));\n  390      }\n  ...\n  392      // Add an EOM, and write out the dvalues to the debug target.\n  393      dvalues.push(new Uint8Array([ 0x00 ]));\n  394:     for (i = 0, n = dvalues.length; i < n; i++) {\n  395          this.targetHandler.writeBinary(dvalues[i]);\n  396      }\n  ...\n  423      var i, n;\n  424  \n  425:     for (i = 0, n = v.length; i < n; i++) {\n  426          buf[off + i] = v.charCodeAt(i) & 0xff;  // truncate higher bits\n  427      }\n  ...\n  448          } else if (v.type === 'number') {\n  449              dec = Duktape.dec('hex', v.data);\n  450:             len = dec.length;\n  451              if (len !== 8) {\n  452                  throw new TypeError('value cannot be converted to dvalue: ' + JSON.stringify(v));\n  ...\n  458          } else if (v.type === 'buffer') {\n  459              dec = Duktape.dec('hex', v.data);\n  460:             len = dec.length;\n  461              if (len <= 0xffff) {\n  462                  buf = new Uint8Array(3 + len);\n  ...\n  478          } else if (v.type === 'object') {\n  479              dec = Duktape.dec('hex', v.pointer);\n  480:             len = dec.length;\n  481              buf = new Uint8Array(3 + len);\n  482              buf[0] = 0x1b;\n  ...\n  487          } else if (v.type === 'pointer') {\n  488              dec = Duktape.dec('hex', v.pointer);\n  489:             len = dec.length;\n  490              buf = new Uint8Array(2 + len);\n  491              buf[0] = 0x1c;\n  ...\n  495          } else if (v.type === 'lightfunc') {\n  496              dec = Duktape.dec('hex', v.pointer);\n  497:             len = dec.length;\n  498              buf = new Uint8Array(4 + len);\n  499              buf[0] = 0x1d;\n  ...\n  505          } else if (v.type === 'heapptr') {\n  506              dec = Duktape.dec('hex', v.pointer);\n  507:             len = dec.length;\n  508              buf = new Uint8Array(2 + len);\n  509              buf[0] = 0x1e;\n  ...\n  544          }\n  545      } else if (typeof v === 'string') {\n  546:         if (v.length < 0 || v.length > 0xffffffff) {\n  547              // Not possible in practice.\n  548:             throw new TypeError('cannot convert to dvalue, invalid string length: ' + v.length);\n  549          }\n  550:         if (v.length <= 0x1f) {\n  551:             buf = new Uint8Array(1 + v.length);\n  552:             buf[0] = 0x60 + v.length;\n  553              this.writeDebugStringToBuffer(v, buf, 1);\n  554              return buf;\n  555:         } else if (v.length <= 0xffff) {\n  556:             buf = new Uint8Array(3 + v.length);\n  557              buf[0] = 0x12;\n  558:             buf[1] = (v.length >> 8) & 0xff;\n  559:             buf[2] = (v.length >> 0) & 0xff;\n  560              this.writeDebugStringToBuffer(v, buf, 3);\n  561              return buf;\n  562          } else {\n  563:             buf = new Uint8Array(5 + v.length);\n  564              buf[0] = 0x11;\n  565:             buf[1] = (v.length >> 24) & 0xff;\n  566:             buf[2] = (v.length >> 16) & 0xff;\n  567:             buf[3] = (v.length >> 8) & 0xff;\n  568:             buf[4] = (v.length >> 0) & 0xff;\n  569              this.writeDebugStringToBuffer(v, buf, 5);\n  570              return buf;\n  ...\n  644      var newIncoming;\n  645  \n  646:     log.trace('Received data from target socket, err:', err, 'data length:', data ? data.length : 'null');\n  647  \n  648      if (err) {\n  ...\n  654      if (data) {\n  655          // Feed the data one byte at a time when torture testing.\n  656:         if (TORTURE && data.length > 1) {\n  657:             for (var i = 0; i < data.length; i++) {\n  658                  tmpBuf = Duktape.Buffer(1);\n  659                  tmpBuf[0] = data[i];\n  ...\n  664  \n  665          // Receive data into 'incoming', resizing as necessary.\n  666:         while (data.length > this.incoming.length - this.incomingOffset) {\n  667:             newIncoming = new Uint8Array(this.incoming.length * 1.3 + 16);\n  668              newIncoming.set(this.incoming);\n  669              this.incoming = newIncoming;\n  670:             log.debug('Resize incoming binary buffer to ' + this.incoming.length);\n  671          }\n  672          this.incoming.set(new Uint8Array(data), this.incomingOffset);\n  673:         this.incomingOffset += data.length;\n  674  \n  675          // Trial parse handshake unless done.\n  ...\n  945      var argv = typeof uv.argv === 'function' ? uv.argv() : [];\n  946      var i;\n  947:     for (i = 2; i < argv.length; i++) {  // skip dukluv and script name\n  948          if (argv[i] == '--help') {\n  949              print('Usage: dukluv ' + argv[1] + ' [option]+');\n  ...\n  974              continue;\n  975          }\n  976:         if (i >= argv.length - 1) {\n  977              throw new Error('missing option value for ' + argv[i]);\n  978          }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/debugger/static/webui.js:\n   73          }\n   74      });\n   75:     sourceEditedLines.length = 0;\n   76  \n   77      // If we're executing the file shown, highlight current line\n   ..\n  322  \n  323      elem.empty();\n  324:     for (i = 0, n = msg.length; i < n; i++) {\n  325          ent = msg[i];\n  326          if (ent.type === 'print') {\n  ...\n  376  \n  377      elem.empty();\n  378:     for (i = 0, n = msg.locals.length; i < n; i++) {\n  379          e = msg.locals[i];\n  380          s1 = $('<span class=\"value\"></span>').text(e.value);  // float\n  ...\n  564  \n  565      // XXX: any faster way; elems doesn't have e.g. indexOf()\n  566:     for (i = 0, n = elems.length; i < n; i++) {\n  567          if (target === elems[i]) {\n  568              line = i + 1;\n  ...\n  600  \n  601      elem = $('#source-select option');\n  602:     for (i = 0, n = elem.length; i < n; i++) {\n  603          // Exact match is required.\n  604          t = $(elem[i]).val();\n  ...\n  638  \n  639              loadedFileName = fileName;\n  640:             loadedLineCount = data.split('\\n').length;  // XXX: ignore issue with last empty line for now\n  641              loadedFileExecuting = (loadedFileName === currFileName);\n  642              setSourceText(data);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/examples/coffee/globals.coffee:\n    4  \n    5  print '*** Globals with a short name (<= 8 chars)'\n    6: print(name) for name in Object.getOwnPropertyNames(this) when name.length <= 8\n    7  \n    8  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/examples/eventloop/c_eventloop.js:\n   26      } else if (typeof func !== 'function') {\n   27          throw new TypeError('callback is not a function/string');\n   28:     } else if (arguments.length > 2) {\n   29          // Special case: callback arguments are provided.\n   30          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n   ..\n   62      } else if (typeof func !== 'function') {\n   63          throw new TypeError('callback is not a function/string');\n   64:     } else if (arguments.length > 2) {\n   65          // Special case: callback arguments are provided.\n   66          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n   ..\n  117              data = Socket.read(fd);  // no size control now\n  118              //print('READ', Duktape.enc('jx', data));\n  119:             if (data.length === 0) {\n  120                  this.close(fd);\n  121                  return;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/examples/eventloop/ecma_eventloop.js:\n   53  EventLoop.getEarliestTimer = function() {\n   54      var timers = this.timers;\n   55:     n = timers.length;\n   56      return (n > 0 ? timers[n - 1] : null);\n   57  }\n   ..\n   71       */\n   72  \n   73:     n = timers.length;\n   74      for (i = n - 1; i >= 0; i--) {\n   75          t = timers[i];\n   ..\n  103      }\n  104  \n  105:     n = timers.length;\n  106      for (i = 0; i < n; i++) {\n  107          t = timers[i];\n  ...\n  152          // Timers to expire?\n  153  \n  154:         n = timers.length;\n  155          if (n <= 0) {\n  156              break;\n  ...\n  291                      data = Socket.read(fd);  // no size control now\n  292                      //print('READ', Duktape.enc('jx', data));\n  293:                     if (data.length === 0) {\n  294                          //print('zero read for fd ' + fd + ', closing forcibly');\n  295                          rc = Socket.close(fd);  // ignore result\n  ...\n  381      } else if (typeof func !== 'function') {\n  382          throw new TypeError('callback is not a function/string');\n  383:     } else if (arguments.length > 2) {\n  384          // Special case: callback arguments are provided.\n  385          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n  ...\n  429      } else if (typeof func !== 'function') {\n  430          throw new TypeError('callback is not a function/string');\n  431:     } else if (arguments.length > 2) {\n  432          // Special case: callback arguments are provided.\n  433          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/examples/eventloop/server-socket-test.js:\n   21  \n   22          b = data.valueOf();  // ensure we get a plain buffer\n   23:         n = b.length;\n   24          for (i = 0; i < n; i++) {\n   25              x = b[i];\n   ..\n   29          }\n   30  \n   31:         print('read data on fd ' + fd + ', length ' + data.length);\n   32          EventLoop.write(fd, data);\n   33      });\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/polyfills/object-assign.js:\n   17             }\n   18  \n   19:            for (i = 1, n = arguments.length; i < n; i++) {\n   20                 source = arguments[i];\n   21                 if (source == null) {\n   ..\n   25                 keys = Object.keys(source);  // enumerable own keys\n   26  \n   27:                for (j = 0, m = keys.length; j < m; j++) {\n   28                     k = keys[j];\n   29                     try {\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src/duktape.c:\n 10367  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n 10368  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n 10369: \tbd_ctx.length = (duk_size_t) unilen;\n 10370  \n 10371  \tprev_re = 0;\n .....\n 10920  \tif (uppercase) {\n 10921  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n 10922: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n 10923  \t} else {\n 10924  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n 10925: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n 10926  \t}\n 10927  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n .....\n 11999  \t *\n 12000  \t * There are some difference between function templates and functions.\n 12001: \t * For example, function templates don't have .length and nargs is\n 12002  \t * normally used to instantiate the functions.\n 12003  \t */\n .....\n 36648  \tDUK_MEMZERO(&fb, sizeof(fb));\n 36649  \tfb.buffer = (duk_uint8_t *) str;\n 36650: \tfb.length = size;\n 36651  \tfb.offset = 0;\n 36652  \tfb.truncated = 0;\n .....\n 38902  /* Inspect a property using a virtual index into a conceptual property list\n 38903   * consisting of (1) all array part items from [0,a_size[ (even when above\n 38904:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 38905   * indicated using dvalue 'unused'.\n 38906   */\n .....\n 39184  \t * is and return 'unused' if the slots are not in active use.  In particular\n 39185  \t * the array part is included for the full a_size regardless of what the\n 39186: \t * array .length is.\n 39187  \t */\n 39188  \n .....\n 75743  \n 75744  /* Maximum number of digits generated. */\n 75745: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n 75746  \n 75747  /* Maximum number of characters in formatted value. */\n 75748: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n 75749  \n 75750  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-noline/duktape.c:\n 10327  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n 10328  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n 10329: \tbd_ctx.length = (duk_size_t) unilen;\n 10330  \n 10331  \tprev_re = 0;\n .....\n 10880  \tif (uppercase) {\n 10881  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n 10882: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n 10883  \t} else {\n 10884  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n 10885: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n 10886  \t}\n 10887  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n .....\n 11953  \t *\n 11954  \t * There are some difference between function templates and functions.\n 11955: \t * For example, function templates don't have .length and nargs is\n 11956  \t * normally used to instantiate the functions.\n 11957  \t */\n .....\n 36567  \tDUK_MEMZERO(&fb, sizeof(fb));\n 36568  \tfb.buffer = (duk_uint8_t *) str;\n 36569: \tfb.length = size;\n 36570  \tfb.offset = 0;\n 36571  \tfb.truncated = 0;\n .....\n 38820  /* Inspect a property using a virtual index into a conceptual property list\n 38821   * consisting of (1) all array part items from [0,a_size[ (even when above\n 38822:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 38823   * indicated using dvalue 'unused'.\n 38824   */\n .....\n 39102  \t * is and return 'unused' if the slots are not in active use.  In particular\n 39103  \t * the array part is included for the full a_size regardless of what the\n 39104: \t * array .length is.\n 39105  \t */\n 39106  \n .....\n 75628  \n 75629  /* Maximum number of digits generated. */\n 75630: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n 75631  \n 75632  /* Maximum number of characters in formatted value. */\n 75633: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n 75634  \n 75635  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_api_bytecode.c:\n  339  \t *\n  340  \t * There are some difference between function templates and functions.\n  341: \t * For example, function templates don't have .length and nargs is\n  342  \t * normally used to instantiate the functions.\n  343  \t */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_debug_vsnprintf.c:\n  832  \tDUK_MEMZERO(&fb, sizeof(fb));\n  833  \tfb.buffer = (duk_uint8_t *) str;\n  834: \tfb.length = size;\n  835  \tfb.offset = 0;\n  836  \tfb.truncated = 0;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:\n 2036  /* Inspect a property using a virtual index into a conceptual property list\n 2037   * consisting of (1) all array part items from [0,a_size[ (even when above\n 2038:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 2039   * indicated using dvalue 'unused'.\n 2040   */\n ....\n 2318  \t * is and return 'unused' if the slots are not in active use.  In particular\n 2319  \t * the array part is included for the full a_size regardless of what the\n 2320: \t * array .length is.\n 2321  \t */\n 2322  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_numconv.c:\n  627  \n  628  /* Maximum number of digits generated. */\n  629: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n  630  \n  631  /* Maximum number of characters in formatted value. */\n  632: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n  633  \n  634  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_unicode_support.c:\n  424  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n  425  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n  426: \tbd_ctx.length = (duk_size_t) unilen;\n  427  \n  428  \tprev_re = 0;\n  ...\n  977  \tif (uppercase) {\n  978  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n  979: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n  980  \t} else {\n  981  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n  982: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n  983  \t}\n  984  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/debugger/duk_debug.js:\n  117  // Bytecode opcode/extraop metadata\n  118  var dukOpcodes = yaml.load('duk_opcodes.yaml');\n  119: if (dukOpcodes.opcodes.length != 64) {\n  120      throw new Error('opcode metadata length incorrect');\n  121  }\n  122: if (dukOpcodes.extra.length != 256) {\n  123      throw new Error('extraop metadata length incorrect');\n  124  }\n  ...\n  146      // reason, so use a much slower variant.\n  147  \n  148:     for (i = 0, n = buf.length; i < n; i++) {\n  149          cp[i] = buf[i];\n  150      }\n  ...\n  153  */\n  154  \n  155:     for (i = 0, n = buf.length; i < n; i++) {\n  156          cp[i] = String.fromCharCode(buf[i]);\n  157      }\n  ...\n  166      var i, n;\n  167  \n  168:     for (i = 0, n = str.length; i < n; i++) {\n  169          buf[off + i] = str.charCodeAt(i) & 0xff;  // truncate higher bits\n  170      }\n  ...\n  237      }\n  238  \n  239:     if (cliplen && ret.length > cliplen) {\n  240          ret = ret.substring(0, cliplen) + '...';  // trailing '\"' intentionally missing\n  241      }\n  ...\n  269      }\n  270  \n  271:     if (cliplen && ret.length > cliplen) {\n  272          ret = ret.substring(0, cliplen) + '...';\n  273      }\n  ...\n  357  \n  358      lines = tmp.split(/\\r?\\n/);\n  359:     for (i = 0, n = lines.length; i < n; i++) {\n  360          line = lines[i];\n  361          if (/\\t/.test(line)) {\n  362              repl = '';\n  363:             for (j = 0, m = line.length; j < m; j++) {\n  364                  if (line.charAt(j) === '\\t') {\n  365                      repl += ' ';\n  366:                     while ((repl.length % 8) != 0) {\n  367                          repl += ' ';\n  368                      }\n  ...\n  467      this.files = files;\n  468  \n  469:     console.log('Found ' + files.length + ' source files in ' + this.directories.length + ' search directories');\n  470  };\n  471  \n  ...\n  487          var i, fn, data;\n  488  \n  489:         for (i = 0; i < _this.directories.length; i++) {\n  490              fn = path.join(_this.directories[i], fileName);\n  491              if (fs.existsSync(fn) && fs.lstatSync(fn).isFile()) {\n  ...\n  550  \n  551      function consume(n) {\n  552:         var tmp = new Buffer(buf.length - n);\n  553          buf.copy(tmp, 0, n);\n  554          buf = tmp;\n  ...\n  560  \n  561          if (_this.closed || !_this.inputStream) {\n  562:             console.log('Ignoring incoming data from closed input stream, len ' + data.length);\n  563              return;\n  564          }\n  565  \n  566:         _this.bytes += data.length;\n  567          if (rawDumpFileName) {\n  568              fs.appendFileSync(rawDumpFileName, data);\n  ...\n  577          // caller gives a non-null protocolVersion so we don't read one here.\n  578          if (protocolVersion == null) {\n  579:             if (buf.length > 1024) {\n  580                  _this.emit('transport-error', 'Parse error (version identification too long), dropping connection');\n  581                  _this.close();\n  ...\n  583              }\n  584  \n  585:             for (i = 0, n = buf.length; i < n; i++) {\n  586                  if (buf[i] == 0x0a) {\n  587                      tmpbuf = new Buffer(i);\n  ...\n  611          // See doc/debugger.rst for format description.\n  612  \n  613:         while (buf.length > 0) {\n  614              x = buf[0];\n  615              v = undefined;\n  ...\n  618              if (x >= 0xc0) {\n  619                  // 0xc0...0xff: integers 0-16383\n  620:                 if (buf.length >= 2) {\n  621                      v = ((x - 0xc0) << 8) + buf[1];\n  622                      consume(2);\n  ...\n  629                  // 0x60...0x7f: strings with length 0-31\n  630                  len = x - 0x60;\n  631:                 if (buf.length >= 1 + len) {\n  632                      v = new Buffer(len);\n  633                      buf.copy(v, 0, 1, 1 + len);\n  ...\n  643                  case 0x04: v = DVAL_NFY; consume(1); break;\n  644                  case 0x10:  // 4-byte signed integer\n  645:                     if (buf.length >= 5) {\n  646                          v = buf.readInt32BE(1);\n  647                          consume(5);\n  ...\n  649                      break;\n  650                  case 0x11:  // 4-byte string\n  651:                     if (buf.length >= 5) {\n  652                          len = buf.readUInt32BE(1);\n  653:                         if (buf.length >= 5 + len) {\n  654                              v = new Buffer(len);\n  655                              buf.copy(v, 0, 5, 5 + len);\n  ...\n  660                      break;\n  661                  case 0x12:  // 2-byte string\n  662:                     if (buf.length >= 3) {\n  663                          len = buf.readUInt16BE(1);\n  664:                         if (buf.length >= 3 + len) {\n  665                              v = new Buffer(len);\n  666                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  671                      break;\n  672                  case 0x13:  // 4-byte buffer\n  673:                     if (buf.length >= 5) {\n  674                          len = buf.readUInt32BE(1);\n  675:                         if (buf.length >= 5 + len) {\n  676                              v = new Buffer(len);\n  677                              buf.copy(v, 0, 5, 5 + len);\n  ...\n  684                      break;\n  685                  case 0x14:  // 2-byte buffer\n  686:                     if (buf.length >= 3) {\n  687                          len = buf.readUInt16BE(1);\n  688:                         if (buf.length >= 3 + len) {\n  689                              v = new Buffer(len);\n  690                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  719                      break;\n  720                  case 0x1a:  // number (IEEE double), big endian\n  721:                     if (buf.length >= 9) {\n  722                          v = new Buffer(8);\n  723                          buf.copy(v, 0, 1, 9);\n  ...\n  733                      break;\n  734                  case 0x1b:  // object\n  735:                     if (buf.length >= 3) {\n  736                          len = buf[2];\n  737:                         if (buf.length >= 3 + len) {\n  738                              v = new Buffer(len);\n  739                              buf.copy(v, 0, 3, 3 + len);\n  ...\n  744                      break;\n  745                  case 0x1c:  // pointer\n  746:                     if (buf.length >= 2) {\n  747                          len = buf[1];\n  748:                         if (buf.length >= 2 + len) {\n  749                              v = new Buffer(len);\n  750                              buf.copy(v, 0, 2, 2 + len);\n  ...\n  755                      break;\n  756                  case 0x1d:  // lightfunc\n  757:                     if (buf.length >= 4) {\n  758                          len = buf[3];\n  759:                         if (buf.length >= 4 + len) {\n  760                              v = new Buffer(len);\n  761                              buf.copy(v, 0, 4, 4 + len);\n  ...\n  766                      break;\n  767                  case 0x1e:  // heapptr\n  768:                     if (buf.length >= 2) {\n  769                          len = buf[1];\n  770:                         if (buf.length >= 2 + len) {\n  771                              v = new Buffer(len);\n  772                              buf.copy(v, 0, 2, 2 + len);\n  ...\n  869          } else if (v.type === 'number') {\n  870              dec = new Buffer(v.data, 'hex');\n  871:             len = dec.length;\n  872              if (len !== 8) {\n  873                  throw new TypeError('value cannot be converted to dvalue: ' + JSON.stringify(v));\n  ...\n  879          } else if (v.type === 'buffer') {\n  880              dec = new Buffer(v.data, 'hex');\n  881:             len = dec.length;\n  882              if (len <= 0xffff) {\n  883                  buf = new Buffer(3 + len);\n  ...\n  899          } else if (v.type === 'object') {\n  900              dec = new Buffer(v.pointer, 'hex');\n  901:             len = dec.length;\n  902              buf = new Buffer(3 + len);\n  903              buf[0] = 0x1b;\n  ...\n  908          } else if (v.type === 'pointer') {\n  909              dec = new Buffer(v.pointer, 'hex');\n  910:             len = dec.length;\n  911              buf = new Buffer(2 + len);\n  912              buf[0] = 0x1c;\n  ...\n  916          } else if (v.type === 'lightfunc') {\n  917              dec = new Buffer(v.pointer, 'hex');\n  918:             len = dec.length;\n  919              buf = new Buffer(4 + len);\n  920              buf[0] = 0x1d;\n  ...\n  926          } else if (v.type === 'heapptr') {\n  927              dec = new Buffer(v.pointer, 'hex');\n  928:             len = dec.length;\n  929              buf = new Buffer(2 + len);\n  930              buf[0] = 0x1e;\n  ...\n  965          }\n  966      } else if (typeof v === 'string') {\n  967:         if (v.length < 0 || v.length > 0xffffffff) {\n  968              // Not possible in practice.\n  969:             throw new TypeError('cannot convert to dvalue, invalid string length: ' + v.length);\n  970          }\n  971:         if (v.length <= 0x1f) {\n  972:             buf = new Buffer(1 + v.length);\n  973:             buf[0] = 0x60 + v.length;\n  974              writeDebugStringToBuffer(v, buf, 1);\n  975              return buf;\n  976:         } else if (v.length <= 0xffff) {\n  977:             buf = new Buffer(3 + v.length);\n  978              buf[0] = 0x12;\n  979:             buf[1] = (v.length >> 8) & 0xff;\n  980:             buf[2] = (v.length >> 0) & 0xff;\n  981              writeDebugStringToBuffer(v, buf, 3);\n  982              return buf;\n  983          } else {\n  984:             buf = new Buffer(5 + v.length);\n  985              buf[0] = 0x11;\n  986:             buf[1] = (v.length >> 24) & 0xff;\n  987:             buf[2] = (v.length >> 16) & 0xff;\n  988:             buf[3] = (v.length >> 8) & 0xff;\n  989:             buf[4] = (v.length >> 0) & 0xff;\n  990              writeDebugStringToBuffer(v, buf, 5);\n  991              return buf;\n  ...\n 1057      // compact argument list).\n 1058  \n 1059:     for (i = 0, n = buf.length; i < n; i += 4) {\n 1060          pc = i / 4;\n 1061  \n ....\n 1075          comments = [];\n 1076          if (op.args) {\n 1077:             for (j = 0, m = op.args.length; j < m; j++) {\n 1078                  switch (op.args[j]) {\n 1079                  case 'A_R':   args.push('r' + ((ins >>> 6) & 0xff)); break;\n ....\n 1114          }\n 1115          if (op.flags) {\n 1116:             for (j = 0, m = op.flags.length; j < m; j++) {\n 1117                  if (ins & op.flags[j].mask) {\n 1118                      comments.push(op.flags[j].name);\n ....\n 1121          }\n 1122  \n 1123:         if (args.length > 0) {\n 1124              str = sprintf('%05d %08x   %-10s %s', pc, ins, op.name, args.join(', '));\n 1125          } else {\n 1126              str = sprintf('%05d %08x   %-10s', pc, ins, op.name);\n 1127          }\n 1128:         if (comments.length > 0) {\n 1129              str = sprintf('%-44s ; %s', str, comments.join(', '));\n 1130          }\n ....\n 1149      }\n 1150      this.messageLines.push(msg);\n 1151:     while (this.messageLines.length > this.messageScrollBack) {\n 1152          this.messageLines.shift();\n 1153      }\n ....\n 1167          }\n 1168  \n 1169:         for (i = 0; i < msg.length; i++) {\n 1170              try {\n 1171                  dval = formatDebugValue(msg[i]);\n ....\n 1244          var breakpts = [];\n 1245  \n 1246:         for (i = 1, n = msg.length - 1; i < n; i += 2) {\n 1247              breakpts.push({ fileName: msg[i], lineNumber: msg[i + 1] });\n 1248          }\n ....\n 1260          var locals = [];\n 1261  \n 1262:         for (i = 1; i <= msg.length - 2; i += 2) {\n 1263              // XXX: do pretty printing in debug client for now\n 1264              locals.push({ key: msg[i], value: prettyUiDebugValue(msg[i + 1], LOCALS_CLIPLEN) });\n ....\n 1277          var stack = [];\n 1278  \n 1279:         for (i = 1; i + 3 <= msg.length - 1; i += 4) {\n 1280              stack.push({\n 1281                  fileName: msg[i],\n ....\n 1340          res.heapObjects = objs;\n 1341  \n 1342:         for (i = 1, n = msg.length - 1; i < n; /*nop*/) {\n 1343              o = {};\n 1344              o.ptr = msg[i++];\n ....\n 1432          // doesn't need to.\n 1433  \n 1434:         buf = new Buffer(val.length);\n 1435          writeDebugStringToBuffer(val, buf, 0);\n 1436          bcode = _this.decodeBytecodeFromBuffer(buf, consts, funcs);\n ....\n 1441          });\n 1442          preformatted.push('');\n 1443:         idxPreformattedInstructions = preformatted.length;\n 1444          bcode.forEach(function (v) {\n 1445              preformatted.push(v.str);\n ....\n 1468  \n 1469          // Up-to-date list of breakpoints on target\n 1470:         for (i = 1, n = msg.length - 1; i < n; i += 2) {\n 1471              breakpts.push({ fileName: msg[i], lineNumber: msg[i + 1] });\n 1472          }\n ....\n 1475          // remain valid.  We do this for all operations so that duplicates\n 1476          // are eliminated if present.\n 1477:         for (i = breakpts.length - 1; i >= 0; i--) {\n 1478              var bp = breakpts[i];\n 1479              if (mode === 'deleteall' || (bp.fileName === fileName && bp.lineNumber === lineNumber)) {\n ....\n 1644          console.log('Unsolicited reply message, dropping connection: ' + prettyDebugMessage(msg));\n 1645      } else if (msg[0] === DVAL_REP) {\n 1646:         if (this.reqQueue.length <= 0) {\n 1647              console.log('Unsolicited reply message, dropping connection: ' + prettyDebugMessage(msg));\n 1648              this.targetStream.destroy();\n ....\n 1660          }\n 1661      } else if (msg[0] === DVAL_ERR) {\n 1662:         if (this.reqQueue.length <= 0) {\n 1663              console.log('Unsolicited error message, dropping connection: ' + prettyDebugMessage(msg));\n 1664              this.targetStream.destroy();\n ....\n 1711              this.uiMessage({ type: 'throw', fatal: msg[2], message: (msg[2] ? 'UNCAUGHT: ' : 'THROW: ') + prettyUiStringUnquoted(msg[3], UI_MESSAGE_CLIPLEN), fileName: msg[4], lineNumber: msg[5] });\n 1712          } else if (msg[1] === CMD_DETACHING) {\n 1713:             this.uiMessage({ type: 'detaching', reason: msg[2], message: 'DETACH: ' + (msg.length >= 5 ? prettyUiStringUnquoted(msg[3]) : 'detaching') });\n 1714          } else {\n 1715              // Ignore unknown notify messages\n ....\n 2361                  request: _this.commandNumberToString(msg[1]),\n 2362                  command: msg[1],\n 2363:                 args: msg.slice(2, msg.length - 1)\n 2364              };\n 2365              _this.writeJson(t);\n ....\n 2367              t = {\n 2368                  reply: true,\n 2369:                 args: msg.slice(1, msg.length - 1)\n 2370              };\n 2371              _this.writeJson(t);\n ....\n 2373              t = {\n 2374                  error: true,\n 2375:                 args: msg.slice(1, msg.length - 1)\n 2376              };\n 2377              _this.writeJson(t);\n ....\n 2383                  notify: _this.commandNumberToString(msg[1]),\n 2384                  command: msg[1],\n 2385:                 args: msg.slice(2, msg.length - 1)\n 2386              };\n 2387              _this.writeJson(t);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/debugger/duk_debug_proxy.js:\n   53      // (not the full underlying buffer).\n   54  \n   55:     var u8 = new Uint8Array(typedarray.length);\n   56      u8.set(typedarray);  // make a copy, ensuring there's no slice offset\n   57      return Duktape.Buffer(u8);  // get underlying plain buffer\n   ..\n   76              var newData;\n   77  \n   78:             log.debug('Read callback:', buf.length, err);\n   79              if (err) {\n   80                  uv.fs_close(handle);\n   81                  return cb(null, err);\n   82              }\n   83:             if (buf.length == 0) {\n   84                  uv.fs_close(handle);\n   85                  res = new Uint8Array(dataOff);\n   86                  res.set(data.subarray(0, dataOff));\n   87                  res = Duktape.Buffer(res);  // plain buffer\n   88:                 log.debug('Read', res.length, 'bytes from', filename);\n   89                  return cb(res, null);\n   90              }\n   91:             while (data.length - dataOff < buf.length) {\n   92:                 log.debug('Resize file read buffer:', data.length, '->', data.length * 2);\n   93:                 newData = new Uint8Array(data.length * 2);\n   94                  newData.set(data);\n   95                  data = newData;\n   96              }\n   97              data.set(new Uint8Array(buf), dataOff);\n   98:             dataOff += buf.length;\n   99:             fileOff += buf.length;\n  100              uv.fs_read(handle, 4096, fileOff, readCb);\n  101          }\n  ...\n  171      this.commandNumberLookup = {};\n  172      if (metadata && metadata.target_commands) {\n  173:         for (i = 0, n = metadata.target_commands.length; i < n; i++) {\n  174              this.commandNumberLookup[metadata.target_commands[i]] = i;\n  175          }\n  ...\n  207      var tmpBuf;\n  208  \n  209:     log.trace('Received data from JSON socket, err:', err, 'data length:', data ? data.length : 'null');\n  210  \n  211      if (err) {\n  ...\n  216      if (data) {\n  217          // Feed the data one byte at a time when torture testing.\n  218:         if (TORTURE && data.length > 1) {\n  219:             for (var i = 0; i < data.length; i++) {\n  220                  tmpBuf = Duktape.Buffer(1);\n  221                  tmpBuf[0] = data[i];\n  ...\n  226  \n  227          // Receive data into 'incoming', resizing as necessary.\n  228:         while (data.length > this.incoming.length - this.incomingOffset) {\n  229:             newIncoming = new Uint8Array(this.incoming.length * 1.3 + 16);\n  230              newIncoming.set(this.incoming);\n  231              this.incoming = newIncoming;\n  232:             log.debug('Resize incoming JSON buffer to ' + this.incoming.length);\n  233          }\n  234          this.incoming.set(new Uint8Array(data), this.incomingOffset);\n  235:         this.incomingOffset += data.length;\n  236  \n  237          // Trial parse JSON message(s).\n  ...\n  271      var cmd;\n  272  \n  273:     if (dvalues.length <= 0) {\n  274          throw new Error('invalid dvalues list: length <= 0');\n  275      }\n  ...\n  300      }\n  301  \n  302:     for (; idx < dvalues.length - 1; idx++) {\n  303          if (!msg.args) {\n  304              msg.args = [];\n  ...\n  386  \n  387      // Encode arguments into dvalues.\n  388:     for (i = 0, n = (msg.args ? msg.args.length : 0); i < n; i++) {\n  389          dvalues.push(this.encodeJsonDvalue(msg.args[i]));\n  390      }\n  ...\n  392      // Add an EOM, and write out the dvalues to the debug target.\n  393      dvalues.push(new Uint8Array([ 0x00 ]));\n  394:     for (i = 0, n = dvalues.length; i < n; i++) {\n  395          this.targetHandler.writeBinary(dvalues[i]);\n  396      }\n  ...\n  423      var i, n;\n  424  \n  425:     for (i = 0, n = v.length; i < n; i++) {\n  426          buf[off + i] = v.charCodeAt(i) & 0xff;  // truncate higher bits\n  427      }\n  ...\n  448          } else if (v.type === 'number') {\n  449              dec = Duktape.dec('hex', v.data);\n  450:             len = dec.length;\n  451              if (len !== 8) {\n  452                  throw new TypeError('value cannot be converted to dvalue: ' + JSON.stringify(v));\n  ...\n  458          } else if (v.type === 'buffer') {\n  459              dec = Duktape.dec('hex', v.data);\n  460:             len = dec.length;\n  461              if (len <= 0xffff) {\n  462                  buf = new Uint8Array(3 + len);\n  ...\n  478          } else if (v.type === 'object') {\n  479              dec = Duktape.dec('hex', v.pointer);\n  480:             len = dec.length;\n  481              buf = new Uint8Array(3 + len);\n  482              buf[0] = 0x1b;\n  ...\n  487          } else if (v.type === 'pointer') {\n  488              dec = Duktape.dec('hex', v.pointer);\n  489:             len = dec.length;\n  490              buf = new Uint8Array(2 + len);\n  491              buf[0] = 0x1c;\n  ...\n  495          } else if (v.type === 'lightfunc') {\n  496              dec = Duktape.dec('hex', v.pointer);\n  497:             len = dec.length;\n  498              buf = new Uint8Array(4 + len);\n  499              buf[0] = 0x1d;\n  ...\n  505          } else if (v.type === 'heapptr') {\n  506              dec = Duktape.dec('hex', v.pointer);\n  507:             len = dec.length;\n  508              buf = new Uint8Array(2 + len);\n  509              buf[0] = 0x1e;\n  ...\n  544          }\n  545      } else if (typeof v === 'string') {\n  546:         if (v.length < 0 || v.length > 0xffffffff) {\n  547              // Not possible in practice.\n  548:             throw new TypeError('cannot convert to dvalue, invalid string length: ' + v.length);\n  549          }\n  550:         if (v.length <= 0x1f) {\n  551:             buf = new Uint8Array(1 + v.length);\n  552:             buf[0] = 0x60 + v.length;\n  553              this.writeDebugStringToBuffer(v, buf, 1);\n  554              return buf;\n  555:         } else if (v.length <= 0xffff) {\n  556:             buf = new Uint8Array(3 + v.length);\n  557              buf[0] = 0x12;\n  558:             buf[1] = (v.length >> 8) & 0xff;\n  559:             buf[2] = (v.length >> 0) & 0xff;\n  560              this.writeDebugStringToBuffer(v, buf, 3);\n  561              return buf;\n  562          } else {\n  563:             buf = new Uint8Array(5 + v.length);\n  564              buf[0] = 0x11;\n  565:             buf[1] = (v.length >> 24) & 0xff;\n  566:             buf[2] = (v.length >> 16) & 0xff;\n  567:             buf[3] = (v.length >> 8) & 0xff;\n  568:             buf[4] = (v.length >> 0) & 0xff;\n  569              this.writeDebugStringToBuffer(v, buf, 5);\n  570              return buf;\n  ...\n  644      var newIncoming;\n  645  \n  646:     log.trace('Received data from target socket, err:', err, 'data length:', data ? data.length : 'null');\n  647  \n  648      if (err) {\n  ...\n  654      if (data) {\n  655          // Feed the data one byte at a time when torture testing.\n  656:         if (TORTURE && data.length > 1) {\n  657:             for (var i = 0; i < data.length; i++) {\n  658                  tmpBuf = Duktape.Buffer(1);\n  659                  tmpBuf[0] = data[i];\n  ...\n  664  \n  665          // Receive data into 'incoming', resizing as necessary.\n  666:         while (data.length > this.incoming.length - this.incomingOffset) {\n  667:             newIncoming = new Uint8Array(this.incoming.length * 1.3 + 16);\n  668              newIncoming.set(this.incoming);\n  669              this.incoming = newIncoming;\n  670:             log.debug('Resize incoming binary buffer to ' + this.incoming.length);\n  671          }\n  672          this.incoming.set(new Uint8Array(data), this.incomingOffset);\n  673:         this.incomingOffset += data.length;\n  674  \n  675          // Trial parse handshake unless done.\n  ...\n  945      var argv = typeof uv.argv === 'function' ? uv.argv() : [];\n  946      var i;\n  947:     for (i = 2; i < argv.length; i++) {  // skip dukluv and script name\n  948          if (argv[i] == '--help') {\n  949              print('Usage: dukluv ' + argv[1] + ' [option]+');\n  ...\n  974              continue;\n  975          }\n  976:         if (i >= argv.length - 1) {\n  977              throw new Error('missing option value for ' + argv[i]);\n  978          }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/debugger/static/webui.js:\n   73          }\n   74      });\n   75:     sourceEditedLines.length = 0;\n   76  \n   77      // If we're executing the file shown, highlight current line\n   ..\n  322  \n  323      elem.empty();\n  324:     for (i = 0, n = msg.length; i < n; i++) {\n  325          ent = msg[i];\n  326          if (ent.type === 'print') {\n  ...\n  376  \n  377      elem.empty();\n  378:     for (i = 0, n = msg.locals.length; i < n; i++) {\n  379          e = msg.locals[i];\n  380          s1 = $('<span class=\"value\"></span>').text(e.value);  // float\n  ...\n  564  \n  565      // XXX: any faster way; elems doesn't have e.g. indexOf()\n  566:     for (i = 0, n = elems.length; i < n; i++) {\n  567          if (target === elems[i]) {\n  568              line = i + 1;\n  ...\n  600  \n  601      elem = $('#source-select option');\n  602:     for (i = 0, n = elem.length; i < n; i++) {\n  603          // Exact match is required.\n  604          t = $(elem[i]).val();\n  ...\n  638  \n  639              loadedFileName = fileName;\n  640:             loadedLineCount = data.split('\\n').length;  // XXX: ignore issue with last empty line for now\n  641              loadedFileExecuting = (loadedFileName === currFileName);\n  642              setSourceText(data);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/examples/coffee/globals.coffee:\n    4  \n    5  print '*** Globals with a short name (<= 8 chars)'\n    6: print(name) for name in Object.getOwnPropertyNames(this) when name.length <= 8\n    7  \n    8  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/examples/eventloop/c_eventloop.js:\n   26      } else if (typeof func !== 'function') {\n   27          throw new TypeError('callback is not a function/string');\n   28:     } else if (arguments.length > 2) {\n   29          // Special case: callback arguments are provided.\n   30          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n   ..\n   62      } else if (typeof func !== 'function') {\n   63          throw new TypeError('callback is not a function/string');\n   64:     } else if (arguments.length > 2) {\n   65          // Special case: callback arguments are provided.\n   66          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n   ..\n  117              data = Socket.read(fd);  // no size control now\n  118              //print('READ', Duktape.enc('jx', data));\n  119:             if (data.length === 0) {\n  120                  this.close(fd);\n  121                  return;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/examples/eventloop/ecma_eventloop.js:\n   53  EventLoop.getEarliestTimer = function() {\n   54      var timers = this.timers;\n   55:     n = timers.length;\n   56      return (n > 0 ? timers[n - 1] : null);\n   57  }\n   ..\n   71       */\n   72  \n   73:     n = timers.length;\n   74      for (i = n - 1; i >= 0; i--) {\n   75          t = timers[i];\n   ..\n  103      }\n  104  \n  105:     n = timers.length;\n  106      for (i = 0; i < n; i++) {\n  107          t = timers[i];\n  ...\n  152          // Timers to expire?\n  153  \n  154:         n = timers.length;\n  155          if (n <= 0) {\n  156              break;\n  ...\n  291                      data = Socket.read(fd);  // no size control now\n  292                      //print('READ', Duktape.enc('jx', data));\n  293:                     if (data.length === 0) {\n  294                          //print('zero read for fd ' + fd + ', closing forcibly');\n  295                          rc = Socket.close(fd);  // ignore result\n  ...\n  381      } else if (typeof func !== 'function') {\n  382          throw new TypeError('callback is not a function/string');\n  383:     } else if (arguments.length > 2) {\n  384          // Special case: callback arguments are provided.\n  385          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n  ...\n  429      } else if (typeof func !== 'function') {\n  430          throw new TypeError('callback is not a function/string');\n  431:     } else if (arguments.length > 2) {\n  432          // Special case: callback arguments are provided.\n  433          bind_args = Array.prototype.slice.call(arguments, 2);  // [ arg1, arg2, ... ]\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/examples/eventloop/server-socket-test.js:\n   21  \n   22          b = data.valueOf();  // ensure we get a plain buffer\n   23:         n = b.length;\n   24          for (i = 0; i < n; i++) {\n   25              x = b[i];\n   ..\n   29          }\n   30  \n   31:         print('read data on fd ' + fd + ', length ' + data.length);\n   32          EventLoop.write(fd, data);\n   33      });\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/polyfills/object-assign.js:\n   17             }\n   18  \n   19:            for (i = 1, n = arguments.length; i < n; i++) {\n   20                 source = arguments[i];\n   21                 if (source == null) {\n   ..\n   25                 keys = Object.keys(source);  // enumerable own keys\n   26  \n   27:                for (j = 0, m = keys.length; j < m; j++) {\n   28                     k = keys[j];\n   29                     try {\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src/duktape.c:\n 10372  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n 10373  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n 10374: \tbd_ctx.length = (duk_size_t) unilen;\n 10375  \n 10376  \tprev_re = 0;\n .....\n 10925  \tif (uppercase) {\n 10926  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n 10927: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n 10928  \t} else {\n 10929  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n 10930: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n 10931  \t}\n 10932  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n .....\n 12004  \t *\n 12005  \t * There are some difference between function templates and functions.\n 12006: \t * For example, function templates don't have .length and nargs is\n 12007  \t * normally used to instantiate the functions.\n 12008  \t */\n .....\n 36855  \tDUK_MEMZERO(&fb, sizeof(fb));\n 36856  \tfb.buffer = (duk_uint8_t *) str;\n 36857: \tfb.length = size;\n 36858  \tfb.offset = 0;\n 36859  \tfb.truncated = 0;\n .....\n 39121  /* Inspect a property using a virtual index into a conceptual property list\n 39122   * consisting of (1) all array part items from [0,a_size[ (even when above\n 39123:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 39124   * indicated using dvalue 'unused'.\n 39125   */\n .....\n 39403  \t * is and return 'unused' if the slots are not in active use.  In particular\n 39404  \t * the array part is included for the full a_size regardless of what the\n 39405: \t * array .length is.\n 39406  \t */\n 39407  \n .....\n 76030  \n 76031  /* Maximum number of digits generated. */\n 76032: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n 76033  \n 76034  /* Maximum number of characters in formatted value. */\n 76035: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n 76036  \n 76037  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-noline/duktape.c:\n 10332  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n 10333  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n 10334: \tbd_ctx.length = (duk_size_t) unilen;\n 10335  \n 10336  \tprev_re = 0;\n .....\n 10885  \tif (uppercase) {\n 10886  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n 10887: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n 10888  \t} else {\n 10889  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n 10890: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n 10891  \t}\n 10892  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n .....\n 11958  \t *\n 11959  \t * There are some difference between function templates and functions.\n 11960: \t * For example, function templates don't have .length and nargs is\n 11961  \t * normally used to instantiate the functions.\n 11962  \t */\n .....\n 36774  \tDUK_MEMZERO(&fb, sizeof(fb));\n 36775  \tfb.buffer = (duk_uint8_t *) str;\n 36776: \tfb.length = size;\n 36777  \tfb.offset = 0;\n 36778  \tfb.truncated = 0;\n .....\n 39039  /* Inspect a property using a virtual index into a conceptual property list\n 39040   * consisting of (1) all array part items from [0,a_size[ (even when above\n 39041:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 39042   * indicated using dvalue 'unused'.\n 39043   */\n .....\n 39321  \t * is and return 'unused' if the slots are not in active use.  In particular\n 39322  \t * the array part is included for the full a_size regardless of what the\n 39323: \t * array .length is.\n 39324  \t */\n 39325  \n .....\n 75915  \n 75916  /* Maximum number of digits generated. */\n 75917: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n 75918  \n 75919  /* Maximum number of characters in formatted value. */\n 75920: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n 75921  \n 75922  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_api_bytecode.c:\n  339  \t *\n  340  \t * There are some difference between function templates and functions.\n  341: \t * For example, function templates don't have .length and nargs is\n  342  \t * normally used to instantiate the functions.\n  343  \t */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_debug_vsnprintf.c:\n  832  \tDUK_MEMZERO(&fb, sizeof(fb));\n  833  \tfb.buffer = (duk_uint8_t *) str;\n  834: \tfb.length = size;\n  835  \tfb.offset = 0;\n  836  \tfb.truncated = 0;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:\n 2048  /* Inspect a property using a virtual index into a conceptual property list\n 2049   * consisting of (1) all array part items from [0,a_size[ (even when above\n 2050:  * .length) and (2) all entry part items from [0,e_next[.  Unused slots are\n 2051   * indicated using dvalue 'unused'.\n 2052   */\n ....\n 2330  \t * is and return 'unused' if the slots are not in active use.  In particular\n 2331  \t * the array part is included for the full a_size regardless of what the\n 2332: \t * array .length is.\n 2333  \t */\n 2334  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_numconv.c:\n  627  \n  628  /* Maximum number of digits generated. */\n  629: #define DUK__MAX_OUTPUT_DIGITS          1040  /* (Number.MAX_VALUE).toString(2).length == 1024, + spare */\n  630  \n  631  /* Maximum number of characters in formatted value. */\n  632: #define DUK__MAX_FORMATTED_LENGTH       1040  /* (-Number.MAX_VALUE).toString(2).length == 1025, + spare */\n  633  \n  634  /* Number and (minimum) size of bigints in the nc_ctx structure. */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_unicode_support.c:\n  424  \tDUK_MEMZERO(&bd_ctx, sizeof(bd_ctx));\n  425  \tbd_ctx.data = (const duk_uint8_t *) unitab;\n  426: \tbd_ctx.length = (duk_size_t) unilen;\n  427  \n  428  \tprev_re = 0;\n  ...\n  977  \tif (uppercase) {\n  978  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_uc;\n  979: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_uc);\n  980  \t} else {\n  981  \t\tbd_ctx.data = (const duk_uint8_t *) duk_unicode_caseconv_lc;\n  982: \t\tbd_ctx.length = (duk_size_t) sizeof(duk_unicode_caseconv_lc);\n  983  \t}\n  984  \treturn duk__slow_case_conversion(thr, bw, cp, &bd_ctx);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/MethodTest.xhtml:\n   55      function setRadioValue(elmname, value) {\n   56        var elms = document.getElementsByName(elmname);\n   57:       var len = elms.length;\n   58        var ret = false;\n   59  \n   ..\n   68  \n   69        var elms = document.getElementsByName(elmname);\n   70:       var len = elms.length;\n   71        var ret = \"\";\n   72  \n   ..\n  107            }\n  108          }\n  109:         xmlhttp.setRequestHeader(\"Content-Length\", body.length);\n  110        }\n  111  \n  ...\n  116            var blen = \"\";\n  117            if (body) {\n  118:             blen = \"\\nWith \" + body.length + \" bytes body data\";\n  119            }\n  120  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/page2.ssjs:\n   14    elms = Object.getOwnPropertyNames(obj)\n   15  \n   16:   for (var i = 0; i < elms.length; i++) {\n   17      conn.write(JSON.stringify(elms[i]) + \":<br>\\r\\n\")\n   18      conn.write(\"Type: \" + typeof(obj[elms[i]]) + \"<br>\\r\\n\")\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/page3.ssjs:\n   49  print(\" with server side javascript.</p>\\n\");\n   50  \n   51: for (var i=0; i < opts.length; i++) {\n   52    var o = opts[i];\n   53    var n = civetweb.getoption(o);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/websocket.xhtml:\n   29                queryStringElem_Table[keyValuePair[0]] = [];\n   30              }\n   31:             var idx = queryStringElem_Table[keyValuePair[0]].length+1;\n   32              queryStringElem_Table[keyValuePair[0]][idx] = keyValuePair[1] || '';\n   33            }\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/ajax/jquery.js:\n    1  /*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org/license */\n    2: !function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(e,t){\"use strict\";var n=[],r=e.document,i=Object.getPrototypeOf,o=n.slice,a=n.concat,s=n.push,u=n.indexOf,l={},c=l.toString,f=l.hasOwnProperty,p=f.toString,d=p.call(Object),h={},g=function e(t){return\"function\"==typeof t&&\"number\"!=typeof t.nodeType},y=function e(t){return null!=t&&t===t.window},v={type:!0,src:!0,noModule:!0};function m(e,t,n){var i,o=(t=t||r).createElement(\"script\");if(o.text=e,n)for(i in v)n[i]&&(o[i]=n[i]);t.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[c.call(e)]||\"object\":typeof e}var b=\"3.3.1\",w=function(e,t){return new w.fn.init(e,t)},T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;w.fn=w.prototype={jquery:\"3.3.1\",constructor:w,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=w.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return w.each(this,e)},map:function(e){return this.pushStack(w.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:n.sort,splice:n.splice},w.extend=w.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||g(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)n=a[t],a!==(r=e[t])&&(l&&r&&(w.isPlainObject(r)||(i=Array.isArray(r)))?(i?(i=!1,o=n&&Array.isArray(n)?n:[]):o=n&&w.isPlainObject(n)?n:{},a[t]=w.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},w.extend({expando:\"jQuery\"+(\"3.3.1\"+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==c.call(e))&&(!(t=i(e))||\"function\"==typeof(n=f.call(t,\"constructor\")&&t.constructor)&&p.call(n)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e){m(e)},each:function(e,t){var n,r=0;if(C(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:function(e){return null==e?\"\":(e+\"\").replace(T,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(C(Object(e))?w.merge(n,\"string\"==typeof e?[e]:e):s.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:u.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],o=0,a=e.length,s=!n;o<a;o++)(r=!t(e[o],o))!==s&&i.push(e[o]);return i},map:function(e,t,n){var r,i,o=0,s=[];if(C(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&s.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&s.push(i);return a.apply([],s)},guid:1,support:h}),\"function\"==typeof Symbol&&(w.fn[Symbol.iterator]=n[Symbol.iterator]),w.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function C(e){var t=!!e&&\"length\"in e&&e.length,n=x(e);return!g(e)&&!y(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&t>0&&t-1 in e)}var E=function(e){var t,n,r,i,o,a,s,u,l,c,f,p,d,h,g,y,v,m,x,b=\"sizzle\"+1*new Date,w=e.document,T=0,C=0,E=ae(),k=ae(),S=ae(),D=function(e,t){return e===t&&(f=!0),0},N={}.hasOwnProperty,A=[],j=A.pop,q=A.push,L=A.push,H=A.slice,O=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},P=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",R=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",I=\"\\\\[\"+M+\"*(\"+R+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+R+\"))|)\"+M+\"*\\\\]\",W=\":(\"+R+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+I+\")*)|.*)\\\\)|)\",$=new RegExp(M+\"+\",\"g\"),B=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),F=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),_=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),z=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),X=new RegExp(W),U=new RegExp(\"^\"+R+\"$\"),V={ID:new RegExp(\"^#(\"+R+\")\"),CLASS:new RegExp(\"^\\\\.(\"+R+\")\"),TAG:new RegExp(\"^(\"+R+\"|[*])\"),ATTR:new RegExp(\"^\"+I),PSEUDO:new RegExp(\"^\"+W),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+P+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},G=/^(?:input|select|textarea|button)$/i,Y=/^h\\d$/i,Q=/^[^{]+\\{\\s*\\[native \\w/,J=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,K=/[+~]/,Z=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),ee=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:r<0?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},te=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ne=function(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},re=function(){p()},ie=me(function(e){return!0===e.disabled&&(\"form\"in e||\"label\"in e)},{dir:\"parentNode\",next:\"legend\"});try{L.apply(A=H.call(w.childNodes),w.childNodes),A[w.childNodes.length].nodeType}catch(e){L={apply:A.length?function(e,t){q.apply(e,H.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function oe(e,t,r,i){var o,s,l,c,f,h,v,m=t&&t.ownerDocument,T=t?t.nodeType:9;if(r=r||[],\"string\"!=typeof e||!e||1!==T&&9!==T&&11!==T)return r;if(!i&&((t?t.ownerDocument||t:w)!==d&&p(t),t=t||d,g)){if(11!==T&&(f=J.exec(e)))if(o=f[1]){if(9===T){if(!(l=t.getElementById(o)))return r;if(l.id===o)return r.push(l),r}else if(m&&(l=m.getElementById(o))&&x(t,l)&&l.id===o)return r.push(l),r}else{if(f[2])return L.apply(r,t.getElementsByTagName(e)),r;if((o=f[3])&&n.getElementsByClassName&&t.getElementsByClassName)return L.apply(r,t.getElementsByClassName(o)),r}if(n.qsa&&!S[e+\" \"]&&(!y||!y.test(e))){if(1!==T)m=t,v=e;else if(\"object\"!==t.nodeName.toLowerCase()){(c=t.getAttribute(\"id\"))?c=c.replace(te,ne):t.setAttribute(\"id\",c=b),s=(h=a(e)).length;while(s--)h[s]=\"#\"+c+\" \"+ve(h[s]);v=h.join(\",\"),m=K.test(e)&&ge(t.parentNode)||t}if(v)try{return L.apply(r,m.querySelectorAll(v)),r}catch(e){}finally{c===b&&t.removeAttribute(\"id\")}}}return u(e.replace(B,\"$1\"),t,r,i)}function ae(){var e=[];function t(n,i){return e.push(n+\" \")>r.cacheLength&&delete t[e.shift()],t[n+\" \"]=i}return t}function se(e){return e[b]=!0,e}function ue(e){var t=d.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function le(e,t){var n=e.split(\"|\"),i=n.length;while(i--)r.attrHandle[n[i]]=t}function ce(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function fe(e){return function(t){return\"input\"===t.nodeName.toLowerCase()&&t.type===e}}function pe(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function de(e){return function(t){return\"form\"in t?t.parentNode&&!1===t.disabled?\"label\"in t?\"label\"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ie(t)===e:t.disabled===e:\"label\"in t&&t.disabled===e}}function he(e){return se(function(t){return t=+t,se(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}function ge(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}n=oe.support={},o=oe.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&\"HTML\"!==t.nodeName},p=oe.setDocument=function(e){var t,i,a=e?e.ownerDocument||e:w;return a!==d&&9===a.nodeType&&a.documentElement?(d=a,h=d.documentElement,g=!o(d),w!==d&&(i=d.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener(\"unload\",re,!1):i.attachEvent&&i.attachEvent(\"onunload\",re)),n.attributes=ue(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),n.getElementsByTagName=ue(function(e){return e.appendChild(d.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),n.getElementsByClassName=Q.test(d.getElementsByClassName),n.getById=ue(function(e){return h.appendChild(e).id=b,!d.getElementsByName||!d.getElementsByName(b).length}),n.getById?(r.filter.ID=function(e){var t=e.replace(Z,ee);return function(e){return e.getAttribute(\"id\")===t}},r.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(r.filter.ID=function(e){var t=e.replace(Z,ee);return function(e){var n=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return n&&n.value===t}},r.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&g){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),r.find.TAG=n.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&g)return t.getElementsByClassName(e)},v=[],y=[],(n.qsa=Q.test(d.querySelectorAll))&&(ue(function(e){h.appendChild(e).innerHTML=\"<a id='\"+b+\"'></a><select id='\"+b+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",e.querySelectorAll(\"[msallowcapture^='']\").length&&y.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||y.push(\"\\\\[\"+M+\"*(?:value|\"+P+\")\"),e.querySelectorAll(\"[id~=\"+b+\"-]\").length||y.push(\"~=\"),e.querySelectorAll(\":checked\").length||y.push(\":checked\"),e.querySelectorAll(\"a#\"+b+\"+*\").length||y.push(\".#.+[+~]\")}),ue(function(e){e.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var t=d.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&y.push(\"name\"+M+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&y.push(\":enabled\",\":disabled\"),h.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&y.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),y.push(\",.*:\")})),(n.matchesSelector=Q.test(m=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&ue(function(e){n.disconnectedMatch=m.call(e,\"*\"),m.call(e,\"[s!='']:x\"),v.push(\"!=\",W)}),y=y.length&&new RegExp(y.join(\"|\")),v=v.length&&new RegExp(v.join(\"|\")),t=Q.test(h.compareDocumentPosition),x=t||Q.test(h.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return f=!0,0;var r=!e.compareDocumentPosition-!t.compareDocumentPosition;return r||(1&(r=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===r?e===d||e.ownerDocument===w&&x(w,e)?-1:t===d||t.ownerDocument===w&&x(w,t)?1:c?O(c,e)-O(c,t):0:4&r?-1:1)}:function(e,t){if(e===t)return f=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e===d?-1:t===d?1:i?-1:o?1:c?O(c,e)-O(c,t):0;if(i===o)return ce(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?ce(a[r],s[r]):a[r]===w?-1:s[r]===w?1:0},d):d},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if((e.ownerDocument||e)!==d&&p(e),t=t.replace(z,\"='$1']\"),n.matchesSelector&&g&&!S[t+\" \"]&&(!v||!v.test(t))&&(!y||!y.test(t)))try{var r=m.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){}return oe(t,d,null,[e]).length>0},oe.contains=function(e,t){return(e.ownerDocument||e)!==d&&p(e),x(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!==d&&p(e);var i=r.attrHandle[t.toLowerCase()],o=i&&N.call(r.attrHandle,t.toLowerCase())?i(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},oe.escape=function(e){return(e+\"\").replace(te,ne)},oe.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},oe.uniqueSort=function(e){var t,r=[],i=0,o=0;if(f=!n.detectDuplicates,c=!n.sortStable&&e.slice(0),e.sort(D),f){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1)}return c=null,e},i=oe.getText=function(e){var t,n=\"\",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e)}else if(3===o||4===o)return e.nodeValue}else while(t=e[r++])n+=i(t);return n},(r=oe.selectors={cacheLength:50,createPseudo:se,match:V,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(Z,ee),e[3]=(e[3]||e[4]||e[5]||\"\").replace(Z,ee),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return V.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&X.test(n)&&(t=a(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(Z,ee).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+\" \"];return t||(t=new RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&E(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=oe.attr(r,e);return null==i?\"!=\"===t:!t||(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i.replace($,\" \")+\" \").indexOf(n)>-1:\"|=\"===t&&(i===n||i.slice(0,n.length+1)===n+\"-\"))}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,f,p,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",y=t.parentNode,v=s&&t.nodeName.toLowerCase(),m=!u&&!s,x=!1;if(y){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?y.firstChild:y.lastChild],a&&m){x=(d=(l=(c=(f=(p=y)[b]||(p[b]={}))[p.uniqueID]||(f[p.uniqueID]={}))[e]||[])[0]===T&&l[1])&&l[2],p=d&&y.childNodes[d];while(p=++d&&p&&p[g]||(x=d=0)||h.pop())if(1===p.nodeType&&++x&&p===t){c[e]=[T,d,x];break}}else if(m&&(x=d=(l=(c=(f=(p=t)[b]||(p[b]={}))[p.uniqueID]||(f[p.uniqueID]={}))[e]||[])[0]===T&&l[1]),!1===x)while(p=++d&&p&&p[g]||(x=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===v:1===p.nodeType)&&++x&&(m&&((c=(f=p[b]||(p[b]={}))[p.uniqueID]||(f[p.uniqueID]={}))[e]=[T,x]),p===t))break;return(x-=i)===r||x%r==0&&x/r>=0}}},PSEUDO:function(e,t){var n,i=r.pseudos[e]||r.setFilters[e.toLowerCase()]||oe.error(\"unsupported pseudo: \"+e);return i[b]?i(t):i.length>1?(n=[e,e,\"\",t],r.setFilters.hasOwnProperty(e.toLowerCase())?se(function(e,n){var r,o=i(e,t),a=o.length;while(a--)e[r=O(e,o[a])]=!(n[r]=o[a])}):function(e){return i(e,0,n)}):i}},pseudos:{not:se(function(e){var t=[],n=[],r=s(e.replace(B,\"$1\"));return r[b]?se(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:se(function(e){return function(t){return oe(e,t).length>0}}),contains:se(function(e){return e=e.replace(Z,ee),function(t){return(t.textContent||t.innerText||i(t)).indexOf(e)>-1}}),lang:se(function(e){return U.test(e||\"\")||oe.error(\"unsupported lang: \"+e),e=e.replace(Z,ee).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return(n=n.toLowerCase())===e||0===n.indexOf(e+\"-\")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===d.activeElement&&(!d.hasFocus||d.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:de(!1),disabled:de(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!r.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:he(function(){return[0]}),last:he(function(e,t){return[t-1]}),eq:he(function(e,t,n){return[n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:he(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=r.pseudos.eq;for(t in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[t]=fe(t);for(t in{submit:!0,reset:!0})r.pseudos[t]=pe(t);function ye(){}ye.prototype=r.filters=r.pseudos,r.setFilters=new ye,a=oe.tokenize=function(e,t){var n,i,o,a,s,u,l,c=k[e+\" \"];if(c)return t?0:c.slice(0);s=e,u=[],l=r.preFilter;while(s){n&&!(i=F.exec(s))||(i&&(s=s.slice(i[0].length)||s),u.push(o=[])),n=!1,(i=_.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(B,\" \")}),s=s.slice(n.length));for(a in r.filter)!(i=V[a].exec(s))||l[a]&&!(i=l[a](i))||(n=i.shift(),o.push({value:n,type:a,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?oe.error(e):k(e,u).slice(0)};function ve(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function me(e,t,n){var r=t.dir,i=t.next,o=i||r,a=n&&\"parentNode\"===o,s=C++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||a)return e(t,n,i);return!1}:function(t,n,u){var l,c,f,p=[T,s];if(u){while(t=t[r])if((1===t.nodeType||a)&&e(t,n,u))return!0}else while(t=t[r])if(1===t.nodeType||a)if(f=t[b]||(t[b]={}),c=f[t.uniqueID]||(f[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[r]||t;else{if((l=c[o])&&l[0]===T&&l[1]===s)return p[2]=l[2];if(c[o]=p,p[2]=e(t,n,u))return!0}return!1}}function xe(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function be(e,t,n){for(var r=0,i=t.length;r<i;r++)oe(e,t[r],n);return n}function we(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Te(e,t,n,r,i,o){return r&&!r[b]&&(r=Te(r)),i&&!i[b]&&(i=Te(i,o)),se(function(o,a,s,u){var l,c,f,p=[],d=[],h=a.length,g=o||be(t||\"*\",s.nodeType?[s]:s,[]),y=!e||!o&&t?g:we(g,p,e,s,u),v=n?i||(o?e:h||r)?[]:a:y;if(n&&n(y,v,s,u),r){l=we(v,d),r(l,[],s,u),c=l.length;while(c--)(f=l[c])&&(v[d[c]]=!(y[d[c]]=f))}if(o){if(i||e){if(i){l=[],c=v.length;while(c--)(f=v[c])&&l.push(y[c]=f);i(null,v=[],l,u)}c=v.length;while(c--)(f=v[c])&&(l=i?O(o,f):p[c])>-1&&(o[l]=!(a[l]=f))}}else v=we(v===a?v.splice(h,v.length):v),i?i(null,a,v,u):L.apply(a,v)})}function Ce(e){for(var t,n,i,o=e.length,a=r.relative[e[0].type],s=a||r.relative[\" \"],u=a?1:0,c=me(function(e){return e===t},s,!0),f=me(function(e){return O(t,e)>-1},s,!0),p=[function(e,n,r){var i=!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):f(e,n,r));return t=null,i}];u<o;u++)if(n=r.relative[e[u].type])p=[me(xe(p),n)];else{if((n=r.filter[e[u].type].apply(null,e[u].matches))[b]){for(i=++u;i<o;i++)if(r.relative[e[i].type])break;return Te(u>1&&xe(p),u>1&&ve(e.slice(0,u-1).concat({value:\" \"===e[u-2].type?\"*\":\"\"})).replace(B,\"$1\"),n,u<i&&Ce(e.slice(u,i)),i<o&&Ce(e=e.slice(i)),i<o&&ve(e))}p.push(n)}return xe(p)}function Ee(e,t){var n=t.length>0,i=e.length>0,o=function(o,a,s,u,c){var f,h,y,v=0,m=\"0\",x=o&&[],b=[],w=l,C=o||i&&r.find.TAG(\"*\",c),E=T+=null==w?1:Math.random()||.1,k=C.length;for(c&&(l=a===d||a||c);m!==k&&null!=(f=C[m]);m++){if(i&&f){h=0,a||f.ownerDocument===d||(p(f),s=!g);while(y=e[h++])if(y(f,a||d,s)){u.push(f);break}c&&(T=E)}n&&((f=!y&&f)&&v--,o&&x.push(f))}if(v+=m,n&&m!==v){h=0;while(y=t[h++])y(x,b,a,s);if(o){if(v>0)while(m--)x[m]||b[m]||(b[m]=j.call(u));b=we(b)}L.apply(u,b),c&&!o&&b.length>0&&v+t.length>1&&oe.uniqueSort(u)}return c&&(T=E,l=w),x};return n?se(o):o}return s=oe.compile=function(e,t){var n,r=[],i=[],o=S[e+\" \"];if(!o){t||(t=a(e)),n=t.length;while(n--)(o=Ce(t[n]))[b]?r.push(o):i.push(o);(o=S(e,Ee(i,r))).selector=e}return o},u=oe.select=function(e,t,n,i){var o,u,l,c,f,p=\"function\"==typeof e&&e,d=!i&&a(e=p.selector||e);if(n=n||[],1===d.length){if((u=d[0]=d[0].slice(0)).length>2&&\"ID\"===(l=u[0]).type&&9===t.nodeType&&g&&r.relative[u[1].type]){if(!(t=(r.find.ID(l.matches[0].replace(Z,ee),t)||[])[0]))return n;p&&(t=t.parentNode),e=e.slice(u.shift().value.length)}o=V.needsContext.test(e)?0:u.length;while(o--){if(l=u[o],r.relative[c=l.type])break;if((f=r.find[c])&&(i=f(l.matches[0].replace(Z,ee),K.test(u[0].type)&&ge(t.parentNode)||t))){if(u.splice(o,1),!(e=i.length&&ve(u)))return L.apply(n,i),n;break}}}return(p||s(e,d))(i,t,!g,n,!t||K.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split(\"\").sort(D).join(\"\")===b,n.detectDuplicates=!!f,p(),n.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(d.createElement(\"fieldset\"))}),ue(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||le(\"type|href|height|width\",function(e,t,n){if(!n)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),n.attributes&&ue(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||le(\"value\",function(e,t,n){if(!n&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute(\"disabled\")})||le(P,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),oe}(e);w.find=E,w.expr=E.selectors,w.expr[\":\"]=w.expr.pseudos,w.uniqueSort=w.unique=E.uniqueSort,w.text=E.getText,w.isXMLDoc=E.isXML,w.contains=E.contains,w.escapeSelector=E.escape;var k=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&w(e).is(n))break;r.push(e)}return r},S=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},D=w.expr.match.needsContext;function N(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var A=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function j(e,t,n){return g(t)?w.grep(e,function(e,r){return!!t.call(e,r,e)!==n}):t.nodeType?w.grep(e,function(e){return e===t!==n}):\"string\"!=typeof t?w.grep(e,function(e){return u.call(t,e)>-1!==n}):w.filter(t,e,n)}w.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?w.find.matchesSelector(r,e)?[r]:[]:w.find.matches(e,w.grep(t,function(e){return 1===e.nodeType}))},w.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(w(e).filter(function(){for(t=0;t<r;t++)if(w.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)w.find(e,i[t],n);return r>1?w.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,\"string\"==typeof e&&D.test(e)?w(e):e||[],!1).length}});var q,L=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(w.fn.init=function(e,t,n){var i,o;if(!e)return this;if(n=n||q,\"string\"==typeof e){if(!(i=\"<\"===e[0]&&\">\"===e[e.length-1]&&e.length>=3?[null,e,null]:L.exec(e))||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof w?t[0]:t,w.merge(this,w.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:r,!0)),A.test(i[1])&&w.isPlainObject(t))for(i in t)g(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(o=r.getElementById(i[2]))&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):g(e)?void 0!==n.ready?n.ready(e):e(w):w.makeArray(e,this)}).prototype=w.fn,q=w(r);var H=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};w.fn.extend({has:function(e){var t=w(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(w.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&w(e);if(!D.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&w.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?w.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?u.call(w(e),this[0]):u.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(w.uniqueSort(w.merge(this.get(),w(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function P(e,t){while((e=e[t])&&1!==e.nodeType);return e}w.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return k(e,\"parentNode\")},parentsUntil:function(e,t,n){return k(e,\"parentNode\",n)},next:function(e){return P(e,\"nextSibling\")},prev:function(e){return P(e,\"previousSibling\")},nextAll:function(e){return k(e,\"nextSibling\")},prevAll:function(e){return k(e,\"previousSibling\")},nextUntil:function(e,t,n){return k(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return k(e,\"previousSibling\",n)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return N(e,\"iframe\")?e.contentDocument:(N(e,\"template\")&&(e=e.content||e),w.merge([],e.childNodes))}},function(e,t){w.fn[e]=function(n,r){var i=w.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(i=w.filter(r,i)),this.length>1&&(O[e]||w.uniqueSort(i),H.test(e)&&i.reverse()),this.pushStack(i)}});var M=/[^\\x20\\t\\r\\n\\f]+/g;function R(e){var t={};return w.each(e.match(M)||[],function(e,n){t[n]=!0}),t}w.Callbacks=function(e){e=\"string\"==typeof e?R(e):w.extend({},e);var t,n,r,i,o=[],a=[],s=-1,u=function(){for(i=i||e.once,r=t=!0;a.length;s=-1){n=a.shift();while(++s<o.length)!1===o[s].apply(n[0],n[1])&&e.stopOnFalse&&(s=o.length,n=!1)}e.memory||(n=!1),t=!1,i&&(o=n?[]:\"\")},l={add:function(){return o&&(n&&!t&&(s=o.length-1,a.push(n)),function t(n){w.each(n,function(n,r){g(r)?e.unique&&l.has(r)||o.push(r):r&&r.length&&\"string\"!==x(r)&&t(r)})}(arguments),n&&!t&&u()),this},remove:function(){return w.each(arguments,function(e,t){var n;while((n=w.inArray(t,o,n))>-1)o.splice(n,1),n<=s&&s--}),this},has:function(e){return e?w.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return i=a=[],o=n=\"\",this},disabled:function(){return!o},lock:function(){return i=a=[],n||t||(o=n=\"\"),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=[e,(n=n||[]).slice?n.slice():n],a.push(n),t||u()),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!r}};return l};function I(e){return e}function W(e){throw e}function $(e,t,n,r){var i;try{e&&g(i=e.promise)?i.call(e).done(t).fail(n):e&&g(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}w.extend({Deferred:function(t){var n=[[\"notify\",\"progress\",w.Callbacks(\"memory\"),w.Callbacks(\"memory\"),2],[\"resolve\",\"done\",w.Callbacks(\"once memory\"),w.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",w.Callbacks(\"once memory\"),w.Callbacks(\"once memory\"),1,\"rejected\"]],r=\"pending\",i={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},\"catch\":function(e){return i.then(null,e)},pipe:function(){var e=arguments;return w.Deferred(function(t){w.each(n,function(n,r){var i=g(e[r[4]])&&e[r[4]];o[r[1]](function(){var e=i&&i.apply(this,arguments);e&&g(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[r[0]+\"With\"](this,i?[e]:arguments)})}),e=null}).promise()},then:function(t,r,i){var o=0;function a(t,n,r,i){return function(){var s=this,u=arguments,l=function(){var e,l;if(!(t<o)){if((e=r.apply(s,u))===n.promise())throw new TypeError(\"Thenable self-resolution\");l=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,g(l)?i?l.call(e,a(o,n,I,i),a(o,n,W,i)):(o++,l.call(e,a(o,n,I,i),a(o,n,W,i),a(o,n,I,n.notifyWith))):(r!==I&&(s=void 0,u=[e]),(i||n.resolveWith)(s,u))}},c=i?l:function(){try{l()}catch(e){w.Deferred.exceptionHook&&w.Deferred.exceptionHook(e,c.stackTrace),t+1>=o&&(r!==W&&(s=void 0,u=[e]),n.rejectWith(s,u))}};t?c():(w.Deferred.getStackHook&&(c.stackTrace=w.Deferred.getStackHook()),e.setTimeout(c))}}return w.Deferred(function(e){n[0][3].add(a(0,e,g(i)?i:I,e.notifyWith)),n[1][3].add(a(0,e,g(t)?t:I)),n[2][3].add(a(0,e,g(r)?r:W))}).promise()},promise:function(e){return null!=e?w.extend(e,i):i}},o={};return w.each(n,function(e,t){var a=t[2],s=t[5];i[t[1]]=a.add,s&&a.add(function(){r=s},n[3-e][2].disable,n[3-e][3].disable,n[0][2].lock,n[0][3].lock),a.add(t[3].fire),o[t[0]]=function(){return o[t[0]+\"With\"](this===o?void 0:this,arguments),this},o[t[0]+\"With\"]=a.fireWith}),i.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,n=t,r=Array(n),i=o.call(arguments),a=w.Deferred(),s=function(e){return function(n){r[e]=this,i[e]=arguments.length>1?o.call(arguments):n,--t||a.resolveWith(r,i)}};if(t<=1&&($(e,a.done(s(n)).resolve,a.reject,!t),\"pending\"===a.state()||g(i[n]&&i[n].then)))return a.then();while(n--)$(i[n],s(n),a.reject);return a.promise()}});var B=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;w.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&B.test(t.name)&&e.console.warn(\"jQuery.Deferred exception: \"+t.message,t.stack,n)},w.readyException=function(t){e.setTimeout(function(){throw t})};var F=w.Deferred();w.fn.ready=function(e){return F.then(e)[\"catch\"](function(e){w.readyException(e)}),this},w.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--w.readyWait:w.isReady)||(w.isReady=!0,!0!==e&&--w.readyWait>0||F.resolveWith(r,[w]))}}),w.ready.then=F.then;function _(){r.removeEventListener(\"DOMContentLoaded\",_),e.removeEventListener(\"load\",_),w.ready()}\"complete\"===r.readyState||\"loading\"!==r.readyState&&!r.documentElement.doScroll?e.setTimeout(w.ready):(r.addEventListener(\"DOMContentLoaded\",_),e.addEventListener(\"load\",_));var z=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===x(n)){i=!0;for(s in n)z(e,t,s,n[s],!0,o,a)}else if(void 0!==r&&(i=!0,g(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(w(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},X=/^-ms-/,U=/-([a-z])/g;function V(e,t){return t.toUpperCase()}function G(e){return e.replace(X,\"ms-\").replace(U,V)}var Y=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Q(){this.expando=w.expando+Q.uid++}Q.uid=1,Q.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[G(t)]=n;else for(r in t)i[G(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][G(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(G):(t=G(t))in r?[t]:t.match(M)||[]).length;while(n--)delete r[t[n]]}(void 0===t||w.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!w.isEmptyObject(t)}};var J=new Q,K=new Q,Z=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,ee=/[A-Z]/g;function te(e){return\"true\"===e||\"false\"!==e&&(\"null\"===e?null:e===+e+\"\"?+e:Z.test(e)?JSON.parse(e):e)}function ne(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(ee,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=te(n)}catch(e){}K.set(e,t,n)}else n=void 0;return n}w.extend({hasData:function(e){return K.hasData(e)||J.hasData(e)},data:function(e,t,n){return K.access(e,t,n)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,n){return J.access(e,t,n)},_removeData:function(e,t){J.remove(e,t)}}),w.fn.extend({data:function(e,t){var n,r,i,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(i=K.get(o),1===o.nodeType&&!J.get(o,\"hasDataAttrs\"))){n=a.length;while(n--)a[n]&&0===(r=a[n].name).indexOf(\"data-\")&&(r=G(r.slice(5)),ne(o,r,i[r]));J.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof e?this.each(function(){K.set(this,e)}):z(this,function(t){var n;if(o&&void 0===t){if(void 0!==(n=K.get(o,e)))return n;if(void 0!==(n=ne(o,e)))return n}else this.each(function(){K.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),w.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=J.get(e,t),n&&(!r||Array.isArray(n)?r=J.access(e,t,w.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=w.queue(e,t),r=n.length,i=n.shift(),o=w._queueHooks(e,t),a=function(){w.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return J.get(e,n)||J.access(e,n,{empty:w.Callbacks(\"once memory\").add(function(){J.remove(e,[t+\"queue\",n])})})}}),w.fn.extend({queue:function(e,t){var n=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",n--),arguments.length<n?w.queue(this[0],e):void 0===t?this:this.each(function(){var n=w.queue(this,e,t);w._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==n[0]&&w.dequeue(this,e)})},dequeue:function(e){return this.each(function(){w.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=w.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=J.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var re=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,ie=new RegExp(\"^(?:([+-])=|)(\"+re+\")([a-z%]*)$\",\"i\"),oe=[\"Top\",\"Right\",\"Bottom\",\"Left\"],ae=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&w.contains(e.ownerDocument,e)&&\"none\"===w.css(e,\"display\")},se=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i};function ue(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return w.css(e,t,\"\")},u=s(),l=n&&n[3]||(w.cssNumber[t]?\"\":\"px\"),c=(w.cssNumber[t]||\"px\"!==l&&+u)&&ie.exec(w.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)w.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,w.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var le={};function ce(e){var t,n=e.ownerDocument,r=e.nodeName,i=le[r];return i||(t=n.body.appendChild(n.createElement(r)),i=w.css(t,\"display\"),t.parentNode.removeChild(t),\"none\"===i&&(i=\"block\"),le[r]=i,i)}function fe(e,t){for(var n,r,i=[],o=0,a=e.length;o<a;o++)(r=e[o]).style&&(n=r.style.display,t?(\"none\"===n&&(i[o]=J.get(r,\"display\")||null,i[o]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(i[o]=ce(r))):\"none\"!==n&&(i[o]=\"none\",J.set(r,\"display\",n)));for(o=0;o<a;o++)null!=i[o]&&(e[o].style.display=i[o]);return e}w.fn.extend({show:function(){return fe(this,!0)},hide:function(){return fe(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?w(this).show():w(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i,he=/^$|^module$|\\/(?:java|ecma)script/i,ge={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;function ye(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&N(e,t)?w.merge([e],n):n}function ve(e,t){for(var n=0,r=e.length;n<r;n++)J.set(e[n],\"globalEval\",!t||J.get(t[n],\"globalEval\"))}var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===x(o))w.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(de.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+w.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;w.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&w.inArray(o,r)>-1)i&&i.push(o);else if(l=w.contains(o.ownerDocument,o),a=ye(f.appendChild(o),\"script\"),l&&ve(a),n){c=0;while(o=a[c++])he.test(o.type||\"\")&&n.push(o)}return f}!function(){var e=r.createDocumentFragment().appendChild(r.createElement(\"div\")),t=r.createElement(\"input\");t.setAttribute(\"type\",\"radio\"),t.setAttribute(\"checked\",\"checked\"),t.setAttribute(\"name\",\"t\"),e.appendChild(t),h.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML=\"<textarea>x</textarea>\",h.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var be=r.documentElement,we=/^key/,Te=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\\.(.+)|)/;function Ee(){return!0}function ke(){return!1}function Se(){try{return r.activeElement}catch(e){}}function De(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){\"string\"!=typeof n&&(r=r||n,n=void 0);for(s in t)De(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=ke;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return w().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=w.guid++)),e.each(function(){w.event.add(this,t,i,r,n)})}w.event={global:{},add:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,y=J.get(e);if(y){n.handler&&(n=(o=n).handler,i=o.selector),i&&w.find.matchesSelector(be,i),n.guid||(n.guid=w.guid++),(u=y.events)||(u=y.events={}),(a=y.handle)||(a=y.handle=function(t){return\"undefined\"!=typeof w&&w.event.triggered!==t.type?w.event.dispatch.apply(e,arguments):void 0}),l=(t=(t||\"\").match(M)||[\"\"]).length;while(l--)d=g=(s=Ce.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=w.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=w.event.special[d]||{},c=w.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&w.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(e,r,h,a)||e.addEventListener&&e.addEventListener(d,a)),f.add&&(f.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),w.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,y=J.hasData(e)&&J.get(e);if(y&&(u=y.events)){l=(t=(t||\"\").match(M)||[\"\"]).length;while(l--)if(s=Ce.exec(t[l])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){f=w.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,y.handle)||w.removeEvent(e,d,y.handle),delete u[d])}else for(d in u)w.event.remove(e,d+t[l],n,r,!0);w.isEmptyObject(u)&&J.remove(e,\"handle events\")}},dispatch:function(e){var t=w.event.fix(e),n,r,i,o,a,s,u=new Array(arguments.length),l=(J.get(this,\"events\")||{})[t.type]||[],c=w.event.special[t.type]||{};for(u[0]=t,n=1;n<arguments.length;n++)u[n]=arguments[n];if(t.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,t)){s=w.event.handlers.call(this,t,l),n=0;while((o=s[n++])&&!t.isPropagationStopped()){t.currentTarget=o.elem,r=0;while((a=o.handlers[r++])&&!t.isImmediatePropagationStopped())t.rnamespace&&!t.rnamespace.test(a.namespace)||(t.handleObj=a,t.data=a.data,void 0!==(i=((w.event.special[a.origType]||{}).handle||a.handler).apply(o.elem,u))&&!1===(t.result=i)&&(t.preventDefault(),t.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,t),t.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&e.button>=1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?w(i,this).index(l)>-1:w.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(e,t){Object.defineProperty(w.Event.prototype,e,{enumerable:!0,configurable:!0,get:g(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[w.expando]?e:new w.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==Se()&&this.focus)return this.focus(),!1},delegateType:\"focusin\"},blur:{trigger:function(){if(this===Se()&&this.blur)return this.blur(),!1},delegateType:\"focusout\"},click:{trigger:function(){if(\"checkbox\"===this.type&&this.click&&N(this,\"input\"))return this.click(),!1},_default:function(e){return N(e.target,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},w.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},w.Event=function(e,t){if(!(this instanceof w.Event))return new w.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ee:ke,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&w.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[w.expando]=!0},w.Event.prototype={constructor:w.Event,isDefaultPrevented:ke,isPropagationStopped:ke,isImmediatePropagationStopped:ke,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ee,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ee,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ee,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},w.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&we.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Te.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},w.event.addProp),w.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,t){w.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return i&&(i===r||w.contains(r,i))||(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),w.fn.extend({on:function(e,t,n,r){return De(this,e,t,n,r)},one:function(e,t,n,r){return De(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,w(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=ke),this.each(function(){w.event.remove(this,e,n,t)})}});var Ne=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,Ae=/<script|<style|<link/i,je=/checked\\s*(?:[^=]|=\\s*.checked.)/i,qe=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Le(e,t){return N(e,\"table\")&&N(11!==t.nodeType?t:t.firstChild,\"tr\")?w(e).children(\"tbody\")[0]||e:e}function He(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function Oe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Pe(e,t){var n,r,i,o,a,s,u,l;if(1===t.nodeType){if(J.hasData(e)&&(o=J.access(e),a=J.set(t,o),l=o.events)){delete a.handle,a.events={};for(i in l)for(n=0,r=l[i].length;n<r;n++)w.event.add(t,i,l[i][n])}K.hasData(e)&&(s=K.access(e),u=w.extend({},s),K.set(t,u))}}function Me(e,t){var n=t.nodeName.toLowerCase();\"input\"===n&&pe.test(e.type)?t.checked=e.checked:\"input\"!==n&&\"textarea\"!==n||(t.defaultValue=e.defaultValue)}function Re(e,t,n,r){t=a.apply([],t);var i,o,s,u,l,c,f=0,p=e.length,d=p-1,y=t[0],v=g(y);if(v||p>1&&\"string\"==typeof y&&!h.checkClone&&je.test(y))return e.each(function(i){var o=e.eq(i);v&&(t[0]=y.call(this,i,o.html())),Re(o,t,n,r)});if(p&&(i=xe(t,e[0].ownerDocument,!1,e,r),o=i.firstChild,1===i.childNodes.length&&(i=o),o||r)){for(u=(s=w.map(ye(i,\"script\"),He)).length;f<p;f++)l=i,f!==d&&(l=w.clone(l,!0,!0),u&&w.merge(s,ye(l,\"script\"))),n.call(e[f],l,f);if(u)for(c=s[s.length-1].ownerDocument,w.map(s,Oe),f=0;f<u;f++)l=s[f],he.test(l.type||\"\")&&!J.access(l,\"globalEval\")&&w.contains(c,l)&&(l.src&&\"module\"!==(l.type||\"\").toLowerCase()?w._evalUrl&&w._evalUrl(l.src):m(l.textContent.replace(qe,\"\"),c,l))}return e}function Ie(e,t,n){for(var r,i=t?w.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||w.cleanData(ye(r)),r.parentNode&&(n&&w.contains(r.ownerDocument,r)&&ve(ye(r,\"script\")),r.parentNode.removeChild(r));return e}w.extend({htmlPrefilter:function(e){return e.replace(Ne,\"<$1></$2>\")},clone:function(e,t,n){var r,i,o,a,s=e.cloneNode(!0),u=w.contains(e.ownerDocument,e);if(!(h.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||w.isXMLDoc(e)))for(a=ye(s),r=0,i=(o=ye(e)).length;r<i;r++)Me(o[r],a[r]);if(t)if(n)for(o=o||ye(e),a=a||ye(s),r=0,i=o.length;r<i;r++)Pe(o[r],a[r]);else Pe(e,s);return(a=ye(s,\"script\")).length>0&&ve(a,!u&&ye(e,\"script\")),s},cleanData:function(e){for(var t,n,r,i=w.event.special,o=0;void 0!==(n=e[o]);o++)if(Y(n)){if(t=n[J.expando]){if(t.events)for(r in t.events)i[r]?w.event.remove(n,r):w.removeEvent(n,r,t.handle);n[J.expando]=void 0}n[K.expando]&&(n[K.expando]=void 0)}}}),w.fn.extend({detach:function(e){return Ie(this,e,!0)},remove:function(e){return Ie(this,e)},text:function(e){return z(this,function(e){return void 0===e?w.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Re(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Le(this,e).appendChild(e)})},prepend:function(){return Re(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Le(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Re(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Re(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(w.cleanData(ye(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return w.clone(this,e,t)})},html:function(e){return z(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!Ae.test(e)&&!ge[(de.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=w.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(w.cleanData(ye(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return Re(this,arguments,function(t){var n=this.parentNode;w.inArray(this,e)<0&&(w.cleanData(ye(this)),n&&n.replaceChild(t,this))},e)}}),w.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){w.fn[e]=function(e){for(var n,r=[],i=w(e),o=i.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),w(i[a])[t](n),s.apply(r,n.get());return this.pushStack(r)}});var We=new RegExp(\"^(\"+re+\")(?!px)[a-z%]+$\",\"i\"),$e=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)},Be=new RegExp(oe.join(\"|\"),\"i\");!function(){function t(){if(c){l.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",c.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",be.appendChild(l).appendChild(c);var t=e.getComputedStyle(c);i=\"1%\"!==t.top,u=12===n(t.marginLeft),c.style.right=\"60%\",s=36===n(t.right),o=36===n(t.width),c.style.position=\"absolute\",a=36===c.offsetWidth||\"absolute\",be.removeChild(l),c=null}}function n(e){return Math.round(parseFloat(e))}var i,o,a,s,u,l=r.createElement(\"div\"),c=r.createElement(\"div\");c.style&&(c.style.backgroundClip=\"content-box\",c.cloneNode(!0).style.backgroundClip=\"\",h.clearCloneStyle=\"content-box\"===c.style.backgroundClip,w.extend(h,{boxSizingReliable:function(){return t(),o},pixelBoxStyles:function(){return t(),s},pixelPosition:function(){return t(),i},reliableMarginLeft:function(){return t(),u},scrollboxSize:function(){return t(),a}}))}();function Fe(e,t,n){var r,i,o,a,s=e.style;return(n=n||$e(e))&&(\"\"!==(a=n.getPropertyValue(t)||n[t])||w.contains(e.ownerDocument,e)||(a=w.style(e,t)),!h.pixelBoxStyles()&&We.test(a)&&Be.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function _e(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}var ze=/^(none|table(?!-c[ea]).+)/,Xe=/^--/,Ue={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ve={letterSpacing:\"0\",fontWeight:\"400\"},Ge=[\"Webkit\",\"Moz\",\"ms\"],Ye=r.createElement(\"div\").style;function Qe(e){if(e in Ye)return e;var t=e[0].toUpperCase()+e.slice(1),n=Ge.length;while(n--)if((e=Ge[n]+t)in Ye)return e}function Je(e){var t=w.cssProps[e];return t||(t=w.cssProps[e]=Qe(e)||e),t}function Ke(e,t,n){var r=ie.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function Ze(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(u+=w.css(e,n+oe[a],!0,i)),r?(\"content\"===n&&(u-=w.css(e,\"padding\"+oe[a],!0,i)),\"margin\"!==n&&(u-=w.css(e,\"border\"+oe[a]+\"Width\",!0,i))):(u+=w.css(e,\"padding\"+oe[a],!0,i),\"padding\"!==n?u+=w.css(e,\"border\"+oe[a]+\"Width\",!0,i):s+=w.css(e,\"border\"+oe[a]+\"Width\",!0,i));return!r&&o>=0&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))),u}function et(e,t,n){var r=$e(e),i=Fe(e,t,r),o=\"border-box\"===w.css(e,\"boxSizing\",!1,r),a=o;if(We.test(i)){if(!n)return i;i=\"auto\"}return a=a&&(h.boxSizingReliable()||i===e.style[t]),(\"auto\"===i||!parseFloat(i)&&\"inline\"===w.css(e,\"display\",!1,r))&&(i=e[\"offset\"+t[0].toUpperCase()+t.slice(1)],a=!0),(i=parseFloat(i)||0)+Ze(e,t,n||(o?\"border\":\"content\"),a,r,i)+\"px\"}w.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Fe(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=G(t),u=Xe.test(t),l=e.style;if(u||(t=Je(s)),a=w.cssHooks[t]||w.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"==(o=typeof n)&&(i=ie.exec(n))&&i[1]&&(n=ue(e,t,i),o=\"number\"),null!=n&&n===n&&(\"number\"===o&&(n+=i&&i[3]||(w.cssNumber[s]?\"\":\"px\")),h.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=G(t);return Xe.test(t)||(t=Je(s)),(a=w.cssHooks[t]||w.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Fe(e,t,r)),\"normal\"===i&&t in Ve&&(i=Ve[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),w.each([\"height\",\"width\"],function(e,t){w.cssHooks[t]={get:function(e,n,r){if(n)return!ze.test(w.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?et(e,t,r):se(e,Ue,function(){return et(e,t,r)})},set:function(e,n,r){var i,o=$e(e),a=\"border-box\"===w.css(e,\"boxSizing\",!1,o),s=r&&Ze(e,t,r,a,o);return a&&h.scrollboxSize()===o.position&&(s-=Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-parseFloat(o[t])-Ze(e,t,\"border\",!1,o)-.5)),s&&(i=ie.exec(n))&&\"px\"!==(i[3]||\"px\")&&(e.style[t]=n,n=w.css(e,t)),Ke(e,n,s)}}}),w.cssHooks.marginLeft=_e(h.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Fe(e,\"marginLeft\"))||e.getBoundingClientRect().left-se(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),w.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){w.cssHooks[e+t]={expand:function(n){for(var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];r<4;r++)i[e+oe[r]+t]=o[r]||o[r-2]||o[0];return i}},\"margin\"!==e&&(w.cssHooks[e+t].set=Ke)}),w.fn.extend({css:function(e,t){return z(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=$e(e),i=t.length;a<i;a++)o[t[a]]=w.css(e,t[a],!1,r);return o}return void 0!==n?w.style(e,t,n):w.css(e,t)},e,t,arguments.length>1)}});function tt(e,t,n,r,i){return new tt.prototype.init(e,t,n,r,i)}w.Tween=tt,tt.prototype={constructor:tt,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||w.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(w.cssNumber[n]?\"\":\"px\")},cur:function(){var e=tt.propHooks[this.prop];return e&&e.get?e.get(this):tt.propHooks._default.get(this)},run:function(e){var t,n=tt.propHooks[this.prop];return this.options.duration?this.pos=t=w.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):tt.propHooks._default.set(this),this}},tt.prototype.init.prototype=tt.prototype,tt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=w.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){w.fx.step[e.prop]?w.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[w.cssProps[e.prop]]&&!w.cssHooks[e.prop]?e.elem[e.prop]=e.now:w.style(e.elem,e.prop,e.now+e.unit)}}},tt.propHooks.scrollTop=tt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},w.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},w.fx=tt.prototype.init,w.fx.step={};var nt,rt,it=/^(?:toggle|show|hide)$/,ot=/queueHooks$/;function at(){rt&&(!1===r.hidden&&e.requestAnimationFrame?e.requestAnimationFrame(at):e.setTimeout(at,w.fx.interval),w.fx.tick())}function st(){return e.setTimeout(function(){nt=void 0}),nt=Date.now()}function ut(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=oe[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function lt(e,t,n){for(var r,i=(pt.tweeners[t]||[]).concat(pt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function ct(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),y=J.get(e,\"fxshow\");n.queue||(null==(a=w._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,w.queue(e,\"fx\").length||a.empty.fire()})}));for(r in t)if(i=t[r],it.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!y||void 0===y[r])continue;g=!0}d[r]=y&&y[r]||w.style(e,r)}if((u=!w.isEmptyObject(t))||!w.isEmptyObject(d)){f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=y&&y.display)&&(l=J.get(e,\"display\")),\"none\"===(c=w.css(e,\"display\"))&&(l?c=l:(fe([e],!0),l=e.style.display||l,c=w.css(e,\"display\"),fe([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===w.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1;for(r in d)u||(y?\"hidden\"in y&&(g=y.hidden):y=J.access(e,\"fxshow\",{display:l}),o&&(y.hidden=!g),g&&fe([e],!0),p.done(function(){g||fe([e]),J.remove(e,\"fxshow\");for(r in d)w.style(e,r,d[r])})),u=lt(g?y[r]:0,r,p),r in y||(y[r]=u.start,g&&(u.end=u.start,u.start=0))}}function ft(e,t){var n,r,i,o,a;for(n in e)if(r=G(n),i=t[r],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=w.cssHooks[r])&&\"expand\"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function pt(e,t,n){var r,i,o=0,a=pt.prefilters.length,s=w.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;for(var t=nt||st(),n=Math.max(0,l.startTime+l.duration-t),r=1-(n/l.duration||0),o=0,a=l.tweens.length;o<a;o++)l.tweens[o].run(r);return s.notifyWith(e,[l,r,n]),r<1&&a?n:(a||s.notifyWith(e,[l,1,0]),s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:w.extend({},t),opts:w.extend(!0,{specialEasing:{},easing:w.easing._default},n),originalProperties:t,originalOptions:n,startTime:nt||st(),duration:n.duration,tweens:[],createTween:function(t,n){var r=w.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;n<r;n++)l.tweens[n].run(1);return t?(s.notifyWith(e,[l,1,0]),s.resolveWith(e,[l,t])):s.rejectWith(e,[l,t]),this}}),c=l.props;for(ft(c,l.opts.specialEasing);o<a;o++)if(r=pt.prefilters[o].call(l,e,c,l.opts))return g(r.stop)&&(w._queueHooks(l.elem,l.opts.queue).stop=r.stop.bind(r)),r;return w.map(c,lt,l),g(l.opts.start)&&l.opts.start.call(e,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),w.fx.timer(w.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l}w.Animation=w.extend(pt,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return ue(n.elem,e,ie.exec(t),n),n}]},tweener:function(e,t){g(e)?(t=e,e=[\"*\"]):e=e.match(M);for(var n,r=0,i=e.length;r<i;r++)n=e[r],pt.tweeners[n]=pt.tweeners[n]||[],pt.tweeners[n].unshift(t)},prefilters:[ct],prefilter:function(e,t){t?pt.prefilters.unshift(e):pt.prefilters.push(e)}}),w.speed=function(e,t,n){var r=e&&\"object\"==typeof e?w.extend({},e):{complete:n||!n&&t||g(e)&&e,duration:e,easing:n&&t||t&&!g(t)&&t};return w.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in w.fx.speeds?r.duration=w.fx.speeds[r.duration]:r.duration=w.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){g(r.old)&&r.old.call(this),r.queue&&w.dequeue(this,r.queue)},r},w.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=w.isEmptyObject(e),o=w.speed(t,n,r),a=function(){var t=pt(this,w.extend({},e),o);(i||J.get(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return\"string\"!=typeof e&&(n=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,i=null!=e&&e+\"queueHooks\",o=w.timers,a=J.get(this);if(i)a[i]&&a[i].stop&&r(a[i]);else for(i in a)a[i]&&a[i].stop&&ot.test(i)&&r(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(n),t=!1,o.splice(i,1));!t&&n||w.dequeue(this,e)})},finish:function(e){return!1!==e&&(e=e||\"fx\"),this.each(function(){var t,n=J.get(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=w.timers,a=r?r.length:0;for(n.finish=!0,w.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<a;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),w.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=w.fn[t];w.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ut(t,!0),e,r,i)}}),w.each({slideDown:ut(\"show\"),slideUp:ut(\"hide\"),slideToggle:ut(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){w.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),w.timers=[],w.fx.tick=function(){var e,t=0,n=w.timers;for(nt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||w.fx.stop(),nt=void 0},w.fx.timer=function(e){w.timers.push(e),w.fx.start()},w.fx.interval=13,w.fx.start=function(){rt||(rt=!0,at())},w.fx.stop=function(){rt=null},w.fx.speeds={slow:600,fast:200,_default:400},w.fn.delay=function(t,n){return t=w.fx?w.fx.speeds[t]||t:t,n=n||\"fx\",this.queue(n,function(n,r){var i=e.setTimeout(n,t);r.stop=function(){e.clearTimeout(i)}})},function(){var e=r.createElement(\"input\"),t=r.createElement(\"select\").appendChild(r.createElement(\"option\"));e.type=\"checkbox\",h.checkOn=\"\"!==e.value,h.optSelected=t.selected,(e=r.createElement(\"input\")).value=\"t\",e.type=\"radio\",h.radioValue=\"t\"===e.value}();var dt,ht=w.expr.attrHandle;w.fn.extend({attr:function(e,t){return z(this,w.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){w.removeAttr(this,e)})}}),w.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?w.prop(e,t,n):(1===o&&w.isXMLDoc(e)||(i=w.attrHooks[t.toLowerCase()]||(w.expr.match.bool.test(t)?dt:void 0)),void 0!==n?null===n?void w.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=w.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!h.radioValue&&\"radio\"===t&&N(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(M);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),dt={set:function(e,t,n){return!1===t?w.removeAttr(e,n):e.setAttribute(n,n),n}},w.each(w.expr.match.bool.source.match(/\\w+/g),function(e,t){var n=ht[t]||w.find.attr;ht[t]=function(e,t,r){var i,o,a=t.toLowerCase();return r||(o=ht[a],ht[a]=i,i=null!=n(e,t,r)?a:null,ht[a]=o),i}});var gt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;w.fn.extend({prop:function(e,t){return z(this,w.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[w.propFix[e]||e]})}}),w.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&w.isXMLDoc(e)||(t=w.propFix[t]||t,i=w.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=w.find.attr(e,\"tabindex\");return t?parseInt(t,10):gt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),h.optSelected||(w.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),w.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){w.propFix[this.toLowerCase()]=this});function vt(e){return(e.match(M)||[]).join(\" \")}function mt(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function xt(e){return Array.isArray(e)?e:\"string\"==typeof e?e.match(M)||[]:[]}w.fn.extend({addClass:function(e){var t,n,r,i,o,a,s,u=0;if(g(e))return this.each(function(t){w(this).addClass(e.call(this,t,mt(this)))});if((t=xt(e)).length)while(n=this[u++])if(i=mt(n),r=1===n.nodeType&&\" \"+vt(i)+\" \"){a=0;while(o=t[a++])r.indexOf(\" \"+o+\" \")<0&&(r+=o+\" \");i!==(s=vt(r))&&n.setAttribute(\"class\",s)}return this},removeClass:function(e){var t,n,r,i,o,a,s,u=0;if(g(e))return this.each(function(t){w(this).removeClass(e.call(this,t,mt(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if((t=xt(e)).length)while(n=this[u++])if(i=mt(n),r=1===n.nodeType&&\" \"+vt(i)+\" \"){a=0;while(o=t[a++])while(r.indexOf(\" \"+o+\" \")>-1)r=r.replace(\" \"+o+\" \",\" \");i!==(s=vt(r))&&n.setAttribute(\"class\",s)}return this},toggleClass:function(e,t){var n=typeof e,r=\"string\"===n||Array.isArray(e);return\"boolean\"==typeof t&&r?t?this.addClass(e):this.removeClass(e):g(e)?this.each(function(n){w(this).toggleClass(e.call(this,n,mt(this),t),t)}):this.each(function(){var t,i,o,a;if(r){i=0,o=w(this),a=xt(e);while(t=a[i++])o.hasClass(t)?o.removeClass(t):o.addClass(t)}else void 0!==e&&\"boolean\"!==n||((t=mt(this))&&J.set(this,\"__className__\",t),this.setAttribute&&this.setAttribute(\"class\",t||!1===e?\"\":J.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&(\" \"+vt(mt(n))+\" \").indexOf(t)>-1)return!0;return!1}});var bt=/\\r/g;w.fn.extend({val:function(e){var t,n,r,i=this[0];{if(arguments.length)return r=g(e),this.each(function(n){var i;1===this.nodeType&&(null==(i=r?e.call(this,n,w(this).val()):e)?i=\"\":\"number\"==typeof i?i+=\"\":Array.isArray(i)&&(i=w.map(i,function(e){return null==e?\"\":e+\"\"})),(t=w.valHooks[this.type]||w.valHooks[this.nodeName.toLowerCase()])&&\"set\"in t&&void 0!==t.set(this,i,\"value\")||(this.value=i))});if(i)return(t=w.valHooks[i.type]||w.valHooks[i.nodeName.toLowerCase()])&&\"get\"in t&&void 0!==(n=t.get(i,\"value\"))?n:\"string\"==typeof(n=i.value)?n.replace(bt,\"\"):null==n?\"\":n}}}),w.extend({valHooks:{option:{get:function(e){var t=w.find.attr(e,\"value\");return null!=t?t:vt(w.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!N(n.parentNode,\"optgroup\"))){if(t=w(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=w.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=w.inArray(w.valHooks.option.get(r),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),w.each([\"radio\",\"checkbox\"],function(){w.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=w.inArray(w(e).val(),t)>-1}},h.checkOn||(w.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),h.focusin=\"onfocusin\"in e;var wt=/^(?:focusinfocus|focusoutblur)$/,Tt=function(e){e.stopPropagation()};w.extend(w.event,{trigger:function(t,n,i,o){var a,s,u,l,c,p,d,h,v=[i||r],m=f.call(t,\"type\")?t.type:t,x=f.call(t,\"namespace\")?t.namespace.split(\".\"):[];if(s=h=u=i=i||r,3!==i.nodeType&&8!==i.nodeType&&!wt.test(m+w.event.triggered)&&(m.indexOf(\".\")>-1&&(m=(x=m.split(\".\")).shift(),x.sort()),c=m.indexOf(\":\")<0&&\"on\"+m,t=t[w.expando]?t:new w.Event(m,\"object\"==typeof t&&t),t.isTrigger=o?2:3,t.namespace=x.join(\".\"),t.rnamespace=t.namespace?new RegExp(\"(^|\\\\.)\"+x.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:w.makeArray(n,[t]),d=w.event.special[m]||{},o||!d.trigger||!1!==d.trigger.apply(i,n))){if(!o&&!d.noBubble&&!y(i)){for(l=d.delegateType||m,wt.test(l+m)||(s=s.parentNode);s;s=s.parentNode)v.push(s),u=s;u===(i.ownerDocument||r)&&v.push(u.defaultView||u.parentWindow||e)}a=0;while((s=v[a++])&&!t.isPropagationStopped())h=s,t.type=a>1?l:d.bindType||m,(p=(J.get(s,\"events\")||{})[t.type]&&J.get(s,\"handle\"))&&p.apply(s,n),(p=c&&s[c])&&p.apply&&Y(s)&&(t.result=p.apply(s,n),!1===t.result&&t.preventDefault());return t.type=m,o||t.isDefaultPrevented()||d._default&&!1!==d._default.apply(v.pop(),n)||!Y(i)||c&&g(i[m])&&!y(i)&&((u=i[c])&&(i[c]=null),w.event.triggered=m,t.isPropagationStopped()&&h.addEventListener(m,Tt),i[m](),t.isPropagationStopped()&&h.removeEventListener(m,Tt),w.event.triggered=void 0,u&&(i[c]=u)),t.result}},simulate:function(e,t,n){var r=w.extend(new w.Event,n,{type:e,isSimulated:!0});w.event.trigger(r,null,t)}}),w.fn.extend({trigger:function(e,t){return this.each(function(){w.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return w.event.trigger(e,t,n,!0)}}),h.focusin||w.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=function(e){w.event.simulate(t,e.target,w.event.fix(e))};w.event.special[t]={setup:function(){var r=this.ownerDocument||this,i=J.access(r,t);i||r.addEventListener(e,n,!0),J.access(r,t,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this,i=J.access(r,t)-1;i?J.access(r,t,i):(r.removeEventListener(e,n,!0),J.remove(r,t))}}});var Ct=e.location,Et=Date.now(),kt=/\\?/;w.parseXML=function(t){var n;if(!t||\"string\"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,\"text/xml\")}catch(e){n=void 0}return n&&!n.getElementsByTagName(\"parsererror\").length||w.error(\"Invalid XML: \"+t),n};var St=/\\[\\]$/,Dt=/\\r?\\n/g,Nt=/^(?:submit|button|image|reset|file)$/i,At=/^(?:input|select|textarea|keygen)/i;function jt(e,t,n,r){var i;if(Array.isArray(t))w.each(t,function(t,i){n||St.test(e)?r(e,i):jt(e+\"[\"+(\"object\"==typeof i&&null!=i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==x(t))r(e,t);else for(i in t)jt(e+\"[\"+i+\"]\",t[i],n,r)}w.param=function(e,t){var n,r=[],i=function(e,t){var n=g(t)?t():t;r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==n?\"\":n)};if(Array.isArray(e)||e.jquery&&!w.isPlainObject(e))w.each(e,function(){i(this.name,this.value)});else for(n in e)jt(n,e[n],t,i);return r.join(\"&\")},w.fn.extend({serialize:function(){return w.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=w.prop(this,\"elements\");return e?w.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!w(this).is(\":disabled\")&&At.test(this.nodeName)&&!Nt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=w(this).val();return null==n?null:Array.isArray(n)?w.map(n,function(e){return{name:t.name,value:e.replace(Dt,\"\\r\\n\")}}):{name:t.name,value:n.replace(Dt,\"\\r\\n\")}}).get()}});var qt=/%20/g,Lt=/#.*$/,Ht=/([?&])_=[^&]*/,Ot=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Pt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Mt=/^(?:GET|HEAD)$/,Rt=/^\\/\\//,It={},Wt={},$t=\"*/\".concat(\"*\"),Bt=r.createElement(\"a\");Bt.href=Ct.href;function Ft(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(M)||[];if(g(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function _t(e,t,n,r){var i={},o=e===Wt;function a(s){var u;return i[s]=!0,w.each(e[s]||[],function(e,s){var l=s(t,n,r);return\"string\"!=typeof l||o||i[l]?o?!(u=l):void 0:(t.dataTypes.unshift(l),a(l),!1)}),u}return a(t.dataTypes[0])||!i[\"*\"]&&a(\"*\")}function zt(e,t){var n,r,i=w.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&w.extend(!0,e,r),e}function Xt(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}function Ut(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(!(a=l[u+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[u+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}w.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ct.href,type:\"GET\",isLocal:Pt.test(Ct.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":$t,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":w.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?zt(zt(e,w.ajaxSettings),t):zt(w.ajaxSettings,e)},ajaxPrefilter:Ft(It),ajaxTransport:Ft(Wt),ajax:function(t,n){\"object\"==typeof t&&(n=t,t=void 0),n=n||{};var i,o,a,s,u,l,c,f,p,d,h=w.ajaxSetup({},n),g=h.context||h,y=h.context&&(g.nodeType||g.jquery)?w(g):w.event,v=w.Deferred(),m=w.Callbacks(\"once memory\"),x=h.statusCode||{},b={},T={},C=\"canceled\",E={readyState:0,getResponseHeader:function(e){var t;if(c){if(!s){s={};while(t=Ot.exec(a))s[t[1].toLowerCase()]=t[2]}t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(e,t){return null==c&&(e=T[e.toLowerCase()]=T[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==c&&(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)E.always(e[E.status]);else for(t in e)x[t]=[x[t],e[t]];return this},abort:function(e){var t=e||C;return i&&i.abort(t),k(0,t),this}};if(v.promise(E),h.url=((t||h.url||Ct.href)+\"\").replace(Rt,Ct.protocol+\"//\"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=(h.dataType||\"*\").toLowerCase().match(M)||[\"\"],null==h.crossDomain){l=r.createElement(\"a\");try{l.href=h.url,l.href=l.href,h.crossDomain=Bt.protocol+\"//\"+Bt.host!=l.protocol+\"//\"+l.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&\"string\"!=typeof h.data&&(h.data=w.param(h.data,h.traditional)),_t(It,h,n,E),c)return E;(f=w.event&&h.global)&&0==w.active++&&w.event.trigger(\"ajaxStart\"),h.type=h.type.toUpperCase(),h.hasContent=!Mt.test(h.type),o=h.url.replace(Lt,\"\"),h.hasContent?h.data&&h.processData&&0===(h.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(h.data=h.data.replace(qt,\"+\")):(d=h.url.slice(o.length),h.data&&(h.processData||\"string\"==typeof h.data)&&(o+=(kt.test(o)?\"&\":\"?\")+h.data,delete h.data),!1===h.cache&&(o=o.replace(Ht,\"$1\"),d=(kt.test(o)?\"&\":\"?\")+\"_=\"+Et+++d),h.url=o+d),h.ifModified&&(w.lastModified[o]&&E.setRequestHeader(\"If-Modified-Since\",w.lastModified[o]),w.etag[o]&&E.setRequestHeader(\"If-None-Match\",w.etag[o])),(h.data&&h.hasContent&&!1!==h.contentType||n.contentType)&&E.setRequestHeader(\"Content-Type\",h.contentType),E.setRequestHeader(\"Accept\",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+(\"*\"!==h.dataTypes[0]?\", \"+$t+\"; q=0.01\":\"\"):h.accepts[\"*\"]);for(p in h.headers)E.setRequestHeader(p,h.headers[p]);if(h.beforeSend&&(!1===h.beforeSend.call(g,E,h)||c))return E.abort();if(C=\"abort\",m.add(h.complete),E.done(h.success),E.fail(h.error),i=_t(Wt,h,n,E)){if(E.readyState=1,f&&y.trigger(\"ajaxSend\",[E,h]),c)return E;h.async&&h.timeout>0&&(u=e.setTimeout(function(){E.abort(\"timeout\")},h.timeout));try{c=!1,i.send(b,k)}catch(e){if(c)throw e;k(-1,e)}}else k(-1,\"No Transport\");function k(t,n,r,s){var l,p,d,b,T,C=n;c||(c=!0,u&&e.clearTimeout(u),i=void 0,a=s||\"\",E.readyState=t>0?4:0,l=t>=200&&t<300||304===t,r&&(b=Xt(h,E,r)),b=Ut(h,b,E,l),l?(h.ifModified&&((T=E.getResponseHeader(\"Last-Modified\"))&&(w.lastModified[o]=T),(T=E.getResponseHeader(\"etag\"))&&(w.etag[o]=T)),204===t||\"HEAD\"===h.type?C=\"nocontent\":304===t?C=\"notmodified\":(C=b.state,p=b.data,l=!(d=b.error))):(d=C,!t&&C||(C=\"error\",t<0&&(t=0))),E.status=t,E.statusText=(n||C)+\"\",l?v.resolveWith(g,[p,C,E]):v.rejectWith(g,[E,C,d]),E.statusCode(x),x=void 0,f&&y.trigger(l?\"ajaxSuccess\":\"ajaxError\",[E,h,l?p:d]),m.fireWith(g,[E,C]),f&&(y.trigger(\"ajaxComplete\",[E,h]),--w.active||w.event.trigger(\"ajaxStop\")))}return E},getJSON:function(e,t,n){return w.get(e,t,n,\"json\")},getScript:function(e,t){return w.get(e,void 0,t,\"script\")}}),w.each([\"get\",\"post\"],function(e,t){w[t]=function(e,n,r,i){return g(n)&&(i=i||r,r=n,n=void 0),w.ajax(w.extend({url:e,type:t,dataType:i,data:n,success:r},w.isPlainObject(e)&&e))}}),w._evalUrl=function(e){return w.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,\"throws\":!0})},w.fn.extend({wrapAll:function(e){var t;return this[0]&&(g(e)&&(e=e.call(this[0])),t=w(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return g(e)?this.each(function(t){w(this).wrapInner(e.call(this,t))}):this.each(function(){var t=w(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=g(e);return this.each(function(n){w(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){w(this).replaceWith(this.childNodes)}),this}}),w.expr.pseudos.hidden=function(e){return!w.expr.pseudos.visible(e)},w.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},w.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(e){}};var Vt={0:200,1223:204},Gt=w.ajaxSettings.xhr();h.cors=!!Gt&&\"withCredentials\"in Gt,h.ajax=Gt=!!Gt,w.ajaxTransport(function(t){var n,r;if(h.cors||Gt&&!t.crossDomain)return{send:function(i,o){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");for(a in i)s.setRequestHeader(a,i[a]);n=function(e){return function(){n&&(n=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,\"abort\"===e?s.abort():\"error\"===e?\"number\"!=typeof s.status?o(0,\"error\"):o(s.status,s.statusText):o(Vt[s.status]||s.status,s.statusText,\"text\"!==(s.responseType||\"text\")||\"string\"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),r=s.onerror=s.ontimeout=n(\"error\"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&e.setTimeout(function(){n&&r()})},n=n(\"abort\");try{s.send(t.hasContent&&t.data||null)}catch(e){if(n)throw e}},abort:function(){n&&n()}}}),w.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),w.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return w.globalEval(e),e}}}),w.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),w.ajaxTransport(\"script\",function(e){if(e.crossDomain){var t,n;return{send:function(i,o){t=w(\"<script>\").prop({charset:e.scriptCharset,src:e.url}).on(\"load error\",n=function(e){t.remove(),n=null,e&&o(\"error\"===e.type?404:200,e.type)}),r.head.appendChild(t[0])},abort:function(){n&&n()}}}});var Yt=[],Qt=/(=)\\?(?=&|$)|\\?\\?/;w.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Yt.pop()||w.expando+\"_\"+Et++;return this[e]=!0,e}}),w.ajaxPrefilter(\"json jsonp\",function(t,n,r){var i,o,a,s=!1!==t.jsonp&&(Qt.test(t.url)?\"url\":\"string\"==typeof t.data&&0===(t.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Qt.test(t.data)&&\"data\");if(s||\"jsonp\"===t.dataTypes[0])return i=t.jsonpCallback=g(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Qt,\"$1\"+i):!1!==t.jsonp&&(t.url+=(kt.test(t.url)?\"&\":\"?\")+t.jsonp+\"=\"+i),t.converters[\"script json\"]=function(){return a||w.error(i+\" was not called\"),a[0]},t.dataTypes[0]=\"json\",o=e[i],e[i]=function(){a=arguments},r.always(function(){void 0===o?w(e).removeProp(i):e[i]=o,t[i]&&(t.jsonpCallback=n.jsonpCallback,Yt.push(i)),a&&g(o)&&o(a[0]),a=o=void 0}),\"script\"}),h.createHTMLDocument=function(){var e=r.implementation.createHTMLDocument(\"\").body;return e.innerHTML=\"<form></form><form></form>\",2===e.childNodes.length}(),w.parseHTML=function(e,t,n){if(\"string\"!=typeof e)return[];\"boolean\"==typeof t&&(n=t,t=!1);var i,o,a;return t||(h.createHTMLDocument?((i=(t=r.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=r.location.href,t.head.appendChild(i)):t=r),o=A.exec(e),a=!n&&[],o?[t.createElement(o[1])]:(o=xe([e],t,a),a&&a.length&&w(a).remove(),w.merge([],o.childNodes))},w.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(\" \");return s>-1&&(r=vt(e.slice(s)),e=e.slice(0,s)),g(t)?(n=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),a.length>0&&w.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(r?w(\"<div>\").append(w.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},w.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){w.fn[t]=function(e){return this.on(t,e)}}),w.expr.pseudos.animated=function(e){return w.grep(w.timers,function(t){return e===t.elem}).length},w.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l,c=w.css(e,\"position\"),f=w(e),p={};\"static\"===c&&(e.style.position=\"relative\"),s=f.offset(),o=w.css(e,\"top\"),u=w.css(e,\"left\"),(l=(\"absolute\"===c||\"fixed\"===c)&&(o+u).indexOf(\"auto\")>-1)?(a=(r=f.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),g(t)&&(t=t.call(e,n,w.extend({},s))),null!=t.top&&(p.top=t.top-s.top+a),null!=t.left&&(p.left=t.left-s.left+i),\"using\"in t?t.using.call(e,p):f.css(p)}},w.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){w.offset.setOffset(this,e,t)});var t,n,r=this[0];if(r)return r.getClientRects().length?(t=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:t.top+n.pageYOffset,left:t.left+n.pageXOffset}):{top:0,left:0}},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if(\"fixed\"===w.css(r,\"position\"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&\"static\"===w.css(e,\"position\"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=w(e).offset()).top+=w.css(e,\"borderTopWidth\",!0),i.left+=w.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-w.css(r,\"marginTop\",!0),left:t.left-i.left-w.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&\"static\"===w.css(e,\"position\"))e=e.offsetParent;return e||be})}}),w.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,t){var n=\"pageYOffset\"===t;w.fn[e]=function(r){return z(this,function(e,r,i){var o;if(y(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===i)return o?o[t]:e[r];o?o.scrollTo(n?o.pageXOffset:i,n?i:o.pageYOffset):e[r]=i},e,r,arguments.length)}}),w.each([\"top\",\"left\"],function(e,t){w.cssHooks[t]=_e(h.pixelPosition,function(e,n){if(n)return n=Fe(e,t),We.test(n)?w(e).position()[t]+\"px\":n})}),w.each({Height:\"height\",Width:\"width\"},function(e,t){w.each({padding:\"inner\"+e,content:t,\"\":\"outer\"+e},function(n,r){w.fn[r]=function(i,o){var a=arguments.length&&(n||\"boolean\"!=typeof i),s=n||(!0===i||!0===o?\"margin\":\"border\");return z(this,function(t,n,i){var o;return y(t)?0===r.indexOf(\"outer\")?t[\"inner\"+e]:t.document.documentElement[\"client\"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body[\"scroll\"+e],o[\"scroll\"+e],t.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):void 0===i?w.css(t,n,s):w.style(t,n,i,s)},t,a?i:void 0,a)}})}),w.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,t){w.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),w.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),w.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}}),w.proxy=function(e,t){var n,r,i;if(\"string\"==typeof t&&(n=e[t],t=e,e=n),g(e))return r=o.call(arguments,2),i=function(){return e.apply(t||this,r.concat(o.call(arguments)))},i.guid=e.guid=e.guid||w.guid++,i},w.holdReady=function(e){e?w.readyWait++:w.ready(!0)},w.isArray=Array.isArray,w.parseJSON=JSON.parse,w.nodeName=N,w.isFunction=g,w.isWindow=y,w.camelCase=G,w.type=x,w.now=Date.now,w.isNumeric=function(e){var t=w.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return w});var Jt=e.jQuery,Kt=e.$;return w.noConflict=function(t){return e.$===w&&(e.$=Kt),t&&e.jQuery===w&&(e.jQuery=Jt),w},t||(e.jQuery=e.$=w),w});\n    3  \n    4  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/test/canvasdir/canvas.js:\n  104  Point.prototype.draw = function () {\n  105  \n  106:     if (this.constraints.length <= 0) return;\n  107  \n  108:     var i = this.constraints.length;\n  109      while (i--) this.constraints[i].draw();\n  110  };\n  ...\n  119      }\n  120  \n  121:     var i = this.constraints.length;\n  122      while (i--) this.constraints[i].resolve();\n  123  \n  ...\n  150  Point.prototype.remove_constraint = function (lnk) {\n  151  \n  152:     var i = this.constraints.length;\n  153      while (i--)\n  154          if (this.constraints[i] == lnk) this.constraints.splice(i, 1);\n  ...\n  170      this.p1 = p1;\n  171      this.p2 = p2;\n  172:     this.length = spacing;\n  173  };\n  174  \n  ...\n  178          diff_y = this.p1.y - this.p2.y,\n  179          dist = Math.sqrt(diff_x * diff_x + diff_y * diff_y),\n  180:         diff = (this.length - dist) / dist;\n  181  \n  182      if (dist > tear_distance) this.p1.remove_constraint(this);\n  ...\n  209              var p = new Point(start_x + x * spacing, start_y + y * spacing);\n  210  \n  211:             x != 0 && p.attach(this.points[this.points.length - 1]);\n  212              y == 0 && p.pin(p.x, p.y);\n  213              y != 0 && p.attach(this.points[x + (y - 1) * (cloth_width + 1)])\n  ...\n  223  \n  224      while (i--) {\n  225:         var p = this.points.length;\n  226          while (p--) this.points[p].resolve_constraints();\n  227      }\n  228  \n  229:     i = this.points.length;\n  230      while (i--) this.points[i].update(.016);\n  231  };\n  ...\n  235      ctx.beginPath();\n  236  \n  237:     var i = cloth.points.length;\n  238      while (i--) cloth.points[i].draw();\n  239  \n\n/Volumes/Source/srcO/MulleCivetWeb/test/15_string/list_components.m:\n   24     range = [s mulleRangeOfListComponent:component\n   25                                separator:separator];\n   26:    if( range.length)\n   27        printf( \"range = { %lu, %lu } \", (unsigned long) range.location,\n   28:                                       (unsigned long) range.length);\n   29     else\n   30        printf( \"range = { NSNotFound, 0 } \");\n\n693 matches across 45 files\n\n\nSearching 1255 files for \"create_instance\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src/duktape.c:\n 3459  \n 3460  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n 3461: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n 3462  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n 3463  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n ....\n 33740  \t/* [ ... bytecode escaped_source ] */\n 33741  \n 33742: \tduk_regexp_create_instance(thr);\n 33743  \n 33744  \t/* [ ... RegExp ] */\n .....\n 67997  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 67998  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 67999: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 68000  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 68001  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n .....\n 78397   */\n 78398  \n 78399: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 78400  \tduk_context *ctx = (duk_context *) thr;\n 78401  \tduk_hobject *h;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-noline/duktape.c:\n 3445  \n 3446  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n 3447: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n 3448  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n 3449  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n ....\n 33665  \t/* [ ... bytecode escaped_source ] */\n 33666  \n 33667: \tduk_regexp_create_instance(thr);\n 33668  \n 33669  \t/* [ ... RegExp ] */\n .....\n 67886  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 67887  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 67888: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 67889  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 67890  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n .....\n 78281   */\n 78282  \n 78283: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 78284  \tduk_context *ctx = (duk_context *) thr;\n 78285  \tduk_hobject *h;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_bi_regexp.c:\n   84  \t/* [ ... bytecode escaped_source ] */\n   85  \n   86: \tduk_regexp_create_instance(thr);\n   87  \n   88  \t/* [ ... RegExp ] */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_js_executor.c:\n 2650  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 2651  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 2652: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 2653  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 2654  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_regexp.h:\n   76  \n   77  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n   78: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n   79  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n   80  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.5.2/src-separate/duk_regexp_compiler.c:\n 1014   */\n 1015  \n 1016: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 1017  \tduk_context *ctx = (duk_context *) thr;\n 1018  \tduk_hobject *h;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src/duktape.c:\n 3459  \n 3460  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n 3461: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n 3462  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n 3463  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n ....\n 33947  \t/* [ ... bytecode escaped_source ] */\n 33948  \n 33949: \tduk_regexp_create_instance(thr);\n 33950  \n 33951  \t/* [ ... RegExp ] */\n .....\n 68248  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 68249  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 68250: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 68251  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 68252  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n .....\n 78684   */\n 78685  \n 78686: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 78687  \tduk_context *ctx = (duk_context *) thr;\n 78688  \tduk_hobject *h;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-noline/duktape.c:\n 3445  \n 3446  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n 3447: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n 3448  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n 3449  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n ....\n 33872  \t/* [ ... bytecode escaped_source ] */\n 33873  \n 33874: \tduk_regexp_create_instance(thr);\n 33875  \n 33876  \t/* [ ... RegExp ] */\n .....\n 68137  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 68138  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 68139: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 68140  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 68141  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n .....\n 78568   */\n 78569  \n 78570: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 78571  \tduk_context *ctx = (duk_context *) thr;\n 78572  \tduk_hobject *h;\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_bi_regexp.c:\n   84  \t/* [ ... bytecode escaped_source ] */\n   85  \n   86: \tduk_regexp_create_instance(thr);\n   87  \n   88  \t/* [ ... RegExp ] */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_js_executor.c:\n 2650  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(c));\n 2651  \t\t\tduk_push_tval(ctx, DUK__REGCONSTP(b));  /* -> [ ... escaped_source bytecode ] */\n 2652: \t\t\tduk_regexp_create_instance(thr);   /* -> [ ... regexp_instance ] */\n 2653  \t\t\tDUK_DDD(DUK_DDDPRINT(\"regexp instance: %!iT\", (duk_tval *) duk_get_tval(ctx, -1)));\n 2654  \t\t\tduk_replace(ctx, (duk_idx_t) a);\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_regexp.h:\n   76  \n   77  DUK_INTERNAL_DECL void duk_regexp_compile(duk_hthread *thr);\n   78: DUK_INTERNAL_DECL void duk_regexp_create_instance(duk_hthread *thr);\n   79  DUK_INTERNAL_DECL void duk_regexp_match(duk_hthread *thr);\n   80  DUK_INTERNAL_DECL void duk_regexp_match_force_global(duk_hthread *thr);  /* hacky helper for String.prototype.split() */\n\n/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/third_party/duktape-1.8.0/src-separate/duk_regexp_compiler.c:\n 1014   */\n 1015  \n 1016: DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {\n 1017  \tduk_context *ctx = (duk_context *) thr;\n 1018  \tduk_hobject *h;\n\n/Volumes/Source/srcO/mulle-objc/mulle-objc-runtime/test-compiler/0_compiler/metaabi/metaabi-struct-rval.m:\n   92     Foo                   *nothing;\n   93  \n   94:    foo = mulle_objc_infraclass_create_instance( [Foo class], 0, NULL);\n   95  \n   96     // keep nil code alive\n\n25 matches across 13 files\n\n\nSearching 1256 files for \"is_sskl\" (case sensitive)\n\n0 matches\n\nSearching 1256 files for \"return( header->value);\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebRequest.m:\n  176     {\n  177        if( ! strcmp( key, header->name))\n  178:          return( header->value);\n  179        ++header;\n  180     }\n\n1 match in 1 file\n\n\nSearching 1259 files for \"MulleObjCInstanceGetAllocator\" (case sensitive)\n\n0 matches\n\nSearching 1266 files for \"sendChunkedHeaderData\" (case sensitive)\n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h:\n   71  // and call this again (be sure to add \"chunked\" to the TransferEncodings\n   72  // before sending the header\n   73: - (BOOL) sendChunkedHeaderData;\n   74  - (BOOL) sendChunkedContentData;\n   75  \n\n/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m:\n  234  \n  235  \n  236: //- (BOOL) sendChunkedHeaderData\n  237  //{\n  238  //   NSData       *data;\n\n/Volumes/Source/srcO/MulleCivetWeb/test/50_chunked/chucky.m:\n   33        return( response);\n   34  \n   35:    [response sendChunkedHeaderData];\n   36  \n   37     [response appendLine:@\"Reply\"];\n\n/Volumes/Source/srcO/MulleCivetWeb/test/50_chunked/chucky.old.m:\n   32        return( response);\n   33  \n   34:    [response sendChunkedHeaderData];\n   35  \n   36     [response appendLine:@\"Reply\"];\n\n4 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 282603,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/MulleCivetWebRequest.m",
			"settings":
			{
				"buffer_size": 10934,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/10_generated/MulleCivetWebTextResponse/test.m",
			"settings":
			{
				"buffer_size": 1613,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/50_chunked/chucky.m",
			"settings":
			{
				"buffer_size": 5635,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/MulleCivetWebResponse.m",
			"settings":
			{
				"buffer_size": 10317,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/40_curled/curly.m",
			"settings":
			{
				"buffer_size": 4902,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/20_oneshot/oneshot-info.m",
			"settings":
			{
				"buffer_size": 3725,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/20_oneshot/oneshot.m",
			"settings":
			{
				"buffer_size": 3542,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 364.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Set Syntax: C++"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 429.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/Source/srcO/MulleCivetWeb",
		"/Volumes/Source/srcO/MulleCivetWeb/src",
		"/Volumes/Source/srcO/MulleCivetWeb/test",
		"/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot",
		"/Volumes/Source/srcO/MulleCivetWeb/test/30_url",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_curled",
		"/Volumes/Source/srcO/MulleCivetWeb/test/50_chunked"
	],
	"file_history":
	[
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-runtime/test-compiler/0_compiler/metaabi/metaabi-struct-rval.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_curled/curly.stdout",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+MulleCivetWeb.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+MulleCivetWeb.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebRequest.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebRequest.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_curled/curly.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/civetweb.c",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chucky.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSDate+MulleHTTP.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+NSDictionary.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+NSDictionary.m",
		"/home/src/srcO/MulleFoundation/MulleObjCStandardFoundation/src/CharacterSet/URLQueryAllowedCharacterSet.m",
		"/home/src/srcO/MulleCivetWeb/src/import-private.h",
		"/Volumes/Source/srcC/Dienstag/Dienstag/Dienstag.xcodeproj/project.pbxproj",
		"/home/src/srcO/MulleFoundation/MulleObjCCurlFoundation/stash/curl/CMakeLists.txt",
		"/home/src/srcO/MulleFoundation/MulleObjCCurlFoundation/craftinfo/openssl/bin/openssl-build",
		"/Volumes/Source/srcO/Tests/long-long-bug/int.c",
		"/Volumes/Source/srcO/Tests/long-long-bug/long-long.c",
		"/Volumes/Source/srcO/Tests/long-long-bug/long-long-fp.c",
		"/home/src/srcO/MulleFoundation/MulleFoundation/stash/openssl/INSTALL.MacOS",
		"/Volumes/VM/llvm/mulle-clang-90/src/mulle-clang/bin/install-mulle-clang",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/test/NSString/simplematch.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/test/NSString/simplematch.debug",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSString+Regex.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple.debug",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/src/NSData+MulleObjCZlibFoundation.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/src/NSData+MulleObjCZlibFoundation.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSArray+Regex.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSArray+Regex.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSString+Regex.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCCurlFoundation/README.md",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCCurlFoundation/craftinfo/curl/definition/set/CMAKEFLAGS",
		"/Volumes/Source/srcO/Tests/long-long-bug/Makefile",
		"/Volumes/Source/srcO/Tests/long-long-bug/long.c",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_NSArrayPlaceholder.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/NSValue.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/NSNumber.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/_MulleObjCConcreteValue.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+Sprintf.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+NSData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSPipe+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSFileHandle+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Base/NSFileHandle.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Undo/NSUndoManager.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSNumberFormatter.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDateFormatter.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSBundle+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Linux/NSProcessInfo+Linux.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/FreeBSD/NSProcessInfo+FreeBSD.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Darwin/NSProcessInfo+Darwin.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/BSD/NSTask+BSD.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCKVCFoundation/src/NSObject+KeyValueCoding.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCKVCFoundation/src/NSNumber+MulleObjCKVCArithmetic.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSMutableString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSConstantString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCUTF32String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCUTF16String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCTaggedPointerChar7String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCTaggedPointerChar5String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+ClassCluster.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCASCIIString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/NSMutableData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/NSData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/_MulleObjCConcreteMutableData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/test/Exception/range-validate.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Search.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableString+Search.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_MulleObjCEmptyDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_MulleObjCDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/NSMutableArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSSet/NSSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSSet/ns-hash-table.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/NSDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/NSDictionary+NSArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/ns-map-table.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/include-private.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/NSArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_MulleObjCEmptyArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_MulleObjCConcreteArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/include-private.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/mulle-foundation-universeconfiguration.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException+String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Search.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/MulleObjCContainerDescription.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSArray/NSArray+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSDictionary+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSDictionary/NSDictionary+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSSet/NSSet+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSCalendarDate.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSLocale.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSTimeZone.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSNumber+NSLocale.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/MulleObjCStandardFoundationString.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSLocalizedDateFactory.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableString+Search.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Escaping.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDate+NSDateFormatter.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDate+NSCalendarDate.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+NSCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/MulleObjCCharacterBitmap.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/_MulleObjCConcreteBitmapCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSNumber+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSDate+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Components.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Components.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+CharacterSetSearch.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/MulleObjCStandardFoundation.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSScanner.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+NSCharacterSet.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+CharacterSetSearch.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Escaping.h"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 139.454545455,
		"where_history":
		[
			"",
			"mulleHTTPDescription"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"sendChunkedHeaderData",
			"MulleObjCInstanceGetAllocator",
			"return( header->value);",
			"is_sskl",
			"URLString",
			"getInfo( self)",
			"create_instance",
			".length",
			"[[MulleCivetWebTextResponse new] autorelease]",
			"num_listening_sockets",
			"mg_get_server_ports",
			"listening_sockets",
			"socket",
			"master_thread",
			"master_thread_run",
			"callbacks.init_thread",
			"user_thread_ptr",
			"_server_name",
			"user_data",
			"init_thread",
			"_beginthreadex_beginthreadex",
			"_beginthreadex",
			"mg_start_thread_with_id",
			"TransferEncoding",
			"MulleCivetWebResponse>",
			"MulleCivetWebResponse",
			"containsTransferEncoding",
			"clearContentData",
			"setOnlyHeader",
			"onlyHe",
			"writeWebResponse",
			"mg_send_chunk",
			"mulleParameterDictionary",
			"server:",
			"\"NSURL+MulleCivetWeb.h\"",
			"getInfo(",
			"getInfo( self)",
			"_requestHandler webResponseForException",
			"webResponseForWebRequest",
			"mulleDictionaryByRemovingPercentEncodingWithLineSeparator",
			"getURLParameterAllowedWithoutAmpersandAndEqualCharacterSet",
			"getInfo",
			"MulleURLUTF8Parts",
			"mulleURLEscapedAllowedCharacterSet",
			"\"NSURL+MulleQueryDictionary.h\"",
			"_charset",
			"characterSet",
			"URLUserAllowedCharacterSet",
			"HTTPDescription",
			"scap"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"URLWithString",
			"\"NSURL+NSDictionary.h\"",
			"_formatter",
			"formatter",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/MulleCivetWeb.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 874,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								772
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tabs_extra_last_activated": 1583255258.79,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/MulleCivetWebServer.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9762,
						"regions":
						{
						},
						"selection":
						[
							[
								1667,
								1667
							]
						],
						"settings":
						{
							"SL.209.region_keys":
							[
							],
							"SL.40.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583499535.43,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 787.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/MulleCivetWebServer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3146,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tabs_extra_last_activated": 1583415371.24,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/MulleCivetWebResponse.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3391,
						"regions":
						{
						},
						"selection":
						[
							[
								2828,
								2828
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tabs_extra_last_activated": 1583499559.92,
							"tabs_extra_last_activated_sheet_index": 3,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 876.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 282603,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										252,
										265
									],
									[
										620,
										633
									],
									[
										659,
										672
									],
									[
										964,
										977
									],
									[
										1086,
										1099
									],
									[
										2104,
										2117
									],
									[
										2120,
										2133
									],
									[
										2320,
										2333
									],
									[
										2339,
										2352
									],
									[
										2516,
										2529
									],
									[
										2830,
										2843
									],
									[
										3107,
										3120
									],
									[
										3330,
										3343
									],
									[
										3624,
										3637
									],
									[
										3852,
										3865
									],
									[
										3924,
										3937
									],
									[
										4232,
										4248
									],
									[
										4498,
										4514
									],
									[
										4608,
										4624
									],
									[
										4794,
										4810
									],
									[
										5026,
										5042
									],
									[
										5265,
										5281
									],
									[
										5503,
										5519
									],
									[
										5834,
										5850
									],
									[
										6061,
										6077
									],
									[
										6171,
										6187
									],
									[
										6342,
										6358
									],
									[
										6574,
										6590
									],
									[
										6813,
										6829
									],
									[
										7091,
										7107
									],
									[
										7226,
										7242
									],
									[
										7592,
										7598
									],
									[
										7820,
										7826
									],
									[
										8037,
										8043
									],
									[
										8055,
										8061
									],
									[
										8281,
										8287
									],
									[
										8486,
										8492
									],
									[
										8504,
										8510
									],
									[
										8730,
										8736
									],
									[
										8909,
										8915
									],
									[
										9044,
										9050
									],
									[
										9480,
										9493
									],
									[
										9766,
										9782
									],
									[
										9901,
										9917
									],
									[
										10003,
										10019
									],
									[
										10082,
										10098
									],
									[
										10295,
										10311
									],
									[
										10604,
										10628
									],
									[
										10784,
										10808
									],
									[
										11012,
										11036
									],
									[
										11386,
										11407
									],
									[
										11493,
										11514
									],
									[
										11822,
										11843
									],
									[
										11998,
										12019
									],
									[
										12203,
										12224
									],
									[
										12410,
										12431
									],
									[
										12615,
										12636
									],
									[
										12773,
										12794
									],
									[
										12871,
										12892
									],
									[
										13014,
										13035
									],
									[
										13156,
										13177
									],
									[
										13190,
										13211
									],
									[
										13391,
										13412
									],
									[
										13547,
										13568
									],
									[
										13677,
										13698
									],
									[
										13795,
										13816
									],
									[
										13991,
										14012
									],
									[
										14223,
										14244
									],
									[
										14296,
										14317
									],
									[
										14426,
										14447
									],
									[
										14609,
										14630
									],
									[
										14919,
										14940
									],
									[
										15140,
										15161
									],
									[
										15234,
										15255
									],
									[
										15442,
										15463
									],
									[
										15686,
										15707
									],
									[
										15815,
										15836
									],
									[
										15994,
										16015
									],
									[
										16376,
										16397
									],
									[
										16445,
										16466
									],
									[
										16854,
										16875
									],
									[
										16982,
										17003
									],
									[
										17246,
										17267
									],
									[
										17352,
										17373
									],
									[
										17651,
										17672
									],
									[
										17776,
										17797
									],
									[
										18052,
										18073
									],
									[
										18439,
										18460
									],
									[
										18546,
										18567
									],
									[
										18875,
										18896
									],
									[
										19051,
										19072
									],
									[
										19256,
										19277
									],
									[
										19463,
										19484
									],
									[
										19668,
										19689
									],
									[
										19826,
										19847
									],
									[
										19924,
										19945
									],
									[
										20067,
										20088
									],
									[
										20209,
										20230
									],
									[
										20243,
										20264
									],
									[
										20444,
										20465
									],
									[
										20600,
										20621
									],
									[
										20730,
										20751
									],
									[
										20848,
										20869
									],
									[
										21044,
										21065
									],
									[
										21273,
										21294
									],
									[
										21346,
										21367
									],
									[
										21476,
										21497
									],
									[
										21659,
										21680
									],
									[
										21969,
										21990
									],
									[
										22190,
										22211
									],
									[
										22284,
										22305
									],
									[
										22492,
										22513
									],
									[
										22736,
										22757
									],
									[
										22865,
										22886
									],
									[
										23044,
										23065
									],
									[
										23426,
										23447
									],
									[
										23495,
										23516
									],
									[
										23904,
										23925
									],
									[
										24032,
										24053
									],
									[
										24296,
										24317
									],
									[
										24402,
										24423
									],
									[
										24701,
										24722
									],
									[
										24826,
										24847
									],
									[
										25102,
										25123
									],
									[
										25501,
										25523
									],
									[
										25672,
										25694
									],
									[
										25851,
										25873
									],
									[
										26057,
										26079
									],
									[
										26277,
										26299
									],
									[
										26623,
										26645
									],
									[
										26829,
										26851
									],
									[
										27049,
										27071
									],
									[
										27398,
										27414
									],
									[
										27455,
										27471
									],
									[
										27662,
										27678
									],
									[
										27837,
										27853
									],
									[
										28073,
										28089
									],
									[
										28144,
										28160
									],
									[
										28272,
										28288
									],
									[
										28576,
										28592
									],
									[
										28602,
										28618
									],
									[
										28898,
										28914
									],
									[
										29107,
										29123
									],
									[
										29171,
										29187
									],
									[
										29236,
										29252
									],
									[
										29300,
										29316
									],
									[
										29361,
										29377
									],
									[
										29622,
										29638
									],
									[
										29648,
										29664
									],
									[
										29888,
										29904
									],
									[
										29918,
										29934
									],
									[
										30173,
										30185
									],
									[
										30372,
										30384
									],
									[
										30394,
										30406
									],
									[
										30700,
										30712
									],
									[
										30933,
										30945
									],
									[
										30986,
										30998
									],
									[
										31020,
										31032
									],
									[
										31179,
										31191
									],
									[
										31338,
										31350
									],
									[
										31497,
										31509
									],
									[
										31656,
										31668
									],
									[
										31869,
										31881
									],
									[
										31959,
										31971
									],
									[
										32164,
										32176
									],
									[
										32267,
										32279
									],
									[
										32457,
										32469
									],
									[
										32676,
										32688
									],
									[
										32796,
										32808
									],
									[
										32974,
										32986
									],
									[
										33179,
										33191
									],
									[
										33482,
										33494
									],
									[
										33755,
										33767
									],
									[
										33823,
										33835
									],
									[
										33999,
										34011
									],
									[
										34173,
										34185
									],
									[
										34359,
										34371
									],
									[
										34575,
										34587
									],
									[
										34771,
										34783
									],
									[
										34850,
										34862
									],
									[
										35043,
										35055
									],
									[
										35272,
										35284
									],
									[
										35443,
										35455
									],
									[
										35715,
										35727
									],
									[
										35907,
										35919
									],
									[
										36093,
										36105
									],
									[
										36425,
										36444
									],
									[
										36625,
										36644
									],
									[
										37013,
										37032
									],
									[
										37060,
										37079
									],
									[
										37386,
										37405
									],
									[
										37410,
										37429
									],
									[
										37914,
										37933
									],
									[
										37939,
										37958
									],
									[
										38105,
										38124
									],
									[
										38226,
										38245
									],
									[
										38577,
										38596
									],
									[
										38852,
										38871
									],
									[
										38876,
										38895
									],
									[
										39133,
										39152
									],
									[
										39158,
										39177
									],
									[
										39372,
										39391
									],
									[
										39693,
										39712
									],
									[
										39969,
										39988
									],
									[
										40283,
										40302
									],
									[
										40574,
										40593
									],
									[
										40737,
										40756
									],
									[
										41025,
										41044
									],
									[
										41208,
										41227
									],
									[
										41414,
										41433
									],
									[
										41549,
										41568
									],
									[
										41755,
										41774
									],
									[
										41945,
										41964
									],
									[
										42333,
										42378
									],
									[
										42744,
										42751
									],
									[
										42974,
										42981
									],
									[
										43269,
										43276
									],
									[
										43425,
										43432
									],
									[
										43728,
										43735
									],
									[
										43922,
										43929
									],
									[
										44116,
										44123
									],
									[
										44219,
										44226
									],
									[
										44485,
										44492
									],
									[
										44772,
										44779
									],
									[
										45352,
										45359
									],
									[
										45907,
										45914
									],
									[
										46056,
										46063
									],
									[
										46083,
										46090
									],
									[
										46305,
										46312
									],
									[
										46961,
										46968
									],
									[
										47002,
										47009
									],
									[
										47946,
										47953
									],
									[
										48042,
										48049
									],
									[
										48460,
										48467
									],
									[
										48894,
										48901
									],
									[
										49917,
										49924
									],
									[
										52229,
										52236
									],
									[
										52589,
										52596
									],
									[
										52785,
										52792
									],
									[
										52867,
										52874
									],
									[
										52890,
										52897
									],
									[
										52920,
										52927
									],
									[
										52983,
										52990
									],
									[
										53044,
										53051
									],
									[
										53142,
										53149
									],
									[
										53187,
										53194
									],
									[
										53268,
										53275
									],
									[
										54497,
										54504
									],
									[
										54604,
										54611
									],
									[
										54658,
										54665
									],
									[
										57220,
										57227
									],
									[
										57442,
										57449
									],
									[
										59047,
										59054
									],
									[
										59171,
										59178
									],
									[
										59487,
										59494
									],
									[
										59610,
										59617
									],
									[
										60288,
										60295
									],
									[
										60653,
										60660
									],
									[
										61256,
										61263
									],
									[
										63695,
										63702
									],
									[
										63846,
										63853
									],
									[
										63869,
										63876
									],
									[
										63977,
										63984
									],
									[
										65571,
										65578
									],
									[
										66282,
										66289
									],
									[
										68998,
										69005
									],
									[
										69174,
										69181
									],
									[
										71245,
										71252
									],
									[
										71445,
										71452
									],
									[
										71599,
										71606
									],
									[
										71926,
										71933
									],
									[
										73522,
										73529
									],
									[
										73775,
										73782
									],
									[
										73996,
										74003
									],
									[
										74512,
										74519
									],
									[
										74537,
										74544
									],
									[
										74633,
										74640
									],
									[
										74716,
										74723
									],
									[
										74790,
										74797
									],
									[
										74921,
										74928
									],
									[
										75033,
										75040
									],
									[
										75069,
										75076
									],
									[
										75572,
										75579
									],
									[
										75749,
										75756
									],
									[
										75850,
										75857
									],
									[
										76102,
										76109
									],
									[
										76241,
										76248
									],
									[
										77478,
										77485
									],
									[
										77728,
										77735
									],
									[
										77837,
										77844
									],
									[
										78428,
										78435
									],
									[
										78499,
										78506
									],
									[
										79326,
										79333
									],
									[
										79907,
										79914
									],
									[
										80565,
										80572
									],
									[
										81009,
										81016
									],
									[
										82174,
										82181
									],
									[
										82183,
										82190
									],
									[
										82224,
										82231
									],
									[
										82840,
										82847
									],
									[
										82874,
										82881
									],
									[
										84406,
										84413
									],
									[
										84928,
										84935
									],
									[
										85276,
										85283
									],
									[
										85348,
										85355
									],
									[
										85934,
										85941
									],
									[
										86638,
										86645
									],
									[
										86658,
										86665
									],
									[
										86716,
										86723
									],
									[
										86869,
										86876
									],
									[
										87102,
										87109
									],
									[
										87195,
										87202
									],
									[
										87219,
										87226
									],
									[
										88912,
										88919
									],
									[
										88944,
										88951
									],
									[
										91033,
										91040
									],
									[
										91658,
										91665
									],
									[
										91939,
										91946
									],
									[
										92125,
										92132
									],
									[
										93133,
										93140
									],
									[
										94107,
										94114
									],
									[
										94412,
										94419
									],
									[
										94426,
										94433
									],
									[
										94490,
										94497
									],
									[
										94583,
										94590
									],
									[
										94651,
										94658
									],
									[
										94683,
										94690
									],
									[
										94909,
										94916
									],
									[
										94976,
										94983
									],
									[
										94990,
										94997
									],
									[
										95057,
										95064
									],
									[
										95788,
										95795
									],
									[
										95849,
										95856
									],
									[
										98172,
										98179
									],
									[
										98239,
										98246
									],
									[
										101130,
										101137
									],
									[
										101696,
										101703
									],
									[
										102015,
										102022
									],
									[
										102187,
										102194
									],
									[
										102331,
										102338
									],
									[
										103855,
										103862
									],
									[
										106897,
										106904
									],
									[
										106934,
										106941
									],
									[
										107405,
										107412
									],
									[
										108692,
										108699
									],
									[
										109043,
										109050
									],
									[
										109237,
										109244
									],
									[
										109484,
										109491
									],
									[
										109750,
										109757
									],
									[
										109981,
										109988
									],
									[
										110174,
										110181
									],
									[
										110304,
										110311
									],
									[
										110382,
										110389
									],
									[
										110459,
										110466
									],
									[
										110612,
										110619
									],
									[
										110854,
										110861
									],
									[
										111009,
										111016
									],
									[
										111197,
										111204
									],
									[
										111389,
										111396
									],
									[
										111676,
										111683
									],
									[
										111793,
										111800
									],
									[
										111981,
										111988
									],
									[
										112102,
										112109
									],
									[
										112255,
										112262
									],
									[
										112428,
										112435
									],
									[
										112613,
										112620
									],
									[
										112788,
										112795
									],
									[
										112950,
										112957
									],
									[
										113106,
										113113
									],
									[
										113284,
										113291
									],
									[
										113332,
										113339
									],
									[
										113478,
										113485
									],
									[
										113720,
										113727
									],
									[
										113960,
										113967
									],
									[
										114056,
										114063
									],
									[
										114327,
										114334
									],
									[
										114580,
										114587
									],
									[
										114801,
										114808
									],
									[
										115009,
										115016
									],
									[
										115262,
										115269
									],
									[
										115554,
										115561
									],
									[
										115794,
										115801
									],
									[
										115906,
										115913
									],
									[
										116173,
										116180
									],
									[
										116285,
										116292
									],
									[
										116552,
										116559
									],
									[
										116664,
										116671
									],
									[
										116931,
										116938
									],
									[
										117043,
										117050
									],
									[
										117329,
										117336
									],
									[
										117567,
										117574
									],
									[
										117666,
										117673
									],
									[
										117927,
										117934
									],
									[
										118026,
										118033
									],
									[
										118289,
										118296
									],
									[
										118388,
										118395
									],
									[
										118649,
										118656
									],
									[
										118748,
										118755
									],
									[
										119024,
										119031
									],
									[
										119309,
										119316
									],
									[
										119546,
										119553
									],
									[
										119774,
										119781
									],
									[
										120004,
										120011
									],
									[
										120232,
										120239
									],
									[
										120411,
										120418
									],
									[
										120427,
										120434
									],
									[
										120593,
										120600
									],
									[
										120640,
										120647
									],
									[
										120700,
										120707
									],
									[
										120746,
										120753
									],
									[
										120869,
										120876
									],
									[
										120931,
										120938
									],
									[
										121005,
										121012
									],
									[
										121057,
										121064
									],
									[
										121231,
										121238
									],
									[
										121305,
										121312
									],
									[
										121358,
										121365
									],
									[
										121411,
										121418
									],
									[
										121463,
										121470
									],
									[
										121654,
										121661
									],
									[
										121823,
										121830
									],
									[
										122071,
										122078
									],
									[
										122261,
										122268
									],
									[
										122510,
										122517
									],
									[
										122710,
										122717
									],
									[
										122866,
										122873
									],
									[
										123045,
										123052
									],
									[
										123253,
										123260
									],
									[
										123534,
										123541
									],
									[
										123717,
										123724
									],
									[
										123896,
										123903
									],
									[
										124155,
										124162
									],
									[
										124360,
										124367
									],
									[
										124652,
										124659
									],
									[
										125019,
										125026
									],
									[
										125293,
										125300
									],
									[
										125830,
										125837
									],
									[
										126132,
										126139
									],
									[
										126318,
										126325
									],
									[
										126504,
										126511
									],
									[
										126737,
										126744
									],
									[
										127020,
										127027
									],
									[
										127277,
										127284
									],
									[
										127458,
										127465
									],
									[
										127742,
										127749
									],
									[
										127872,
										127879
									],
									[
										127895,
										127902
									],
									[
										127971,
										127978
									],
									[
										127990,
										127997
									],
									[
										128056,
										128063
									],
									[
										128264,
										128271
									],
									[
										128306,
										128313
									],
									[
										128552,
										128559
									],
									[
										128800,
										128807
									],
									[
										128985,
										128992
									],
									[
										129043,
										129050
									],
									[
										129265,
										129272
									],
									[
										129288,
										129295
									],
									[
										129382,
										129389
									],
									[
										129580,
										129587
									],
									[
										129726,
										129733
									],
									[
										129846,
										129853
									],
									[
										130002,
										130009
									],
									[
										130196,
										130203
									],
									[
										130466,
										130473
									],
									[
										130624,
										130631
									],
									[
										130875,
										130882
									],
									[
										131161,
										131168
									],
									[
										131403,
										131410
									],
									[
										131636,
										131643
									],
									[
										131871,
										131878
									],
									[
										132104,
										132111
									],
									[
										132287,
										132294
									],
									[
										132303,
										132310
									],
									[
										132469,
										132476
									],
									[
										132516,
										132523
									],
									[
										132580,
										132587
									],
									[
										132626,
										132633
									],
									[
										132754,
										132761
									],
									[
										132820,
										132827
									],
									[
										132894,
										132901
									],
									[
										132946,
										132953
									],
									[
										133129,
										133136
									],
									[
										133203,
										133210
									],
									[
										133256,
										133263
									],
									[
										133309,
										133316
									],
									[
										133361,
										133368
									],
									[
										133612,
										133619
									],
									[
										133797,
										133804
									],
									[
										133855,
										133862
									],
									[
										134077,
										134084
									],
									[
										134100,
										134107
									],
									[
										134194,
										134201
									],
									[
										134394,
										134401
									],
									[
										134540,
										134547
									],
									[
										134735,
										134742
									],
									[
										134974,
										134981
									],
									[
										135246,
										135253
									],
									[
										135408,
										135415
									],
									[
										135579,
										135586
									],
									[
										135829,
										135836
									],
									[
										136018,
										136025
									],
									[
										136234,
										136241
									],
									[
										136660,
										136667
									],
									[
										136959,
										136966
									],
									[
										137294,
										137301
									],
									[
										137628,
										137635
									],
									[
										137939,
										137946
									],
									[
										138057,
										138064
									],
									[
										138186,
										138193
									],
									[
										138337,
										138344
									],
									[
										138586,
										138593
									],
									[
										138926,
										138933
									],
									[
										139261,
										139268
									],
									[
										139651,
										139658
									],
									[
										139826,
										139833
									],
									[
										140071,
										140078
									],
									[
										140313,
										140320
									],
									[
										140616,
										140623
									],
									[
										140798,
										140805
									],
									[
										140959,
										140966
									],
									[
										141245,
										141252
									],
									[
										141434,
										141441
									],
									[
										141686,
										141693
									],
									[
										142008,
										142015
									],
									[
										142195,
										142202
									],
									[
										142383,
										142390
									],
									[
										142712,
										142719
									],
									[
										142894,
										142901
									],
									[
										143055,
										143062
									],
									[
										143341,
										143348
									],
									[
										143530,
										143537
									],
									[
										143782,
										143789
									],
									[
										144104,
										144111
									],
									[
										144291,
										144298
									],
									[
										144479,
										144486
									],
									[
										144848,
										144855
									],
									[
										145140,
										145147
									],
									[
										145488,
										145495
									],
									[
										145804,
										145811
									],
									[
										146086,
										146093
									],
									[
										146271,
										146278
									],
									[
										146609,
										146616
									],
									[
										146785,
										146792
									],
									[
										146943,
										146950
									],
									[
										147302,
										147309
									],
									[
										147419,
										147426
									],
									[
										147607,
										147614
									],
									[
										147728,
										147735
									],
									[
										147881,
										147888
									],
									[
										148054,
										148061
									],
									[
										148239,
										148246
									],
									[
										148414,
										148421
									],
									[
										148576,
										148583
									],
									[
										148732,
										148739
									],
									[
										148910,
										148917
									],
									[
										148958,
										148965
									],
									[
										149104,
										149111
									],
									[
										149346,
										149353
									],
									[
										149586,
										149593
									],
									[
										149682,
										149689
									],
									[
										149953,
										149960
									],
									[
										150206,
										150213
									],
									[
										150427,
										150434
									],
									[
										150635,
										150642
									],
									[
										150888,
										150895
									],
									[
										151180,
										151187
									],
									[
										151420,
										151427
									],
									[
										151532,
										151539
									],
									[
										151799,
										151806
									],
									[
										151911,
										151918
									],
									[
										152178,
										152185
									],
									[
										152290,
										152297
									],
									[
										152557,
										152564
									],
									[
										152669,
										152676
									],
									[
										152955,
										152962
									],
									[
										153193,
										153200
									],
									[
										153292,
										153299
									],
									[
										153553,
										153560
									],
									[
										153652,
										153659
									],
									[
										153915,
										153922
									],
									[
										154014,
										154021
									],
									[
										154275,
										154282
									],
									[
										154374,
										154381
									],
									[
										154650,
										154657
									],
									[
										154935,
										154942
									],
									[
										155172,
										155179
									],
									[
										155400,
										155407
									],
									[
										155630,
										155637
									],
									[
										155858,
										155865
									],
									[
										156037,
										156044
									],
									[
										156053,
										156060
									],
									[
										156219,
										156226
									],
									[
										156266,
										156273
									],
									[
										156326,
										156333
									],
									[
										156372,
										156379
									],
									[
										156495,
										156502
									],
									[
										156557,
										156564
									],
									[
										156631,
										156638
									],
									[
										156683,
										156690
									],
									[
										156857,
										156864
									],
									[
										156931,
										156938
									],
									[
										156984,
										156991
									],
									[
										157037,
										157044
									],
									[
										157089,
										157096
									],
									[
										157280,
										157287
									],
									[
										157449,
										157456
									],
									[
										157697,
										157704
									],
									[
										157887,
										157894
									],
									[
										158136,
										158143
									],
									[
										158336,
										158343
									],
									[
										158492,
										158499
									],
									[
										158671,
										158678
									],
									[
										158879,
										158886
									],
									[
										159160,
										159167
									],
									[
										159343,
										159350
									],
									[
										159522,
										159529
									],
									[
										159781,
										159788
									],
									[
										159986,
										159993
									],
									[
										160278,
										160285
									],
									[
										160645,
										160652
									],
									[
										160919,
										160926
									],
									[
										161456,
										161463
									],
									[
										161758,
										161765
									],
									[
										161944,
										161951
									],
									[
										162130,
										162137
									],
									[
										162363,
										162370
									],
									[
										162646,
										162653
									],
									[
										162903,
										162910
									],
									[
										163084,
										163091
									],
									[
										163368,
										163375
									],
									[
										163498,
										163505
									],
									[
										163521,
										163528
									],
									[
										163597,
										163604
									],
									[
										163616,
										163623
									],
									[
										163682,
										163689
									],
									[
										163890,
										163897
									],
									[
										163932,
										163939
									],
									[
										164178,
										164185
									],
									[
										164426,
										164433
									],
									[
										164611,
										164618
									],
									[
										164669,
										164676
									],
									[
										164891,
										164898
									],
									[
										164914,
										164921
									],
									[
										165008,
										165015
									],
									[
										165206,
										165213
									],
									[
										165352,
										165359
									],
									[
										165472,
										165479
									],
									[
										165628,
										165635
									],
									[
										165822,
										165829
									],
									[
										166092,
										166099
									],
									[
										166250,
										166257
									],
									[
										166501,
										166508
									],
									[
										166787,
										166794
									],
									[
										167029,
										167036
									],
									[
										167262,
										167269
									],
									[
										167497,
										167504
									],
									[
										167730,
										167737
									],
									[
										167913,
										167920
									],
									[
										167929,
										167936
									],
									[
										168095,
										168102
									],
									[
										168142,
										168149
									],
									[
										168206,
										168213
									],
									[
										168252,
										168259
									],
									[
										168380,
										168387
									],
									[
										168446,
										168453
									],
									[
										168520,
										168527
									],
									[
										168572,
										168579
									],
									[
										168755,
										168762
									],
									[
										168829,
										168836
									],
									[
										168882,
										168889
									],
									[
										168935,
										168942
									],
									[
										168987,
										168994
									],
									[
										169238,
										169245
									],
									[
										169423,
										169430
									],
									[
										169481,
										169488
									],
									[
										169703,
										169710
									],
									[
										169726,
										169733
									],
									[
										169820,
										169827
									],
									[
										170020,
										170027
									],
									[
										170166,
										170173
									],
									[
										170361,
										170368
									],
									[
										170600,
										170607
									],
									[
										170872,
										170879
									],
									[
										171034,
										171041
									],
									[
										171205,
										171212
									],
									[
										171455,
										171462
									],
									[
										171644,
										171651
									],
									[
										171860,
										171867
									],
									[
										172286,
										172293
									],
									[
										172585,
										172592
									],
									[
										172920,
										172927
									],
									[
										173254,
										173261
									],
									[
										173565,
										173572
									],
									[
										173683,
										173690
									],
									[
										173812,
										173819
									],
									[
										173963,
										173970
									],
									[
										174212,
										174219
									],
									[
										174552,
										174559
									],
									[
										174887,
										174894
									],
									[
										175277,
										175284
									],
									[
										175452,
										175459
									],
									[
										175697,
										175704
									],
									[
										175939,
										175946
									],
									[
										176242,
										176249
									],
									[
										176424,
										176431
									],
									[
										176585,
										176592
									],
									[
										176871,
										176878
									],
									[
										177060,
										177067
									],
									[
										177312,
										177319
									],
									[
										177634,
										177641
									],
									[
										177821,
										177828
									],
									[
										178009,
										178016
									],
									[
										178338,
										178345
									],
									[
										178520,
										178527
									],
									[
										178681,
										178688
									],
									[
										178967,
										178974
									],
									[
										179156,
										179163
									],
									[
										179408,
										179415
									],
									[
										179730,
										179737
									],
									[
										179917,
										179924
									],
									[
										180105,
										180112
									],
									[
										180474,
										180481
									],
									[
										180766,
										180773
									],
									[
										181114,
										181121
									],
									[
										181430,
										181437
									],
									[
										181712,
										181719
									],
									[
										181897,
										181904
									],
									[
										182235,
										182242
									],
									[
										182411,
										182418
									],
									[
										182569,
										182576
									],
									[
										182911,
										182918
									],
									[
										183060,
										183067
									],
									[
										183208,
										183215
									],
									[
										183350,
										183357
									],
									[
										183562,
										183569
									],
									[
										183863,
										183870
									],
									[
										184170,
										184177
									],
									[
										185566,
										185573
									],
									[
										185960,
										185967
									],
									[
										186207,
										186214
									],
									[
										187003,
										187010
									],
									[
										187377,
										187384
									],
									[
										187392,
										187399
									],
									[
										187428,
										187435
									],
									[
										187484,
										187491
									],
									[
										187600,
										187607
									],
									[
										187990,
										187997
									],
									[
										188337,
										188344
									],
									[
										189963,
										189970
									],
									[
										190183,
										190190
									],
									[
										190220,
										190227
									],
									[
										190285,
										190292
									],
									[
										190319,
										190326
									],
									[
										191066,
										191073
									],
									[
										191619,
										191626
									],
									[
										192352,
										192359
									],
									[
										192366,
										192373
									],
									[
										193077,
										193084
									],
									[
										193244,
										193251
									],
									[
										194570,
										194577
									],
									[
										194645,
										194652
									],
									[
										194723,
										194730
									],
									[
										194775,
										194782
									],
									[
										194834,
										194841
									],
									[
										195110,
										195117
									],
									[
										195184,
										195191
									],
									[
										195288,
										195295
									],
									[
										195593,
										195600
									],
									[
										195629,
										195636
									],
									[
										197001,
										197008
									],
									[
										198639,
										198646
									],
									[
										198651,
										198658
									],
									[
										199304,
										199311
									],
									[
										199396,
										199403
									],
									[
										200533,
										200540
									],
									[
										200637,
										200644
									],
									[
										200843,
										200850
									],
									[
										201008,
										201015
									],
									[
										203114,
										203121
									],
									[
										203228,
										203235
									],
									[
										203354,
										203361
									],
									[
										203386,
										203393
									],
									[
										203455,
										203462
									],
									[
										204018,
										204025
									],
									[
										204051,
										204058
									],
									[
										204143,
										204150
									],
									[
										204226,
										204233
									],
									[
										204430,
										204437
									],
									[
										204572,
										204579
									],
									[
										204652,
										204659
									],
									[
										204715,
										204722
									],
									[
										204811,
										204818
									],
									[
										204886,
										204893
									],
									[
										205487,
										205494
									],
									[
										205500,
										205507
									],
									[
										205631,
										205638
									],
									[
										205956,
										205963
									],
									[
										205970,
										205977
									],
									[
										206121,
										206128
									],
									[
										206324,
										206331
									],
									[
										206358,
										206365
									],
									[
										206544,
										206551
									],
									[
										206581,
										206588
									],
									[
										206751,
										206758
									],
									[
										208515,
										208522
									],
									[
										208682,
										208689
									],
									[
										209092,
										209099
									],
									[
										209260,
										209267
									],
									[
										209273,
										209280
									],
									[
										209635,
										209642
									],
									[
										209684,
										209691
									],
									[
										209913,
										209920
									],
									[
										210046,
										210053
									],
									[
										210271,
										210278
									],
									[
										210447,
										210454
									],
									[
										211546,
										211553
									],
									[
										211858,
										211865
									],
									[
										211895,
										211902
									],
									[
										211950,
										211957
									],
									[
										212042,
										212049
									],
									[
										212139,
										212146
									],
									[
										212370,
										212377
									],
									[
										214896,
										214903
									],
									[
										215011,
										215018
									],
									[
										216099,
										216106
									],
									[
										217259,
										217266
									],
									[
										218169,
										218176
									],
									[
										218236,
										218243
									],
									[
										218598,
										218605
									],
									[
										218902,
										218909
									],
									[
										219352,
										219359
									],
									[
										219699,
										219706
									],
									[
										220965,
										220972
									],
									[
										222153,
										222160
									],
									[
										222326,
										222333
									],
									[
										224303,
										224310
									],
									[
										224996,
										225003
									],
									[
										225218,
										225225
									],
									[
										225432,
										225439
									],
									[
										225704,
										225711
									],
									[
										225810,
										225817
									],
									[
										226711,
										226718
									],
									[
										226737,
										226744
									],
									[
										226791,
										226798
									],
									[
										230834,
										230841
									],
									[
										231152,
										231159
									],
									[
										231397,
										231404
									],
									[
										231453,
										231460
									],
									[
										231561,
										231568
									],
									[
										232272,
										232279
									],
									[
										232345,
										232352
									],
									[
										232412,
										232419
									],
									[
										232995,
										233002
									],
									[
										233847,
										233854
									],
									[
										234149,
										234156
									],
									[
										234501,
										234508
									],
									[
										236489,
										236496
									],
									[
										238731,
										238738
									],
									[
										239711,
										239718
									],
									[
										239821,
										239828
									],
									[
										241735,
										241742
									],
									[
										242115,
										242122
									],
									[
										243443,
										243450
									],
									[
										243621,
										243628
									],
									[
										244100,
										244107
									],
									[
										244833,
										244840
									],
									[
										246104,
										246111
									],
									[
										246364,
										246371
									],
									[
										246444,
										246451
									],
									[
										247079,
										247086
									],
									[
										247130,
										247137
									],
									[
										247861,
										247868
									],
									[
										249028,
										249035
									],
									[
										250319,
										250326
									],
									[
										250640,
										250647
									],
									[
										250689,
										250696
									],
									[
										251614,
										251621
									],
									[
										252346,
										252353
									],
									[
										252584,
										252591
									],
									[
										255338,
										255345
									],
									[
										255779,
										255786
									],
									[
										260614,
										260621
									],
									[
										263171,
										263178
									],
									[
										263580,
										263587
									],
									[
										266497,
										266504
									],
									[
										266827,
										266834
									],
									[
										267039,
										267046
									],
									[
										267509,
										267516
									],
									[
										268028,
										268035
									],
									[
										268160,
										268167
									],
									[
										269254,
										269261
									],
									[
										269566,
										269573
									],
									[
										270207,
										270214
									],
									[
										270544,
										270551
									],
									[
										271473,
										271480
									],
									[
										271538,
										271545
									],
									[
										271670,
										271677
									],
									[
										271850,
										271857
									],
									[
										272031,
										272038
									],
									[
										272216,
										272223
									],
									[
										272477,
										272484
									],
									[
										272695,
										272702
									],
									[
										272816,
										272823
									],
									[
										272960,
										272967
									],
									[
										273229,
										273236
									],
									[
										273382,
										273389
									],
									[
										273761,
										273776
									],
									[
										274072,
										274087
									],
									[
										274304,
										274319
									],
									[
										274565,
										274580
									],
									[
										274893,
										274908
									],
									[
										275204,
										275219
									],
									[
										275436,
										275451
									],
									[
										275697,
										275712
									],
									[
										275989,
										276004
									],
									[
										276320,
										276335
									],
									[
										276737,
										276752
									],
									[
										277136,
										277151
									],
									[
										277455,
										277470
									],
									[
										277766,
										277781
									],
									[
										277998,
										278013
									],
									[
										278259,
										278274
									],
									[
										278587,
										278602
									],
									[
										278898,
										278913
									],
									[
										279130,
										279145
									],
									[
										279391,
										279406
									],
									[
										279683,
										279698
									],
									[
										280014,
										280029
									],
									[
										280431,
										280446
									],
									[
										280830,
										280845
									],
									[
										281134,
										281149
									],
									[
										281516,
										281539
									],
									[
										281946,
										281967
									],
									[
										282116,
										282137
									],
									[
										282303,
										282324
									],
									[
										282503,
										282524
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								282306,
								282306
							]
						],
						"settings":
						{
							"default_dir": "/Volumes/Source/srcO/MulleCivetWeb/src",
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 21,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1583501610.88,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 102904.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/MulleCivetWebRequest.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10934,
						"regions":
						{
						},
						"selection":
						[
							[
								4723,
								4723
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583499531.52,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 2896.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test/10_generated/MulleCivetWebTextResponse/test.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583410557.74,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test/50_chunked/chucky.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5635,
						"regions":
						{
						},
						"selection":
						[
							[
								1074,
								1074
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583499565.19,
							"tabs_extra_last_activated_sheet_index": 7,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 179.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/MulleCivetWebResponse.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10317,
						"regions":
						{
						},
						"selection":
						[
							[
								6318,
								6339
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583499556.47,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 4102.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "test/40_curled/curly.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4902,
						"regions":
						{
						},
						"selection":
						[
							[
								1976,
								2020
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583491315.55,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 970.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "test/20_oneshot/oneshot-info.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3725,
						"regions":
						{
						},
						"selection":
						[
							[
								2986,
								2986
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583416621.69,
							"tabs_extra_last_activated_sheet_index": 8,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "test/20_oneshot/oneshot.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3542,
						"regions":
						{
						},
						"selection":
						[
							[
								2709,
								2709
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1583416825.03,
							"tabs_extra_last_activated_sheet_index": 9,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 51.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 124.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "MulleCivetWeb.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"_MulleObjCConc",
				"MulleObjCContainerFoundation/src/NSArray/_MulleObjCConcreteArray.m"
			],
			[
				"ns-map",
				"MulleObjCContainerFoundation/src/NSDictionary/ns-map-table.m"
			],
			[
				"NSDictioPla",
				"MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.m"
			],
			[
				"NSDictionaryPlace",
				"MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.h"
			],
			[
				"NSBundle+",
				"MulleObjCOSFoundation/src/Darwin/NSBundle+Darwin.m"
			],
			[
				"",
				"/Volumes/Source/srcO/MulleFoundation/MulleObjCDecimalFoundation/.mulle/share/match.d/80-source--startup-sources"
			],
			[
				"80-source--startup-sources",
				"MulleObjCDecimalFoundation/.mulle/share/match.d/80-source--startup-sources"
			],
			[
				"NSPro",
				"MulleObjCStandardFoundation/src/PropertyList/NSPropertyListSerialization.m"
			],
			[
				"NSNum",
				"MulleObjCStandardFoundation/src/Value/NSNumber.m"
			],
			[
				"NSFileManage",
				"MulleObjCOSFoundation/src/Base/NSFileManager.m"
			],
			[
				"NSDateFor",
				"MulleObjCStandardFoundation/src/Locale/NSDateFormatter.m"
			],
			[
				"NSCalendarDa",
				"MulleObjCStandardFoundation/src/Locale/NSCalendarDate.h"
			],
			[
				"Stream.",
				"MulleObjCStandardFoundation/src/PropertyList/Stream/_MulleObjCDataStream.h"
			],
			[
				"NSPropert",
				"MulleObjCStandardFoundation/src/PropertyList/NSPropertyListSerialization.m"
			],
			[
				"Start",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StartupC.cmake"
			],
			[
				"bigset",
				"mulle-container/src/set/mulle-bigset.c"
			],
			[
				"ve",
				"mulle-container/dox/VERBS.md"
			],
			[
				"c-sourcetree-",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/bin/c-sourcetree-update"
			],
			[
				"cmake-source",
				"mulle-objc-developer/.mulle-sde/share/bin/cmake-source-update"
			],
			[
				"sourcetree-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/sourcetree-callback"
			],
			[
				"language",
				"mulle-sde-extension/src/mulle-sde/extension/project/extension/src/VENDOR_NAME/PROJECT_NAME/language"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 550.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/home/src/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"core",
				"/Volumes/Source/srcO/mulle-core/mulle-core.sublime-project"
			],
			[
				"oncu",
				"/home/src/srcO/mulle-concurrent/mulle-concurrent/mulle-concurrent.sublime-project"
			],
			[
				"test",
				"/home/src/srcM/mulle-test/mulle-test.sublime-project"
			],
			[
				"mulle-pro",
				"~/srcS/mulle-project/mulle-project.sublime-project"
			]
		],
		"width": 418.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 584.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
