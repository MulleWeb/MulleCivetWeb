{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"UTF",
				"initWithUTF8String:\tinstancetype initWithUTF8String:(char *)"
			],
			[
				"initWit",
				"initWithCString:\tinstancetype initWithCString:(char *)"
			],
			[
				"mu",
				"mulle_objc_infraclass_alloc_instance"
			],
			[
				"init_",
				"init_thread\tvoid *(*)(const struct mg_context *, int) init_thread"
			],
			[
				"NSD",
				"NSData"
			],
			[
				"MULL",
				"MulleHTTPTransferEncodingChunked"
			],
			[
				"is",
				"is_ssl\tint is_ssl"
			],
			[
				"ur",
				"uri"
			],
			[
				"NS",
				"NSDateFormatter"
			],
			[
				"ch",
				"characterSet\tabc"
			],
			[
				"NSU",
				"NSURL+MulleQueryDictionary.h"
			],
			[
				"compo",
				"components\tabc"
			],
			[
				"key",
				"keyvalueComponents\tabc"
			],
			[
				"Mu",
				"MulleObjCValueFoundation"
			],
			[
				"NSC",
				"NSCharacterSet"
			],
			[
				"mull",
				"MulleObjCObjectContainerDescriptionInfo"
			],
			[
				"Mulle",
				"MulleObjCObjectContainerDescriptionInfo"
			],
			[
				"string",
				"stringWithUTF8String:\tinstancetype stringWithUTF8String:(char *)"
			],
			[
				"MulleObjCGetA",
				"MulleObjCObjectGetAllocator\tstruct mulle_allocator * MulleObjCObjectGetAllocator(id obj)"
			],
			[
				"proper",
				"propertyListUTF8DataToStream"
			],
			[
				"inden",
				"indentFunction"
			],
			[
				"NU",
				"NSUInteger\tNSUInteger"
			],
			[
				"mem",
				"memberMethod\tabc"
			],
			[
				"replace",
				"replaceBytesInRange\t(NSMutableData.m)"
			],
			[
				"pls",
				"plist_format_info\tabc"
			],
			[
				"pl",
				"plist_format_info\tabc"
			],
			[
				"n_",
				"_n_printor"
			],
			[
				"new",
				"newWithBOOL\tabc"
			],
			[
				"_v",
				"_headerValueDescriptionMethod\tabc"
			],
			[
				"perfor",
				"performSelector\t(NSURL.m)"
			],
			[
				"user",
				"userInfo\tabc"
			],
			[
				"erro",
				"errorWithName\tabc"
			],
			[
				"jsm",
				"jsmntok_t\tabc"
			],
			[
				"strin",
				"stringWithFormat\t(NSMutableString.m)"
			],
			[
				"parse",
				"parseBytes\t(MulleObjCHTTPHeaderParser.m)"
			],
			[
				"pars",
				"parseData\t(MulleObjCJSMNParser.h)"
			],
			[
				"MUl",
				"MulleObjCJSMNParser\tabc"
			],
			[
				"MulleOb",
				"MulleObjCJSMNParser\t(github-json.m)"
			],
			[
				"mulle_bu",
				"mulle_buffer_get_bytes"
			],
			[
				"UTF8",
				"UTF8String\t(NSMutableString.m)"
			],
			[
				"de",
				"description"
			],
			[
				"setHe",
				"setRequestHeaders\t(MulleObjCCurl.m)"
			],
			[
				"range",
				"rangeOfString\t(NSMutableString.m)"
			],
			[
				"mulle_buffer_ad",
				"mulle_buffer_add_byte\t(NSMutableString.m)"
			],
			[
				"mulle_buffer_get",
				"mulle_buffer_get_bytes"
			],
			[
				"mulle_buffer_init",
				"mulle_buffer_init_with_static_bytes\t(NSMutableString.m)"
			],
			[
				"mulle_",
				"mulle_utf8_t\tabc"
			],
			[
				"Mule",
				"MulleObjCCurl.h"
			],
			[
				"mulle",
				"MulleObjCCurl.h"
			],
			[
				"_o",
				"_recordsKeyOrder\tabc"
			],
			[
				"set",
				"setRecordsKeyOrder\t(MulleObjCHTTPHeaderParser.m)"
			],
			[
				"_",
				"_headers\tabc"
			],
			[
				"remove",
				"removeAllObjects\tabc"
			],
			[
				"import",
				"import-private.h"
			],
			[
				"isE",
				"isEqualToData\t(NSFileManager.m)"
			],
			[
				"Curl",
				"CURLcode\tabc"
			],
			[
				"u",
				"update_safe_clobber"
			],
			[
				"NSError",
				"NSLocalizedFailureReasonErrorKey\tNSString * NSLocalizedFailureReasonErrorKey"
			],
			[
				"mulleS",
				"mulleSetCurrentErrorWithDomain:code:userInfo:\tvoid mulleSetCurrentErrorWithDomain:(NSString *) code:(NSInteger) userInfo:(NSDictionary *)"
			],
			[
				"MU",
				"MulleObjCCurl"
			],
			[
				"par",
				"parseContentsOfURLString:byPostingData:\tid parseContentsOfURLString:(id) byPostingData:(id)"
			],
			[
				"_Pa",
				"_parser\tid<MulleObjCCurlParser> _parser"
			],
			[
				"in",
				"interface"
			],
			[
				"def",
				"setDefaultGroup"
			],
			[
				"des",
				"descriptionWithCalendarFormat:locale:\tNSString * descriptionWithCalendarFormat:(NSString *) locale:(id)"
			],
			[
				"stri",
				"stringForObjectValue: (InBase)\tNSString * stringForObjectValue:(id)"
			],
			[
				"data",
				"dataWithBytes:length:\tinstancetype dataWithBytes:(void *) length:(NSUInteger)"
			],
			[
				"firs",
				"firstWeekday\tabc"
			],
			[
				"monthFirst",
				"monthFirstWeekday\tabc"
			],
			[
				"_mi",
				"_minimumDaysInFirstWeek\t(NSCalendar.m)"
			],
			[
				"dat",
				"dateFromComponents\t(NSCalendar.h)"
			],
			[
				"day",
				"daysInYear\tabc"
			],
			[
				"numbe",
				"numberOfDaysInCommonEraOfDay:1"
			],
			[
				"mulle_e",
				"mulle_not_found_e"
			],
			[
				"mulle-con",
				"mulle-container-operation.h\t(_mulle-map.c)"
			],
			[
				"no",
				"notakey"
			],
			[
				"_s",
				"_storage"
			],
			[
				"thre",
				"threadDictionary"
			],
			[
				"_w",
				"_write_index\tabc"
			],
			[
				"min",
				"min_amount"
			],
			[
				"mulle_n",
				"mulle_nonnull_first_second"
			],
			[
				"_mulle_queue_re",
				"_mulle_queue_remove_all"
			],
			[
				"_em",
				"_emit_cmake_include_lookup"
			],
			[
				"PO",
				"PROJECT_NAME=\"${OPTION_NAME"
			],
			[
				"PRO",
				"PROJECT_LANGUAGE"
			],
			[
				"DI",
				"DIALECT_EXTENSION"
			],
			[
				"PRIO",
				"PROJECT_DIALECT"
			],
			[
				"C_RESE",
				"C_RESET_BOLD"
			],
			[
				"UP",
				"OPTION_UPGRADE"
			],
			[
				"MULLE_EXC",
				"MULLE_EXECUTABLE_NAME"
			],
			[
				"OP",
				"OPTION_FILE"
			],
			[
				"sed",
				"sed_escaped_key"
			],
			[
				"MULLE_",
				"MULLE_TRACE"
			],
			[
				"MULLE",
				"MULLE_VIRTUAL_ROOT\t(mulle-env-environment.sh)"
			],
			[
				"file",
				"filenameenv"
			],
			[
				"SOU",
				"SOURCETREE_FIX_FILE"
			],
			[
				"MULLE_SD",
				"MULLE_SDE_INSTALLED_EXTENSIONS"
			],
			[
				"OPTION",
				"OPTION_RECURSE"
			],
			[
				"mulle-env",
				"mulle-env-bash-completion"
			],
			[
				"MULLE_V",
				"MULLE_VIRTUAL_ROOT\t(mulle-env)"
			],
			[
				"DEF",
				"DEFAULT_IFS\t(mulle-env)"
			],
			[
				"OPT",
				"OPTION_TYPE"
			],
			[
				"fetch_plug",
				"fetch_plugin_load_all\t(mulle-fetch-plugin.sh)"
			],
			[
				"log_",
				"log_error"
			],
			[
				"MULLE_MO",
				"MULLE_MONITOR_LIBEXEC_DIR\t(mulle-monitor)"
			],
			[
				"MULLE_M",
				"MULLE_MONITOR_ETC_DIR"
			],
			[
				"DF",
				"DEFAULT_IFS"
			],
			[
				"writ",
				"write_dependency_file"
			],
			[
				"old",
				"oldflavor"
			],
			[
				"__get",
				"__get_user_style_flavor"
			],
			[
				"MULLE_ECE",
				"MULLE_EXECUTABLE_NAME"
			],
			[
				"CMAKE_SO",
				"CMAKE_SOURCETREE_UPDATE_FLAGS\t(cmake-sourcetree-update-task.sh)"
			],
			[
				"slo",
				"sloppy_distribute"
			],
			[
				"MO",
				"MULLE_FLAG_MOTD\t(mulle-craft)"
			],
			[
				"MULLE_FLAG",
				"MULLE_FLAG_MOTD\t(mulle-craft)"
			],
			[
				"CMake",
				"CMakeSourcesAndHeaders.txt"
			],
			[
				"MULLE_SOURC",
				"MULLE_SOURCETREE_SHARED_DIR"
			],
			[
				"a",
				"address"
			],
			[
				"node",
				"nodemarks_contain_norequire"
			],
			[
				"ne",
				"next_projectdir"
			],
			[
				"__c",
				"__concat_projectdir_address"
			],
			[
				"db_get",
				"db_get_filename_for_uuid"
			],
			[
				"update_",
				"update_safe_remove_node"
			],
			[
				"sa",
				"update_safe_remove_node"
			],
			[
				"_do",
				"__docd_preamble"
			],
			[
				"soure",
				"sourcetree"
			],
			[
				"OPTION_C",
				"OPTION_CALLBACK_ROOT"
			],
			[
				"db_clear",
				"db_clear_ready"
			]
		]
	},
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 364.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Set Syntax: C++"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 429.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-runtime/test-compiler/0_compiler/metaabi/metaabi-struct-rval.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/20_oneshot/oneshot-info.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_curled/curly.stdout",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+MulleCivetWeb.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+MulleCivetWeb.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebRequest.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebRequest.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_curled/curly.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/civetweb/src/civetweb.c",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chucky.m",
		"/Volumes/Source/srcO/MulleCivetWeb/test/40_chunked/chunky.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebServer.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/MulleCivetWebResponse.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSDate+MulleHTTP.m",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+NSDictionary.h",
		"/Volumes/Source/srcO/MulleCivetWeb/src/NSURL+NSDictionary.m",
		"/home/src/srcO/MulleFoundation/MulleObjCStandardFoundation/src/CharacterSet/URLQueryAllowedCharacterSet.m",
		"/home/src/srcO/MulleCivetWeb/src/import-private.h",
		"/Volumes/Source/srcC/Dienstag/Dienstag/Dienstag.xcodeproj/project.pbxproj",
		"/home/src/srcO/MulleFoundation/MulleObjCCurlFoundation/stash/curl/CMakeLists.txt",
		"/home/src/srcO/MulleFoundation/MulleObjCCurlFoundation/craftinfo/openssl/bin/openssl-build",
		"/Volumes/Source/srcO/Tests/long-long-bug/int.c",
		"/Volumes/Source/srcO/Tests/long-long-bug/long-long.c",
		"/Volumes/Source/srcO/Tests/long-long-bug/long-long-fp.c",
		"/home/src/srcO/MulleFoundation/MulleFoundation/stash/openssl/INSTALL.MacOS",
		"/Volumes/VM/llvm/mulle-clang-90/src/mulle-clang/bin/install-mulle-clang",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/test/NSString/simplematch.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/test/NSString/simplematch.debug",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSString+Regex.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/test/simple/simple.debug",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/src/NSData+MulleObjCZlibFoundation.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCZlibFoundation/src/NSData+MulleObjCZlibFoundation.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSArray+Regex.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSArray+Regex.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCRegexFoundation/src/NSString+Regex.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCCurlFoundation/README.md",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCCurlFoundation/craftinfo/curl/definition/set/CMAKEFLAGS",
		"/Volumes/Source/srcO/Tests/long-long-bug/Makefile",
		"/Volumes/Source/srcO/Tests/long-long-bug/long.c",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_NSArrayPlaceholder.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/NSValue.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/NSNumber.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Value/_MulleObjCConcreteValue.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+Sprintf.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+NSData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSPipe+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSFileHandle+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Base/NSFileHandle.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Undo/NSUndoManager.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSNumberFormatter.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDateFormatter.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Posix/NSBundle+Posix.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Linux/NSProcessInfo+Linux.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/FreeBSD/NSProcessInfo+FreeBSD.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/Darwin/NSProcessInfo+Darwin.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCOSFoundation/src/BSD/NSTask+BSD.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCKVCFoundation/src/NSObject+KeyValueCoding.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCKVCFoundation/src/NSNumber+MulleObjCKVCArithmetic.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSMutableString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSConstantString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCUTF32String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCUTF16String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCTaggedPointerChar7String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCTaggedPointerChar5String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/NSString+ClassCluster.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/String/_MulleObjCASCIIString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/NSMutableData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/NSData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/Data/_MulleObjCConcreteMutableData.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/test/Exception/range-validate.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Search.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableString+Search.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_MulleObjCEmptyDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_MulleObjCDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/NSMutableArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSSet/NSSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSSet/ns-hash-table.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/NSDictionary.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/NSDictionary+NSArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/ns-map-table.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/include-private.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/NSArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_MulleObjCEmptyArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCContainerFoundation/src/NSArray/_MulleObjCConcreteArray.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCValueFoundation/src/include-private.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/mulle-foundation-universeconfiguration.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Exception/NSException+String.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Search.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/MulleObjCContainerDescription.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSArray/NSArray+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSDictionary+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSDictionary/NSDictionary+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Container/NSSet/NSSet+NSString.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSCalendarDate.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSLocale.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSTimeZone.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSNumber+NSLocale.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/MulleObjCStandardFoundationString.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSLocalizedDateFactory.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSMutableString+Search.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Escaping.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDate+NSDateFormatter.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/Locale/NSDate+NSCalendarDate.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+NSCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/MulleObjCCharacterBitmap.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/_MulleObjCConcreteBitmapCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSCharacterSet.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSNumber+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/PropertyList/Printing/NSDate+PropertyListPrinting.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Components.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Components.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+CharacterSetSearch.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/MulleObjCStandardFoundation.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSScanner.m",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+NSCharacterSet.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+CharacterSetSearch.h",
		"/Volumes/Source/srcO/MulleFoundation/MulleObjCStandardFoundation/src/String/NSString+Escaping.h"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 139.454545455,
		"where_history":
		[
			"",
			"mulleHTTPDescription"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"arguments:(va_list) args",
			"sendChunkedHeaderData",
			"MulleObjCInstanceGetAllocator",
			"return( header->value);",
			"is_sskl",
			"URLString",
			"getInfo( self)",
			"create_instance",
			".length",
			"[[MulleCivetWebTextResponse new] autorelease]",
			"num_listening_sockets",
			"mg_get_server_ports",
			"listening_sockets",
			"socket",
			"master_thread",
			"master_thread_run",
			"callbacks.init_thread",
			"user_thread_ptr",
			"_server_name",
			"user_data",
			"init_thread",
			"_beginthreadex_beginthreadex",
			"_beginthreadex",
			"mg_start_thread_with_id",
			"TransferEncoding",
			"MulleCivetWebResponse>",
			"MulleCivetWebResponse",
			"containsTransferEncoding",
			"clearContentData",
			"setOnlyHeader",
			"onlyHe",
			"writeWebResponse",
			"mg_send_chunk",
			"mulleParameterDictionary",
			"server:",
			"\"NSURL+MulleCivetWeb.h\"",
			"getInfo(",
			"getInfo( self)",
			"_requestHandler webResponseForException",
			"webResponseForWebRequest",
			"mulleDictionaryByRemovingPercentEncodingWithLineSeparator",
			"getURLParameterAllowedWithoutAmpersandAndEqualCharacterSet",
			"getInfo",
			"MulleURLUTF8Parts",
			"mulleURLEscapedAllowedCharacterSet",
			"\"NSURL+MulleQueryDictionary.h\"",
			"_charset",
			"characterSet",
			"URLUserAllowedCharacterSet",
			"HTTPDescription",
			"scap"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"URLWithString",
			"\"NSURL+NSDictionary.h\"",
			"_formatter",
			"formatter",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 51.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 124.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"_MulleObjCConc",
				"MulleObjCContainerFoundation/src/NSArray/_MulleObjCConcreteArray.m"
			],
			[
				"ns-map",
				"MulleObjCContainerFoundation/src/NSDictionary/ns-map-table.m"
			],
			[
				"NSDictioPla",
				"MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.m"
			],
			[
				"NSDictionaryPlace",
				"MulleObjCContainerFoundation/src/NSDictionary/_NSDictionaryPlaceholder.h"
			],
			[
				"NSBundle+",
				"MulleObjCOSFoundation/src/Darwin/NSBundle+Darwin.m"
			],
			[
				"",
				"/Volumes/Source/srcO/MulleFoundation/MulleObjCDecimalFoundation/.mulle/share/match.d/80-source--startup-sources"
			],
			[
				"80-source--startup-sources",
				"MulleObjCDecimalFoundation/.mulle/share/match.d/80-source--startup-sources"
			],
			[
				"NSPro",
				"MulleObjCStandardFoundation/src/PropertyList/NSPropertyListSerialization.m"
			],
			[
				"NSNum",
				"MulleObjCStandardFoundation/src/Value/NSNumber.m"
			],
			[
				"NSFileManage",
				"MulleObjCOSFoundation/src/Base/NSFileManager.m"
			],
			[
				"NSDateFor",
				"MulleObjCStandardFoundation/src/Locale/NSDateFormatter.m"
			],
			[
				"NSCalendarDa",
				"MulleObjCStandardFoundation/src/Locale/NSCalendarDate.h"
			],
			[
				"Stream.",
				"MulleObjCStandardFoundation/src/PropertyList/Stream/_MulleObjCDataStream.h"
			],
			[
				"NSPropert",
				"MulleObjCStandardFoundation/src/PropertyList/NSPropertyListSerialization.m"
			],
			[
				"Start",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StartupC.cmake"
			],
			[
				"bigset",
				"mulle-container/src/set/mulle-bigset.c"
			],
			[
				"ve",
				"mulle-container/dox/VERBS.md"
			],
			[
				"c-sourcetree-",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/bin/c-sourcetree-update"
			],
			[
				"cmake-source",
				"mulle-objc-developer/.mulle-sde/share/bin/cmake-source-update"
			],
			[
				"sourcetree-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/sourcetree-callback"
			],
			[
				"language",
				"mulle-sde-extension/src/mulle-sde/extension/project/extension/src/VENDOR_NAME/PROJECT_NAME/language"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 550.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/home/src/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"core",
				"/Volumes/Source/srcO/mulle-core/mulle-core.sublime-project"
			],
			[
				"oncu",
				"/home/src/srcO/mulle-concurrent/mulle-concurrent/mulle-concurrent.sublime-project"
			],
			[
				"test",
				"/home/src/srcM/mulle-test/mulle-test.sublime-project"
			],
			[
				"mulle-pro",
				"~/srcS/mulle-project/mulle-project.sublime-project"
			]
		],
		"width": 418.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 584.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
